
                      Die Debian GNU/Linux-FAQ


---------------------------------------------------------------------
                                  
                            Version 10.0

---------------------------------------------------------------------

Copyright Â© 1996-2019 Software in the Public Interest

    Permission is granted to make and distribute verbatim copies of
Â Â Â  this document provided the copyright notice and this permission
    notice are preserved on all copies.

    Permission is granted to copy and distribute modified versions of
Â Â Â  this document under the conditions for verbatim copying, provided
    that the entire resulting derived work is distributed under the
    terms of a permission notice identical to this one.

    Permission is granted to copy and distribute translations of this
    document into another language, under the above conditions for
Â Â Â  modified versions, except that this permission notice may be
    included in translations approved by the Free Software Foundation
    instead of in the original English.

12. August 2019

Zusammenfassung

Dieses Dokument beantwortet hÃ¤ufig gestellte Fragen Ã¼ber Debian GNU/
Linux.

---------------------------------------------------------------------

Inhaltsverzeichnis

1. Definitionen und Ãœberblick

    1.1. Was ist diese FAQ?
    1.2. Was ist Debian GNU/Linux?
    1.3. OK, jetzt weiÃŸ ich, was Debian ist ... aber was ist Linux?!
    1.4. Befasst sich Debian nur mit GNU/Linux?
    1.5. Was ist der Unterschied zwischen Debian GNU/Linux und
        anderen Linux-Distributionen? Warum sollte ich Debian wÃ¤hlen
        statt einer anderen Distribution?
    1.6. Wie fÃ¼gt sich das Debian-Projekt in das GNU-Projekt der Free
        Software Foundation ein und lÃ¤sst es sich damit vergleichen?
    1.7. Wie spricht man Debian aus und was bedeutet das?

2. Debian GNU/Linux bekommen und installieren

    2.1. Was ist die aktuelle Version von Debian?
    2.2. Gibt es Paketaktualisierungen in Â»StableÂ«?
    2.3. Woher/wie kann ich mir die Debian-Installations-Images
        beschaffen?
    2.4. Wie kann ich Debian von CD-ROM installieren?
    2.5. Warum enthÃ¤lt eine offiziell als Stable verÃ¶ffentlichte
        CD-ROM symbolische Links fÃ¼r Â»FrozenÂ« und Â»UnstableÂ«? Ich
        dachte, diese CD enthÃ¤lt Â»StableÂ«!
    2.6. Kann ich Debian direkt Ã¼ber das Internet bekommen und
        installieren?
    2.7. Gibt es alternative Strategien, um den Debian Installer zu
        booten?

3. Eine Debian-Distribution auswÃ¤hlen

    3.1. Welche Debian-Distribution (Stable/Testing/Unstable) ist
        geeignet fÃ¼r mich?

        3.1.1. Sie haben mir empfohlen, Stable zu installieren.
            Allerdings wird unter Stable bestimmte Hardware nicht
            erkannt oder funktioniert nicht richtig. Was soll ich
            tun?
        3.1.2. Gibt es unterschiedliche Versionen eines Pakets in
            unterschiedlichen Distributionen?
        3.1.3. Die stabile Distribution enthÃ¤lt wirklich eine ganze
            Menge ziemlich veralteter Pakete, wie an Kde, Gnome, Xorg
            oder sogar dem Kernel deutlich erkennbar ist. Warum ist
            das so?
        3.1.4. Wenn ich zu einer anderen Distribution wechseln
            wollte, ginge das?
        3.1.5. Sollte man Stable, Testing oder Unstable installieren?
        3.1.6. Hier ist die Rede davon, dass Testing Â»kaputtÂ« gehen
            kann. Was soll das heiÃŸen?
        3.1.7. Wie kann es sein, dass Testing monatelang beschÃ¤digt
            ist? WÃ¼rden die in Unstable eingepflegten
            Fehlerkorrekturen nicht direkt in Testing einflieÃŸen?
        3.1.8. Vom Standpunkt eines Systemverwalters her gesehen:
            Welche Distribution verlangt mehr Aufmerksamkeit?
        3.1.9. Was passiert, wenn eine neue Version von Debian
            verÃ¶ffentlicht wird?
        3.1.10. Ich habe einen Desktop-Rechner/Rechner-Cluster mit
            Debian. Wie kann ich herausfinden, welche Distribution
            darauf lÃ¤uft?
        3.1.11. Augenblicklich verwende ich Stable. Kann ich zu
            Testing oder Unstable wechseln? Und wenn, wie?
        3.1.12. Im Augenblick verwende ich Testing (bullseye). Was
            wird passieren, wenn eine neue VerÃ¶ffentlichung
            freigegeben wird? Werde ich weiterhin Testing haben oder
            wird auf meinem Rechner die neue Stable-Distribution
            laufen?
        3.1.13. Ich bin noch immer verwirrt. Was sagten Sie, soll ich
            installieren?

    3.2. Aber was ist mit Knoppix, Linux Mint Debian Edition, Ubuntu
        und all den anderen Distributionen?

        3.2.1. Ich weiÃŸ jetzt, dass Knoppix/Linux Mint Debian Edition
            /Ubuntu/ ... auf Debian basieren. Bedeutet das auch, dass
            ich die Â»aptÂ«-Paketwerkzeuge verwenden kann, wenn ich
            eine dieser Distributionen auf meiner Festplatte
            installiere?
        3.2.2. Ich habe Knoppix/Linux Mint Debian Edition/Ubuntu/...
            auf meiner Festplatte installiert. Jetzt habe ich ein
            Problem. Was soll ich tun?
        3.2.3. Ich benutze Knoppix/LMDE/Ubuntu/... und mÃ¶chte nun
            Debian verwenden. Wie steige ich um?

4. KompatibilitÃ¤tsfragen

    4.1. Auf welchen Hardware-Architekturen/Systemen lÃ¤uft Debian GNU
        /Linux?
    4.2. Welche Kernel beinhalten die Distributionen von Debian GNU/
        Linux?
    4.3. Wie kompatibel ist Debian mit anderen Linux-Distributionen?
    4.4. In welchem MaÃŸe ist der Quellcode von Debian mit anderen
        Unix-Systemen kompatibel?
    4.5. Kann ich Debian-Pakete (Â».debÂ«-Dateien) auf meinem Red Hat-/
        Slackware-/... Linux-System verwenden? Kann ich Red
        Hat-Pakete (Â».rpmÂ«-Dateien) auf meinem Debian GNU/
        Linux-System einsetzen?
    4.6. Wie soll ich ein nicht-Debian-Programm installieren?

5. FÃ¼r Debian-Systeme verfÃ¼gbare Software

    5.1. Welche Art von Anwendungen und Entwicklungs-Software ist fÃ¼r
        Debian GNU/Linux verfÃ¼gbar?
    5.2. Wer schreibt die ganzen Programme?
    5.3. Wie kann ich eine aktuelle Liste der Programme, die fÃ¼r
        Debian paketiert wurden, bekommen?
    5.4. Wie kann ich eine Entwicklungsumgebung installieren, um
        Pakete zu bauen?
    5.5. Was fehlt bei Debian GNU/Linux?
    5.6. Wieso bekomme ich die Nachricht Â»ld: cannot find -lfooÂ«,
        wenn ich Programme kompiliere? Warum gibt es keine
        libfoo.so-Dateien in den Debian-Bibliothekspaketen?
    5.7. (Wie) UnterstÃ¼tzt Debian Java?
    5.8. Wie kann ich prÃ¼fen, ob ich ein Debian-System benutze und
        welche Version es ist?
    5.9. Wie unterstÃ¼tzt Debian andere Sprachen als Englisch?
    5.10. Wo sind ezmlm/djbdns/qmail?
    5.11. Wo ist der Player fÃ¼r Flash (SWF)?
    5.12. Wo ist Google Earth?
    5.13. Wo sind die VoIP-Programme?
    5.14. Ich habe eine Karte fÃ¼r drahtloses Netzwerk, die aber nicht
        mit Linux funktioniert. Was soll ich tun?

6. Die Debian FTP-Archive

    6.1. Wie viele Debian-Distributionen gibt es?
    6.2. Was haben all diese Namen wie Etch, Lenny usw. zu bedeuten?

        6.2.1. Welche Codenamen wurden in der Vergangenheit
            verwendet?
        6.2.2. Woher stammen diese Codenamen?

    6.3. Was ist mit Â»SidÂ«?
    6.4. Was enthÃ¤lt das stable-Verzeichnis?
    6.5. Was enthÃ¤lt das testing-Verzeichnis?

        6.5.1. Wie erhÃ¤lt Testing den Â»frozenÂ«-Status?

    6.6. Was enthÃ¤lt das unstable-Verzeichnis?
    6.7. Was haben all die Verzeichnisse in den Debian-FTP-Archiven
        zu bedeuten?
    6.8. Was haben die ganzen Verzeichnisse in dists/stable/main zu
        bedeuten?
    6.9. Wo befindet sich der Quellcode?
    6.10. Was befindet sich in dem pool-Verzeichnis?
    6.11. Was ist Â»IncomingÂ«?
    6.12. Wie erstelle ich mein eigenes, apt-taugliches Paketdepot?

7. Grundlagen des Debian-Paketverwaltungssystems

    7.1. Was ist ein Debian-Paket?
    7.2. Wie ist ein binÃ¤res Debian-Pakets aufgebaut?
    7.3. Warum sind Debian-Paketdateinamen so lang?
    7.4. Was ist eine Debian-control-Datei?
    7.5. Was ist ein Debian Â»conffileÂ«?
    7.6. Was sind Debians Â»preinstÂ«-, Â»postinstÂ«-, Â»prermÂ«- und
        Â»postrmÂ«-Skripte?
    7.7. Was ist ein Essential-, Required-, Important-, Standard-, 
        Optional- oder Extra-Paket?
    7.8. Was ist ein virtuelles Paket?
    7.9. Was ist damit gemeint, dass ein Paket eine Depends-, 
        Recommends-, Suggests-, Conflicts-, Replaces- oder Provides
        -AbhÃ¤ngigkeit zu einem anderen Paket hat?
    7.10. Was bedeutet Pre-Depends (Vor-AbhÃ¤ngigkeit)?
    7.11. Was bedeutet unknown, install, remove purge und hold im
        Paket-Status?
    7.12. Wie setze ich ein Paket auf Â»holdÂ« (zurÃ¼ckhalten)?
    7.13. Wie installiere ich ein Quellpaket?
    7.14. Wie baue ich BinÃ¤rpakete aus einem Quellpaket?
    7.15. Wie kann ich selbst Debian-Pakete erstellen?

8. Die Debian-Paketverwaltungswerkzeuge

    8.1. Welche Programme bietet Debian zur Paketverwaltung an?

        8.1.1. dpkg
        8.1.2. APT
        8.1.3. aptitude
        8.1.4. synaptic
        8.1.5. tasksel
        8.1.6. Andere Paketverwaltungswerkzeuge

    8.2. Angeblich ist es mit Debian mÃ¶glich, ein derzeit laufendes
        Programm zu aktualisieren. Wie funktioniert das?
    8.3. Wie kann ich feststellen, welche Pakete bereits auf einem
        Debian-System installiert sind?
    8.4. Wie kann ich alle Dateien auflisten, die in einem
        installierten Paket enthalten sind?
    8.5. Wie kann ich herausfinden, welches Paket eine bestimmte
        Datei angelegt hat?
    8.6. Warum wird Â»foo-dataÂ« nicht entfernt, wenn ich Â»fooÂ«
        deinstalliere? Wie stelle ich sicher, dass alte unbenutzte
        Bibliothekspakete restlos entfernt werden?

9. Wie man sein Debian-System auf aktuellem Stand hÃ¤lt

    9.1. Wie kann ich mein Debian-System aktuell halten?

        9.1.1. aptitude
        9.1.2. apt-get und apt-cdrom
        9.1.3. mirror

    9.2. Muss ich in den Einzelbenutzermodus wechseln, um ein Paket
        zu aktualisieren?
    9.3. Muss ich all diese .deb-Archivdateien auf meinem Rechner
        aufbewahren?
    9.4. Wie kann ich protokollieren, welche Pakete ich meinem System
        hinzugefÃ¼gt habe? Ich mÃ¶chte gerne wissen, wann welche Pakete
        aktualisiert oder entfernt wurden!
    9.5. Kann ich das System automatisch aktualisieren lassen?
    9.6. Ich habe mehrere Rechner; wie kann ich erreichen, dass ich
        die Updates nur einmal herunterladen muss?

10. Debian und der Kernel

    10.1. Kann ich einen Kernel ohne gewisse Debian-spezifische
        Optimierungen installieren und kompilieren?
    10.2. Welche Werkzeuge zum Erzeugen eines angepassten Kernels
        stellt Debian zur VerfÃ¼gung?
    10.3. Welche Hilfsmittel stellt Debian fÃ¼r den Umgang mit Modulen
        bereit?
    10.4. Kann ich sicher ein altes Kernel-Paket deinstallieren und
        wenn ja, wie?
    10.5. Wo finde ich mehr Informationen Ã¼ber Linux-Pakete fÃ¼r
        Debian?

11. Anpassen Ihres Debian GNU/Linux-Systems

    11.1. Wie kann ich sicherstellen, dass alle Programme dieselbe
        PapiergrÃ¶ÃŸe verwenden?
    11.2. Wie lassen sich ohne Abstriche bei der Sicherheit
        PeripheriegerÃ¤te zur VerfÃ¼gung stellen?
    11.3. Wie kann ich eine Konsolen-Schriftart auf Debian-Art beim
        Systemstart laden?
    11.4. Wie kann ich die Standardeinstellung eines X11-Programms
        konfigurieren?
    11.5. Wie wird ein Debian-System hochgefahren?
    11.6. And how about Debian and traditional System V init?
    11.7. Und gibt es noch weitere MÃ¶glichkeiten, ein Debian-System
        zu booten?
    11.8. Wie geht das Paketverwaltungssystem mit Paketen um, die
        Konfigurationsdateien fÃ¼r andere Pakete enthalten?
    11.9. Wie kann ich eine durch ein Paket installierte Datei auÃŸer
        Kraft setzen, so dass stattdessen eine andere Version
        verwendet werden kann?
    11.10. Wie kann ich meine lokal erstellten Pakete in die Liste
        der verfÃ¼gbaren Pakete, die dem Paketmanagementsystem bekannt
        sind, aufnehmen?
    11.11. Einige Benutzer mÃ¶gen mawk, andere gawk; einige mÃ¶gen vim,
        andere elvis; einige trn, wieder andere tin; wie unterstÃ¼tzt
        Debian die Vielfalt?

12. UnterstÃ¼tzung fÃ¼r Debian GNU/Linux erhalten

    12.1. Welche andere Dokumentation gibt es auf einem und fÃ¼r ein
        Debian-System?
    12.2. Wo und wie kann man sich online Ã¼ber Debian austauschen?

        12.2.1. Mailinglisten
        12.2.2. Web-Foren
        12.2.3. Wiki
        12.2.4. Betreuer
        12.2.5. Usenet-Nachrichtengruppen (Newsgroups)

    12.3. Gibt es einen schnellen Weg, um nach Informationen Ã¼ber
        Debian GNU/Linux zu suchen?
    12.4. Gibt es Protokolle von bekannten Fehlern?
    12.5. Wie melde ich einen Fehler in Debian?

13. Zum Debian-Projekt beitragen

    13.1. Wie kann ich Debian-Mitglied/Debian-Entwickler werden?
    13.2. Wie kann ich Ressourcen zum Debian-Projekt beisteuern?
    13.3. Wie kann ich das Debian-Projekt finanziell unterstÃ¼tzen?

        13.3.1. Software in the Public Interest
        13.3.2. Weitere Organisationen

14. Debian GNU/Linux in einem kommerziellen Produkt verwenden

    14.1. Darf ich Debian-CDs erstellen und verkaufen?
    14.2. Kann Debian mit unfreier Software (non-free) paketiert
        werden?
    14.3. Ich erstelle eine spezielle Linux-Distribution fÃ¼r einen
        speziellen Anwendungsbereich. Kann ich Debian GNU/Linux als
        Linux-Grundsystem verwenden und meine eigenen Programme
        hinzufÃ¼gen?
    14.4. Kann ich mein kommerzielles Programm in einem
        Debian-Â»PaketÂ« ablegen, damit es auf jedem Debian-System
        mÃ¼helos installiert werden kann?

15. Zu erwartende Ã„nderungen in der nÃ¤chsten Hauptversion von Debian

    15.1. HÃ¤rten des Systems
    15.2. Erweiterte UnterstÃ¼tzung fÃ¼r nicht Englisch sprechende
        Benutzer
    15.3. Verbesserungen im Debian Installer
    15.4. Weitere (Rechner-)Architekturen
    15.5. Weitere Kernel

16. Allgemeine Informationen Ã¼ber die FAQ

    16.1. Autoren
    16.2. Feedback
    16.3. VerfÃ¼gbarkeit
    16.4. Dokumentenformat

Kapitel 1. Definitionen und Ãœberblick

1.1. Was ist diese FAQ?

    Dieses Dokument enthÃ¤lt hÃ¤ufig gestellte Fragen (sowie deren
    Antworten!) Ã¼ber die Debian-Distribution (Debian GNU/Linux und
    andere) und das Debian-Projekt. Wenn mÃ¶glich, wird auf andere
    Dokumentation verwiesen; wir vermeiden es, grÃ¶ÃŸere Abschnitte
Â Â Â  externer Dokumentation in diesem Dokument wiederzugegeben. Sie
    werden bemerken, dass einige Antworten etwas Wissen Ã¼ber
    Unix-Ã¤hnliche Betriebssysteme voraussetzen. Es wird versucht, so
    wenig Vorwissen wie mÃ¶glich vorauszusetzen, Antworten auf
    allgemeine AnfÃ¤ngerfragen sind einfach gehalten.

    Wenn Sie das, was Sie suchen, in dieser FAQ nicht finden, werfen
Â Â Â  Sie einen Blick in AbschnittÂ 12.1, â€žWelche andere Dokumentation
    gibt es auf einem und fÃ¼r ein Debian-System?â€œ. Wenn selbst das
    nicht hilft, wird auf AbschnittÂ 16.2, â€žFeedbackâ€œ verwiesen.

1.2. Was ist Debian GNU/Linux?

    Debian GNU/Linux ist eine bestimmte Distribution des
Â Â Â  Linux-Betriebssystems und zahlreicher Pakete, die darunter
    laufen.

Â Â Â  Debian GNU/Linux ist:

      * voll ausgestattet: Debian enthÃ¤lt zur Zeit mehr als 58000
        Software-Pakete. Die Anwender kÃ¶nnen wÃ¤hlen, welche Pakete
        installiert werden sollen; Debian enthÃ¤lt ein Werkzeug fÃ¼r
        diesen Zweck. Eine Liste der derzeit in Debian verfÃ¼gbaren
        Pakete und deren Beschreibungen finden Sie auf jedem
        Debian-Spiegelserver (https://www.debian.org/distrib/ftplist)
        .

      * frei verwendbar und verteilbar: Um sich an der Entwicklung
        und Verteilung zu beteiligen, sind weder Zahlungen noch die
        Mitgliedschaft in einer Vereinigung erforderlich. Alle
Â Â Â      Pakete, die formal Teil von Debian GNU/Linux sind, kÃ¶nnen
        frei weitergegeben werden, normalerweise unter den
        Bedingungen der GNU General Public License.

        Die FTP-Archive von Debian enthalten auch ungefÃ¤hr 930
        Software-Pakete (in den non-free- und contrib-Bereichen), die
        unter den speziellen Bedingungen des jeweiligen Pakets
        weitergegeben werden kÃ¶nnen.

      * dynamisch: Mit ungefÃ¤hr 1343 Freiwilligen, die stÃ¤ndig neuen
        und verbesserten Code beisteuern, entwickelt sich Debian
        rasant weiter. Die FTP-Archive werden zweimal tÃ¤glich
        aktualisiert.

    Die meisten Linux-Benutzer verwenden eine bestimmte Linux-
    Distribution wie etwa Debian GNU/Linux. Im Prinzip kÃ¶nnten
    Anwender sich den Linux-Kernel jedoch auch selbst aus dem
    Internet oder andernorts besorgen und selbst kompilieren.
    AnschlieÃŸend kÃ¶nnten sie sich den Quelltext vieler Anwendungen
    auf dem selben Weg besorgen, die Programme kompilieren und diese
    dann auf ihren Systemen installieren. Dieses Vorgehen ist fÃ¼r
Â Â Â  komplexe Anwendungen zeitaufwÃ¤ndig und fehleranfÃ¤llig. Daher
    entscheiden sich Anwender oft dafÃ¼r, das Betriebssystem und die
    Programmpakete von einem der Linux-Distributoren zu beziehen. Was
    die einzelnen Linux-Distributoren voneinander unterscheidet, sind
    die Software, Protokolle und ihre Gepflogenheiten im Umgang mit
    Paketierung, Installation und der Verfolgung der auf den
    Anwendersystemen installierten Programmpakete, kombiniert mit
    Installations- und Wartungswerkzeugen, Dokumentation und anderen
    Dienstleistungen.

    Debian GNU/Linux ist das Ergebnis der Anstrengungen Freiwilliger,
    ein durch die Zusammenstellung von Anwendungsprogrammen
    komplettiertes, qualitativ hochwertiges, freies und mit Unix
Â Â Â  kompatibles Betriebssystem zu schaffen. Die Idee eines freien
    Unix-Ã¤hnlichen Betriebssystems stammt ursprÃ¼nglich vom
    GNU-Projekt und viele der Anwendungen, die Debian GNU/Linux
    ausmachen, wurden vom GNU-Projekt entwickelt.

    In ihrem VerstÃ¤ndnis von Â»freiÂ« stimmen das Debian- und das
    GNU-Projekt Ã¼berein (siehe Debian-Richtlinien fÃ¼r Freie Software
    (https://www.debian.org/social_contract#guidelines) ). Wenn wir
    von freier Software sprechen, meinen wir damit die Freiheit und
Â Â Â  nicht den Preis. Freie Software bedeutet, dass Sie die Freiheit
    haben, Kopien freier Software zu vertreiben, dass Sie den
    Quelltext bei Bedarf bekommen kÃ¶nnen, dass Sie die Software
    verÃ¤ndern oder Teile davon in neuen freien Programmen verwenden
    dÃ¼rfen; und dass Sie wissen, dass Ihnen all dies erlaubt ist.

    Das Debian-Projekt wurde 1993 von Ian Murdock gegrÃ¼ndet, anfangs
Â Â Â  unter der Schirmherrschaft des GNU-Projekts der Free Software
    Foundation. Heutzutage betrachten es die Debian-Entwickler als
    direkten Nachkommen des GNU-Projekts.

    Obwohl Debian GNU/Linux selbst freie Software ist, verwenden es
    andere Linux-Distributoren entsprechend ihrer Ziele als
    Grundlage. Indem ein zuverlÃ¤ssiges, voll ausgestattetes
    Basissystem zur VerfÃ¼gung gestellt wird, bietet Debian Anwendern
    von Linux erhÃ¶hte KompatibilitÃ¤t und den Herstellern von
Â Â Â  Linux-Distributionen die MÃ¶glichkeit, unnÃ¶tigen Aufwand zu
    vermeiden und sich auf die Dinge zu konzentrieren, die ihre
    Distribution besonders machen. FÃ¼r weitere Informationen dazu
    lesen Sie bitte AbschnittÂ 14.3, â€žIch erstelle eine spezielle
    Linux-Distribution fÃ¼r einen speziellen Anwendungsbereich. Kann
    ich Debian GNU/Linux als Linux-Grundsystem verwenden und meine
    eigenen Programme hinzufÃ¼gen?â€œ.

1.3. OK, jetzt weiÃŸ ich, was Debian ist ... aber was ist Linux?!

    Kurz gesagt stellt Linux den Kernel eines Unix-Ã¤hnlichen
    Betriebssystems dar. Es wurde ursprÃ¼nglich fÃ¼r 386er und darauf
Â Â Â  folgende Prozessoren in Personal Computern entwickelt; heutzutage
    lÃ¤uft Linux auch auf einem Dutzend anderer Systeme. Linux wird
    von Linus Torvalds und vielen weiteren Informatikern auf der
    ganzen Welt geschrieben.

Â Â Â  Abgesehen von seinem Kernel hat ein Â»LinuxÂ«-System Ã¼blicherweise:

      * eine Verzeichnisstruktur gemÃ¤ÃŸ dem Linux Filesystem Hierarchy
        Standard http://www.pathname.com/fhs (http://www.pathname.com
        /fhs) .
Â Â Â 
      * eine groÃŸe Auswahl an Unix-Werkzeugen, von denen viele vom
        GNU-Projekt und der Free Software Foundation entwickelt
        wurden.

    Die Kombination aus Linux-Kernel, der Verzeichnisstruktur sowie
    den GNU-, FSF- und sonstigen Werkzeugen zielt darauf ab, dem
Â Â Â  POSIX (IEEE 1003.1)-Standard zu entsprechen; siehe AbschnittÂ 4.4,
    â€žIn welchem MaÃŸe ist der Quellcode von Debian mit anderen
    Unix-Systemen kompatibel?â€œ.

    FÃ¼r weitere Informationen Ã¼ber Linux lesen Sie What is Linux
Â Â Â  (https://www.linux.org/info/) von Linux Online (https://
    www.linux.org/) .

1.4. Befasst sich Debian nur mit GNU/Linux?

    Derzeit ist Debian nur fÃ¼r Linux erhÃ¤ltlich, aber mit Debian GNU/
    Hurd und Debian auf BSD-Kerneln haben wir begonnen, auch
Â Â Â  nicht-Linux-basierte Betriebssysteme als Entwicklungs-, Server-
    und Desktop-Plattform anzubieten. Allerdings sind diese
    nicht-Linux-Portierungen derzeit noch nicht offiziell verfÃ¼gbar.

Â Â Â  Das Ã¤lteste Portierungs-Bestreben ist Debian GNU/Hurd.

    Hurd ist eine Ansammlung von Servern, die auf dem GNU
Â Â Â  Mach-Microkernel aufsetzen. Zusammen stellen sie die Basis des
    GNU-Betriebssystems dar.

    Unter https://www.gnu.org/software/hurd (https://www.gnu.org/
    software/hurd) finden Sie weitere Informationen Ã¼ber GNU/Hurd im
Â Â Â  Allgemeinen, unter https://www.debian.org/ports/hurd/ (https://
    www.debian.org/ports/hurd/) weitere Informationen Ã¼ber Debian GNU
    /Hurd.

Â Â Â  Ein weiteres Bestreben ist die Portierung auf einen BSD-Kernel;
    dabei wird mit dem FreeBSD-Kernel gearbeitet.

    Weitere Informationen zu diesen nicht-Linux-Portierungen finden
Â Â Â  Sie unter https://www.debian.org/ports/#nonlinux (https://
    www.debian.org/ports/#nonlinux) .

1.5. Was ist der Unterschied zwischen Debian GNU/Linux und anderen
Linux-Distributionen? Warum sollte ich Debian wÃ¤hlen statt einer
anderen Distribution?

Â Â Â  Folgende SchlÃ¼sselmerkmale unterscheiden Debian von anderen
    Linux-Distributionen:

    Freiheit:

        Wie im Debian-Gesellschaftsvertrag (https://www.debian.org/
        social_contract) festgelegt, wird Debian zu 100% frei
        bleiben. Debian verfolgt konsequent das Konzept freier
        Software. Bei der Entscheidung, ob eine Arbeit als Â»freiÂ«
        bezeichnet werden kann, wendet Debian seine Richtlinien fÃ¼r
        Freie Software (https://www.debian.org/social_contract#
        guidelines) an.

    Das Paketverwaltungssystem von Debian:

        Das ganze System oder jede einzelne seiner Komponenten kann
        im laufenden Betrieb aktualisiert werden, ohne neu
        formatieren zu mÃ¼ssen, ohne angepasste Konfigurationsdateien
        zu verlieren und (in den meisten FÃ¤llen) ohne Neustart des
        Systems. Die meisten heutzutage erhÃ¤ltlichen
        Linux-Distributionen bringen ein Paketverwaltungssystem mit;
        das Paketverwaltungssystem von Debian ist einzigartig und
        besonders robust (siehe KapitelÂ 7, Grundlagen des
        Debian-Paketverwaltungssystems).

    Offene Entwicklung:

        Im Gegensatz zu anderen Linux-Distributionen, welche von
        Einzelpersonen, kleinen, geschlossenen Gruppen oder
        kommerziellen Herstellern entwickelt werden, ist Debian eine
        bedeutende, gemeinschaftlich entwickelte Linux-Distribution.
        Die daran Beteiligten realisieren ein freies Betriebssystem
        im gleichen Geiste wie Linux und andere freie Software.

        Mehr als 1343 freiwillige Paketbetreuer arbeiten an Ã¼ber
        58000 Paketen und verbessern Debian GNU/Linux. Die
        Debian-Entwickler tragen zum Projekt meistens nicht bei,
        indem sie neue Programme schreiben, sondern durch das
Â Â Â      Paketieren bestehender Software entsprechend den
        Projektstandards, indem sie Fehler an die Programmautoren
        melden und indem sie die Anwender unterstÃ¼tzen. Unter
        KapitelÂ 13, Zum Debian-Projekt beitragen finden Sie auch
        Informationen dazu, wie Sie selbst zu Debian beitragen
        kÃ¶nnen.

    Das universelle Betriebssystem:

        Debian enthÃ¤lt mehr als 58000 Pakete (https://
        packages.debian.org/stable/) und lÃ¤uft auf 10 Architekturen
        (https://www.debian.org/ports/) . Das ist bedeutend mehr als
        bei allen anderen GNU/Linux-Distributionen. AbschnittÂ 5.1,
        â€žWelche Art von Anwendungen und Entwicklungs-Software ist fÃ¼r
        Debian GNU/Linux verfÃ¼gbar?â€œ bietet einen Ãœberblick Ã¼ber die
        verfÃ¼gbare Software und AbschnittÂ 4.1, â€žAuf welchen
        Hardware-Architekturen/Systemen lÃ¤uft Debian GNU/Linux?â€œ eine
        Beschreibung der unterstÃ¼tzten Hardware-Plattformen.

    Die Fehlerdatenbank:

        Weil rund um die Welt an Debian gearbeitet wird, bedurfte es
        ausgeklÃ¼gelter Werkzeuge und Mittel zur schnellen
        Kommunikation von Fehlern und deren Behebung, um die
        Entwicklung des Systems zu beschleunigen. Die Anwender sind
        dazu aufgefordert, Fehlerberichte auf eine formale Art und
        Weise zu Ã¼bermitteln, so dass sie schnell Ã¼ber WWW-Archive
        oder E-Mail verfÃ¼gbar sind. Sie finden in dieser FAQ unter
        AbschnittÂ 12.4, â€žGibt es Protokolle von bekannten Fehlern?â€œ
        auch weitere Informationen zur Handhabung gemeldeter Fehler.

    Die Debian-Richtlinien:

        Debian hat eine ausfÃ¼hrliche Spezifikation seiner
        QualitÃ¤tsstandards, die Debian-Richtlinien. Dieses Dokument
        definiert die QualitÃ¤ten und Standards, die wir fÃ¼r
        Debian-Pakete fordern.

    Weitere Informationen dazu entnehmen Sie bitte unserer Website
Â Â Â  Ã¼ber die GrÃ¼nde fÃ¼r die Wahl von Debian (https://www.debian.org/
    intro/why_debian) .

1.6. Wie fÃ¼gt sich das Debian-Projekt in das GNU-Projekt der Free
Software Foundation ein und lÃ¤sst es sich damit vergleichen?

    Das Debian-System basiert auf den Idealen freier Software, die
    zuerst von der Free Software Foundation (https://www.gnu.org/)
Â Â Â  und vor allem von Richard Stallman (https://www.stallman.org/)
    vertreten wurden. Die mÃ¤chtigen System-Entwicklungswerkzeuge der
    FSF und die Werkzeuge und Anwendungen sind ebenfalls ein fester
    Bestandteil des Debian-Systems.

    Das Debian-Projekt ist unabhÃ¤ngig von der FSF, aber wir
    kommunizieren regelmÃ¤ÃŸig und arbeiten bei verschiedenen Projekten
Â Â Â  zusammen. Die FSF hat ausdrÃ¼cklich verlangt, dass wir unser
    System Â»Debian GNU/LinuxÂ« nennen, und wir kommen dieser
    Aufforderung gerne nach.

    Das langfristige Ziel der FSF ist es, ein neues Betriebssystem
    namens GNU zu entwickeln, das auf Hurd (https://www.gnu.org/
Â Â Â  software/hurd) basiert. Debian arbeitet mit der FSF zusammen an
    diesem System, Debian GNU/Hurd (https://www.debian.org/ports/hurd
    /) genannt.

1.7. Wie spricht man Debian aus und was bedeutet das?

    Der Projektname wird im Englischen Deb'-ii-en ausgesprochen, mit
    einem kurzen Â»eÂ« in Deb und mit Betonung auf der ersten Silbe.
Â Â Â  Dieser Name ist eine Kombination aus Debra und Ian Murdock, der
    das Projekt gegrÃ¼ndet hat. (WÃ¶rterbÃ¼cher scheinen verschiedene
    MÃ¶glichkeiten der Aussprache von Ian (!) anzubieten, aber Ian
    bevorzugt ii'-en.)

Kapitel 2. Debian GNU/Linux bekommen und installieren

    Das offizielle Dokument, welches die Installation beschreibt, ist
    die Debian GNU/Linux Installationsanleitung (https://
Â Â Â  www.debian.org/releases/stable/installmanual) . Im Folgenden
    geben wir einige ergÃ¤nzende Hinweise, wie Sie Debian GNU/Linux
    bekommen und installieren kÃ¶nnen.

2.1. Was ist die aktuelle Version von Debian?

Â Â Â  Zurzeit gibt es drei Debian GNU/Linux-Versionen:

    Release 10, die derzeitige Â»StableÂ«-Distribution, Codename Buster

        Hierbei handelt es sich um stabile und ausfÃ¼hrlich getestete
        Software, die nur geÃ¤ndert wird, wenn bedeutende
        Verbesserungen hinsichtlichlich Sicherheit und Benutzung zu
        integrieren sind.

    die Â»TestingÂ«-Distribution, Codename Bullseye

        Hier werden die Pakete abgelegt, die in der nÃ¤chsten
        Stable-Distribution verÃ¶ffentlicht werden sollen; sie sind
        schon etwas in Unstable getestet worden, aber es kann sein,
Â Â Â      dass sie fÃ¼r die VerÃ¶ffentlichung noch nicht ganz bereit
        sind. Diese Distribution wird Ã¶fter aktualisiert als Stable,
        jedoch nicht so oft wie Unstable.

    die Â»UnstableÂ«-Distribution, Codename Sid

        Dies ist die in Entwicklung befindliche Version, sie wird
        laufend aktualisiert. Sie kÃ¶nnen sich die Pakete des
        Unstable-Archivs von jedem Debian-FTP-Server herunterladen
        und sie jederzeit benutzen, um Ihr System zu aktualisieren,
        jedoch sollten Sie nicht erwarten, dass Ihr System genauso
        benutzbar und stabil bleibt wie vorher â€“ darum wird sie Â»
        UnstableÂ« (instabil) genannt!

Â Â Â  Weitere Informationen dazu entnehmen Sie bitte AbschnittÂ 6.1,
    â€žWie viele Debian-Distributionen gibt es?â€œ.

2.2. Gibt es Paketaktualisierungen in Â»StableÂ«?

    Zur stabilen VerÃ¶ffentlichung werden keine neuen FunktionalitÃ¤ten
    hinzugefÃ¼gt. Sobald eine Debian-Version herausgegeben und als
    stabil markiert wurde, gibt es dafÃ¼r nur noch
Â Â Â  Sicherheitsaktualisierungen. Das heiÃŸt, dass nur Pakete
    aktualisiert werden, fÃ¼r die nach der VerÃ¶ffentlichung eine
    SicherheitslÃ¼cke gefunden wurde. Alle Sicherheitsaktualisierungen
    stehen unter security.debian.org (ftp://security.debian.org)
    bereit.

    Sicherheitsaktualisierungen haben nur einen Zweck: die
    Korrekturen von SicherheitslÃ¼cken. Sie dienen nicht dazu, ohne
    das normale Durchlaufen des Prozesses fÃ¼r
    ZwischenverÃ¶ffentlichungen (Point releases) zusÃ¤tzliche
Â Â Â  Ã„nderungen in die stabile VerÃ¶ffentlichung einzuschleusen.
    Folglich werden Korrekturen fÃ¼r Sicherheitsproblemen nicht die
    Software aktualisieren (im Sinne zusÃ¤tzlicher oder neuer
    FunktionalitÃ¤ten). Das Debian-Sicherheitsteam wird stattdessen
    die notwendigen Korrekturen auf die Version der Software in
    Â»StableÂ« zurÃ¼ckportieren.

    FÃ¼r weitere Informationen zur SicherheitsunterstÃ¼tzung lesen Sie
Â Â Â  bitte die Sicherheits-FAQ (https://www.debian.org/security/faq)
    oder die Anleitung zum Absichern von Debian (https://
    www.debian.org/doc/manuals/securing-debian-howto/) .

2.3. Woher/wie kann ich mir die Debian-Installations-Images
beschaffen?

Â Â Â  Sie kÃ¶nnen sich die Dateien fÃ¼r die Installations-Images von der
    Debian-Website (https://www.debian.org/distrib/) herunterladen.

Â Â Â  Weitere Informationen Ã¼ber CD- oder DVD-Images finden Sie unter
    Debian GNU/Linux auf CDs (https://www.debian.org/CD) .

2.4. Wie kann ich Debian von CD-ROM installieren?

    Debian von CD zu installieren ist ziemlich einfach: konfigurieren
    Sie Ihr System so, dass es von CD bootet, legen Sie die CD ein
Â Â Â  und starten Sie den Rechner neu. Ihr System wird jetzt den Debian
    Installer starten. NÃ¤heres finden Sie in der Debian GNU/Linux
    Installationsanleitung (https://www.debian.org/releases/stable/
    installmanual) .

2.5. Warum enthÃ¤lt eine offiziell als Stable verÃ¶ffentlichte CD-ROM
symbolische Links fÃ¼r Â»FrozenÂ« und Â»UnstableÂ«? Ich dachte, diese CD
enthÃ¤lt Â»StableÂ«!

Â Â Â  Offizielle Debian-CD-Images enthalten in der Tat symbolische
    Links wie

     /dists/frozen -> buster/
Â Â Â   /dists/stable -> buster/
     /dists/testing -> buster/
     /dists/unstable -> buster/

Â Â Â  damit sie funktionieren, wenn Ihre sources.list einen Eintrag wie

Â Â Â   deb cdrom:[<Name laut CD-Bezeichnung>]/ unstable main [...]

Â Â Â  enthÃ¤lt.

    Die Tatsache, dass diese symbolischen Links vorhanden sind,
    bedeutet nicht, dass das Image Â»UnstableÂ« oder Â»TestingÂ« oder
Â Â Â  etwas anderes enthÃ¤lt. Lesen Sie die CD-Bezeichnung in /.disk/
    info, um herauszufinden, welche Debian-Version es enthÃ¤lt. Diese
    Information ist auch in der Datei /README.txt auf der CD zu
    finden.

    Lesen Sie https://www.debian.org/releases (https://www.debian.org
Â Â Â  /releases) , um mehr Ã¼ber die aktuellen Â»StableÂ«- und
    Â»TestingÂ«-VerÃ¶ffentlichungen zu erfahren.

2.6. Kann ich Debian direkt Ã¼ber das Internet bekommen und
installieren?

    Ja. Sie kÃ¶nnen das Debian-Installationssystem von Dateien
Â Â Â  starten, die Sie sich von unserem FTP-Server oder dessen Spiegeln
    heruntergeladen haben.

    Sie kÃ¶nnen sich eine kleine CD-Image-Datei herunterladen, damit
    eine startfÃ¤hige CD erstellen, das Basissystem davon installieren
Â Â Â  und den Rest dann Ã¼ber das Netzwerk herunterladen und
    installieren. NÃ¤heres hierzu finden Sie unter https://
    www.debian.org/CD/netinst/ (https://www.debian.org/CD/netinst/) .

2.7. Gibt es alternative Strategien, um den Debian Installer zu
booten?

    Ja. Neben dem Booten von CD oder DVD kÃ¶nnen Sie die Installation
    von Debian GNU/Linux auch von USB-Stick, direkt von Festplatte
    oder mittels TFTP-Netzwerk-Boot starten. Um eine Vielzahl von
    Computern zu installieren, sind sogar vollautomatische
    Installationen mÃ¶glich. Wohlgemerkt: nicht alle Methoden werden
Â Â Â  von allen Computerarchitekturen unterstÃ¼tzt. Sobald der Installer
    gebootet wurde, kann der Rest des Systems Ã¼ber das Netzwerk
    heruntergeladen oder von einem lokalen Medium installiert werden.
    Weitere Informationen finden Sie in der Debian GNU/Linux
    Installationsanleitung (https://www.debian.org/releases/stable/
    installmanual) .

Kapitel 3. Eine Debian-Distribution auswÃ¤hlen

    Es gibt viele verschiedene Debian-Distributionen. Die richtige
    auszuwÃ¤hlen, ist eine wichtige Entscheidung. Dieser Abschnitt
    umfasst einige Informationen, die Benutzern helfen sollen zu
Â Â Â  entscheiden, welche Distribution am besten zu ihrem System passt.
    DarÃ¼ber hinaus gibt er Antworten auf mÃ¶gliche Fragen, die wÃ¤hrend
    des Entscheidungsprozesses auftauchen kÃ¶nnen. Es geht also nicht
    so sehr um das Â»Warum Sie Debian wÃ¤hlen solltenÂ«, sondern um
    Â»welche Distribution von DebianÂ«.

    Um mehr Informationen Ã¼ber die verfÃ¼gbaren Distributionen zu
Â Â Â  erhalten, lesen Sie AbschnittÂ 6.1, â€žWie viele
    Debian-Distributionen gibt es?â€œ.

3.1. Welche Debian-Distribution (Stable/Testing/Unstable) ist
geeignet fÃ¼r mich?

    Die Antwort darauf ist ein wenig kompliziert. Sie hÃ¤ngt sehr
    davon ab, was Sie mit dem System zu tun beabsichtigen. Eine
    LÃ¶sung wÃ¤re, einen Bekannten zu fragen, der selber Debian
Â Â Â  verwendet. Aber das bedeutet natÃ¼rlich nicht, dass Sie nicht
    selbst eine unabhÃ¤ngige Entscheidung treffen kÃ¶nnten. TatsÃ¤chlich
    sollten Sie genau dazu in der Lage sein, wenn Sie dieses Kapitel
    bis zum Ende durchgelesen haben.

      * Wenn Ihnen Sicherheit und StabilitÃ¤t am wichtigsten sind,
        dann installieren Sie Stable. Punkt. Dieser Weg wird am
        hÃ¤ufigsten eingeschlagen.

      * Wenn Sie erstmals Debian benutzen, und es auf einem
        Desktop-Rechner installieren wollen, beginnen Sie mit Stable.
        Ein Teil der enthaltenen Software ist zwar betagt,
        andererseits werden Sie kaum einen Software-Fehler antreffen.
        Sobald Sie es sich dann zutrauen, kÃ¶nnen Sie mit wenig
        Aufwand zum etwas moderneren Unstable (oder Testing)
        wechseln.
Â Â Â 
      * Wenn Sie ein bereits mit Linux vertrauter Desktop-Benutzer
        sind und Macken, SystemabstÃ¼rze sowie mehr oder weniger
        umfassende Fehlfunktionen hinnehmen kÃ¶nnen, dann benutzen Sie
        Unstable. Es bietet topmoderne Software und Fehler werden
        Ã¼blicherweise rasch behoben.

      * Wenn Sie einen Server betreiben, insbesondere einen, an den
        hohe Anforderungen hinsichtlich der StabilitÃ¤t gestellt
        werden oder der Ã¼ber das Internet erreichbar ist, sollten Sie
        Stable installieren. Das ist bei weitem die beste und
        sicherste Wahl hierfÃ¼r.

    Die folgenden Fragen behandeln Einzelheiten dieser drei
Â Â Â  MÃ¶glichkeiten. Wenn Sie nach dem Lesen dieser FAQ immer noch
    keine Entscheidung treffen kÃ¶nnen, bleiben Sie bei Stable.

3.1.1. Sie haben mir empfohlen, Stable zu installieren. Allerdings
wird unter Stable bestimmte Hardware nicht erkannt oder funktioniert
nicht richtig. Was soll ich tun?

    Finden sie im Internet mithilfe einer Suchmaschine heraus, ob
    jemand anderes Ihre Hardware zum Laufen gebracht hat. Die meiste
    Hardware sollte gut unter Stable funktionieren. Wenn Sie aber
Â Â Â  bestimmte, auf hÃ¶chste Leistung getrimmte oder brandneue
    Komponenten verwenden, kann es sein, dass diese unter Stable
    nicht funktionieren. Sie sollten in diesem Fall vielleicht zu
    Testing oder Unstable wechseln.

    FÃ¼r Laptops ist https://www.linux-on-laptops.com/ (https://
    www.linux-on-laptops.com/) eine sehr gute Anlaufstelle, um
    herauszufinden, ob jemand Ihr GerÃ¤t unter Linux zum Laufen
Â Â Â  bekommen hat. Die Website bezieht sich nicht direkt auf Debian,
    ist aber dennoch eine gute Fundgrube fÃ¼r Informationen. Eine
    Ã¤hnliche Informationsquelle fÃ¼r Desktop-Rechner ist uns leider
    nicht bekannt.

    Eine andere MÃ¶glichkeit ist, auf der Mailingliste
    debian-user-german nachzufragen, indem Sie eine E-Mail an
    debian-user-german@lists.debian.org schicken. Sie mÃ¼ssen sich
    dafÃ¼r nicht anmelden. Das Archiv ist unter https://
    lists.debian.org/debian-user-german/ (https://lists.debian.org/
Â Â Â  debian-user-german/) einzusehen. Dort wird auch beschrieben, wie
    sie sich anmelden kÃ¶nnen. Wir mÃ¶chten nachdrÃ¼cklich empfehlen,
    dass Sie Ihre Fragen Ã¼ber die Mailingliste schicken, anstatt sie
    im irc (https://www.debian.org/support) zu stellen. Die
    Nachrichten auf der Mailingliste werden archiviert. Auf diese
    Weise kann die LÃ¶sung fÃ¼r Ihr Problem auch anderen Benutzern
    helfen, die die gleichen Schwierigkeiten haben.

3.1.2. Gibt es unterschiedliche Versionen eines Pakets in
unterschiedlichen Distributionen?

    Ja. Unstable hat die aktuellsten (jÃ¼ngsten) Versionen. Allerdings
Â Â Â  sind die Pakete in Unstable nicht umfassend getestet und haben
    mÃ¶glicherweise Fehler.

    DemgegenÃ¼ber enthÃ¤lt Stable Ã¤ltere Paketversionen, die viele
Â Â Â  Tests durchlaufen haben, so dass Sie kaum Fehler antreffen
    werden.

Â Â Â  Die Pakete in Testing stellen den Mittelweg zwischen diesen
    beiden Extremen dar.

3.1.3. Die stabile Distribution enthÃ¤lt wirklich eine ganze Menge
ziemlich veralteter Pakete, wie an Kde, Gnome, Xorg oder sogar dem
Kernel deutlich erkennbar ist. Warum ist das so?

    Da kÃ¶nnten Sie recht haben. Das Alter der Pakete in Stable hÃ¤ngt
    davon ab, wann die letzte VerÃ¶ffentlichung stattgefunden hat.
    Angesichts dessen, dass Ã¼blicherweise mehr als ein Jahr zwischen
    den Debian-VerÃ¶ffentlichungen liegt, kann es sein, dass Sie den
    Eindruck gewinnen, Stable enthalte alte Pakete. Allerdings wurden
Â Â Â  diese durch und durch getestet. Man kann guten Gewissens sagen,
    dass diese Pakete keine schwerwiegenden Fehler, SicherheitslÃ¼cken
    und dergleichen enthalten. Pakete in Stable harmonieren
    problemlos mit anderen Stable-Paketen. Diese Eigenschaften sind
    sehr wichtig fÃ¼r produktive Server, die 24 Stunden am Tag und
    sieben Tage die Woche funktionieren mÃ¼ssen.

    Andererseits kÃ¶nnen Pakete in Testing und Unstable versteckte
    Fehler, SicherheitslÃ¼cken und Ã¤hnliches aufweisen. Schlimmer
    noch, manche Pakete in Testing und Unstable funktionieren
Â Â Â  mÃ¶glicherweise nicht wie beabsichtigt. FÃ¼r gewÃ¶hnlich ziehen
    Personen, die an einem einzelnen Desktop-Rechner arbeiten, die
    jÃ¼ngsten und modernsten Paket-Sets vor. Unstable ist die richtige
    Wahl fÃ¼r diese Leute.

    Wie Sie sehen, handelt es sich bei StabilitÃ¤t und AktualitÃ¤t um
    entgegengesetzte Enden eines Spektrums. Wenn StabilitÃ¤t
Â Â Â  erforderlich ist, dann installieren Sie die Stable-Distribution.
    Wenn Sie mit den neusten Paketen arbeiten mÃ¶chten, dann
    installieren Sie Unstable.

3.1.4. Wenn ich zu einer anderen Distribution wechseln wollte, ginge
das?

    Ja, aber das ist eine EinbahnstraÃŸe. Sie kÃ¶nnen von Stable -->
Â Â Â  Testing --> Unstable wechseln, aber in umgekehrter Richtung ist
    das nicht Â»mÃ¶glichÂ«. Ein Wechsel zu Unstable sollte daher
    wohlÃ¼berlegt sein.

    TatsÃ¤chlich verhÃ¤lt es sich so: Wenn Sie Experte sind und
    willens, etwas Zeit darauf zu verwenden, vorsichtig sind und
    wissen, was Sie tun, dann ist es eventuell mÃ¶glich, von Unstable
Â Â Â  zu Testing und von Testing dann zu Stable zu gehen. Die
    Installations-Skripte wurden allerdings nicht fÃ¼r dergleichen
    entworfen. Daher kann es passieren, dass wÃ¤hrend des Vorgangs
    Ihre Konfigurationsdateien verloren gehen und ...

3.1.5. Sollte man Stable, Testing oder Unstable installieren?

    Nein. Das ist eine ziemlich subjektive Angelegenheit. Es gibt
    darauf keine absolut richtige Antwort, da dies davon abhÃ¤ngt,
Â Â Â  welche Software Sie benÃ¶tigen, ob Sie gewillt sind, sich im Falle
    von Problemen mit der Fehlerbehebung zu beschÃ¤ftigen, sowie von
    Ihrer Erfahrung bei der Systemadministration. Hier einige Tipps:

      * Stable ist Â»robust wie ein FelsÂ«. Sie profitieren davon, dass
        Debian Sicherheitsaspekte kontinuierlich im Blick hat und die
        Distribution eine in sich konsistente Zusammenstellung von
        Softwarepaketen darstellt. Unter UmstÃ¤nden wird aber sehr
        neue Hardware nicht unterstÃ¼tzt.

      * Testing hat aktuellere Software als Stable, und ist gibt
        seltener gravierende Probleme als in Unstable. Sollten
Â Â Â      allerdings MÃ¤ngel auftreten, dauert es oft eine ganze Weile,
        bis die Dinge wieder im Lot sind. Manchmal kann das Tage
        dauern, hin und wieder auch Monate. Und Testing hat hat keine
        zuverlÃ¤ssige SicherheitsunterstÃ¼tzung.

      * In Unstable Ã¤ndert sich sehr viel. Die Pakete kÃ¶nnen somit
        jederzeit fehlerhaft oder nicht verfÃ¼gbar sein. Allerdings
        werden Probleme in vielen FÃ¤llen binnen Tagen behoben. Und
        Unstable enthÃ¤lt immer die neuesten Pakete.

    Bei der Entscheidung zwischen Testing und Unstable sollten Sie
    bedenken, dass Ihnen Testing das eine oder andere Problem
    ersparen kann. Einer der Autoren dieser Dokumentation erlebte so
    etwas wÃ¤hrend dem Wechsel von gcc3 auf gcc4: Er versuchte, das
Â Â Â  Paket labplot auf einem mit Unstable betriebenen Rechner zu
    installieren. Das gelang nicht, da der gcc-Ãœbergang bei Unstable
    nicht komplett vollzogen war. In Testing hingegen waren die neuen
    Versionen noch nicht angelangt; es war in sich konsistent und
    erlaubte die Installation des von gcc abhÃ¤ngigen Paketes.

3.1.6. Hier ist die Rede davon, dass Testing Â»kaputtÂ« gehen kann. Was
soll das heiÃŸen?

    Es kann vorkommen, dass sich ein Paket nicht mit den
    Paketmanagement-Werkzeugen installieren lÃ¤sst. Manchmal sind
Â Â Â  Pakete nicht mehr verfÃ¼gbar, da sie wegen Fehlern oder verletzten
    AbhÃ¤ngigkeiten (vorÃ¼bergehend) entfernt wurden. Oder ein Paket
    lÃ¤sst sich zwar installieren, verhÃ¤lt sich aber nicht
    ordnungsgemÃ¤ÃŸ.

Â Â Â  Wenn solche Dinge passieren, sagt man von einer Distribution,
    dass sie (zumindest in Bezug auf dieses eine Paket) Â»kaputtÂ« ist.

3.1.7. Wie kann es sein, dass Testing monatelang beschÃ¤digt ist?
WÃ¼rden die in Unstable eingepflegten Fehlerkorrekturen nicht direkt
in Testing einflieÃŸen?

    Die Fehlerkorrekturen und Verbesserungen aus der
    Unstable-Distribution gelangen nur allmÃ¤hlich nach Testing. Zuvor
    mÃ¼ssen alle verÃ¶ffentlichungskritischen Fehler behoben werden und
Â Â Â  innerhalb einer gewissen Sperrfrist (Ã¼blicherweise fÃ¼nf Tage)
    dÃ¼rfen keine neuen mehr gemeldet worden sein. Wenn also ein
    verÃ¶ffentlichungskritischer Fehler fÃ¼r das Paket vorliegt, wird
    es auch nach Ablauf der Frist nicht nach Testing gelangen.

    Die Idee ist folgende: wenn das Paket irgendwelche Fehler hat,
    dann wÃ¼rden diese von Benutzern entdeckt werden, die Unstable
Â Â Â  verwenden und wÃ¼rden bereinigt, bevor das Paket nach Testing
    kommt. So bleibt Testing fÃ¼r die meiste Zeit in einem benutzbaren
    Zustand. Insgesamt ein brillantes Konzept. Allerdings sind die
    Dinge nicht immer so einfach. Bedenken Sie folgende Situation:

      * Stellen Sie sich vor, Sie wÃ¤ren am Paket XYZ interessiert.

      * Nehmen wir an, dass am 10. Juni die Version XYZ-3.6 in
        Testing ist und Version XYZ-3.7 in Unstable.

      * Nach fÃ¼nf Tagen wandert XYZ-3.7 von Unstable nach Testing.

      * Also haben am 15. Juni sowohl Testing als auch Unstable
        XYZ-3.7 in ihren Repositories.

      * Sagen wir, ein Benutzer der Testing-Distribution bemerkt,
        dass ein neues XYZ-Paket verfÃ¼gbar ist und macht ein Update
        von XYZ-3.6 auf XYZ-3.7.

      * Nun entdeckt am 25. Juni jemand, der Testing oder Unstable
        benutzt, einen verÃ¶ffentlichungskritischen Fehler in XYZ-3.7
        und meldet diesen an das BTS.

      * Der Betreuer von XYZ behebt den Fehler und lÃ¤dt ein neues
        Paket nach Unstable hoch, sagen wir am 30. Juni. Wir nehmen
        hierbei an, dass der Betreuer fÃ¼nf Tage braucht, um den
        Fehler zu beheben und die neue Version hochzuladen. Die Zahl
Â Â Â      von fÃ¼nf Tagen sollte hier nicht falsch verstanden werden. Es
        kann lÃ¤nger dauern oder auch nicht, in AbhÃ¤ngigkeit von der
        Schwere des vorliegenden verÃ¶ffentlichungskritischen Fehlers.

      * Die neue Version ist nun in Unstable. Laut Plan soll XYZ-3.8
        daraufhin Testing am 5. Juli erreichen.

      * Aber schon am 3. Juli entdeckt wieder jemand einen
        verÃ¶ffentlichungskritischen Fehler in XYZ-3.8.

      * Nehmen wir an, der Betreuer lÃ¶st das neue Problem und lÃ¤dt
        die neue Version von XYZ nach fÃ¼nf Tagen hoch.

      * Also ist am 8. Juli XYZ-3.7 in Testing und XYZ-3.9 in
        Unstable.

      * Die neue Version XYZ-3.9 soll nach dem neuen Zeitplan nun am
        13. Juli in Testing ankommen.

      * Nachdem Sie ja Testing verwenden und XYZ-3.7 fehlerhaft ist,
        kÃ¶nnten sie wahrscheinlich XYZ erst wieder nach dem 13. Juli
        benutzen. Im Endeffekt hÃ¤tten Sie dann rund einen Monat lang
        ein beschÃ¤digtes Paket XYZ gehabt.

    Die Angelegenheit kann noch weitaus komplizierter werden, wenn
    etwa XYZ von vier anderen Paketen abhÃ¤ngt. Das kann dann zu einer
Â Â Â  monatelang nicht benutzbaren Testing-Distribution fÃ¼hren. Das
    soeben vorgestellte Szenario ist zwar konstruiert, kann aber im
    echten Leben tatsÃ¤chlich so vorkommen. Allerdings geschieht das
    nur selten.

3.1.8. Vom Standpunkt eines Systemverwalters her gesehen: Welche
Distribution verlangt mehr Aufmerksamkeit?

    Einer der GrÃ¼nde, warum viele Leute Debian anderen
    Linux-Distributionen vorziehen, ist der, dass es nur sehr wenig
    Verwaltungsaufwand erfordert. Diese Leute wollen ein System, das
    einfach nur funktioniert. Im allgemeinen kann man sagen, dass
    Stable nur sehr wenig Wartung bedarf, wÃ¤hrend Testing und
Â Â Â  Unstable nach fortwÃ¤hrender Pflege durch den Systemverwalter
    verlangen. Wenn Sie Stable verwenden, mÃ¼ssen Sie lediglich darauf
    achten, mit den Sicherheits-Updates Schritt zu halten. Wenn Sie
    Testing oder Unstable verwenden, ist es klug, ein Auge auf neu
    entdeckte Fehler, Fehlerkorrekturen und neue FÃ¤higkeiten in den
    bereits installierten Paketen zu haben.

3.1.9. Was passiert, wenn eine neue Version von Debian verÃ¶ffentlicht
wird?

Â Â Â  Diese Frage wird Ihnen nicht helfen, eine Debian-Distribution
    auszuwÃ¤hlen, aber frÃ¼her oder spÃ¤ter stellt sich sich ihnen doch.

    Derzeit ist Buster die stabile Distribution. Die nÃ¤chste stabile
Â Â Â  VerÃ¶ffentlichung wird Bullseye heiÃŸen. Lassen Sie uns nun den
    speziellen Fall betrachten, dass Bullseye als neue stabile
    Distribution freigegeben wird.

      * Oldstable = Stretch; Stable = Buster; Testing = Bullseye;
        Unstable = Sid

      * Unstable wird immer Sid genannt, unabhÃ¤ngig von den
        VerÃ¶ffentlichungen.

      * Pakete wandern fortwÃ¤hrend von Sid nach Testing
        (beispielsweise Bullseye). Aber Pakete in Stable (derzeit
        also Buster) bleiben immer die selben, auÃŸer im Falle von
        Sicherheits-Updates.

      * Nach einer bestimmten Zeit wird Testing eingefroren, wird
        aber weiterhin als Testing bezeichnet. Von nun an gelangen
        keine Pakete von Unstable nach Testing mehr, es sei denn, um
        verÃ¶ffentlichungskritische Fehler (RC bugs) zu beheben.

      * Nachdem Testing eingefroren wurde, mÃ¼ssen alle neu
        anstehenden Fehlerkorrekturen hÃ¤ndisch durch die Mitglieder
        des VerÃ¶ffentlichungs-Teams Ã¼berprÃ¼ft werden. Das soll
        sicherstellen, dass sich keine ernsthaften Fehler mehr in die
Â Â Â      eingefrorene Testing-VerÃ¶ffentlichung einschleichen kÃ¶nnen.

      * Die verÃ¶ffentlichungskritischen Fehler im eingefrorenen
        Testing werden entweder auf Null reduziert oder markiert als
        Â»fÃ¼r diese VerÃ¶ffentlichung ignoriertÂ« bzw. als Â»fÃ¼r die
        nÃ¤chste ZwischenverÃ¶ffentlichung aufgeschobenÂ«.

      * Das eingefrorene Testing wird ohne verÃ¶ffentlichungskritische
        Fehler als neue Stable-VerÃ¶ffentlichung freigegeben. In
        unserem Beispiel wÃ¼rde diese neue VerÃ¶ffentlichung Bullseye
        genannt werden.

      * Nun ist oldstable = Buster, stable = Bullseye. Zu diesem
        Zeitpunkt sind der Inhalt von Stable und eingefrorenem
        Testing identisch.

      * Ein neues Testing wird aus dem alten Testing abgeleitet.

      * Pakete kommen ab jetzt wieder aus Sid nach Testing und die
        Debian-Gemeinschaft beginnt, auf die nÃ¤chste
        Stable-VerÃ¶ffentlichung hinzuarbeiten.

3.1.10. Ich habe einen Desktop-Rechner/Rechner-Cluster mit Debian.
Wie kann ich herausfinden, welche Distribution darauf lÃ¤uft?

    Das lÃ¤sst sich meistens leicht klÃ¤ren. Werfen Sie einen Blick in
Â Â Â  die Datei /etc/apt/sources.list. Dort finden Sie einen Eintrag
    wie diesen:

Â Â Â  deb http://ftp.de.debian.org/debian/ unstable main contrib

Â Â Â  Das dritte Feld (hier im Beispiel Â»unstableÂ«) gibt die
    Debian-Distribution an, die derzeit auf dem System lÃ¤uft.

    Sie kÃ¶nnen auch lsb_release verwenden (verfÃ¼gbar in dem Paket
Â Â Â  lsb-release). Wenn Sie dies auf einem System mit Unstable
    ausfÃ¼hren, erhalten Sie Folgendes:

    $ lsb_release  -a
    LSB Version:    core-2.0-noarch:core-3.0-noarch:core-3.1-noarch:core-2.0-ia32:core-3.0-ia32:core-3.1-ia32
Â Â Â  Distributor ID: Debian
    Description:    Debian GNU/Linux unstable (sid)
    Release:    unstable
    Codename:   sid

    Allerdings ist es nicht immer so einfach. Manche Systeme haben
    eine sources.list-Datei mit mehreren EintrÃ¤gen, die sich auf
    unterschiedliche Distributionen beziehen. Das kann der Fall sein,
Â Â Â  wenn der Systemverwalter verschiedene Pakete aus
    unterschiedlichen Distributionen verwendet. Dies wird hÃ¤ufig als
    apt-pinning bezeichnet. Solche Systeme verwenden wahrscheinlich
    einen Mix aus unterschiedlichen Distributionen.

3.1.11. Augenblicklich verwende ich Stable. Kann ich zu Testing oder
Unstable wechseln? Und wenn, wie?

    Wenn Sie derzeit Stable einsetzen, dann wird in der Datei /etc/
    apt/sources.list das dritte Feld entweder Â»busterÂ« oder Â»stableÂ«
    enthalten. Diesen Eintrag mÃ¼ssen Sie passend zu der Distribution
Â Â Â  Ã¤ndern, die Sie verwenden mÃ¶chten. Wenn das Testing ist, dann
    Ã¤ndern Sie das dritte Feld in /etc/apt/sources.list in Â»testingÂ«.
    Wenn Sie Unstable verwenden wollen, dann tragen Sie in das dritte
    Feld Â»unstableÂ« ein.

    GegenwÃ¤rtig wird Testing bullseye genannt. Wenn Sie das dritte
Â Â Â  Feld von /etc/apt/sources.list in Â»bullseyeÂ« Ã¤ndern, dann werden
    Sie kÃ¼nftig Testing verwenden. Aber auch wenn bullseye zu Stable
    wird, werden Sie weiterhin bullseye haben.

    Unstable wird immer Sid genannt. Wenn Sie also das dritte Feld
Â Â Â  von /etc/apt/sources.list in Â»sidÂ« Ã¤ndern, werden Sie stets
    Unstable nutzen.

    GegenwÃ¤rtig bietet Debian Sicherheits-Updates fÃ¼r Testing, aber
    nicht fÃ¼r Unstable an, da Korrekturen fÃ¼r Unstable direkt im
Â Â Â  Hauptarchiv vorgenommen werden. Wenn Sie also Unstable benutzen,
    sollten Sie sicherstellen, dass Sie die Zeilen in /etc/apt/
    sources.list entfernen, die sich auf Sicherheits-Updates
    beziehen.

    Wenn es fÃ¼r die VerÃ¶ffentlichung, zu der Sie hochrÃ¼sten mÃ¶chten,
    VerÃ¶ffentlichungshinweise gibt (mÃ¶glicherweise auch obwohl die
Â Â Â  offizielle VerÃ¶ffentlichung noch bevorsteht), wÃ¤re es klug, diese
    zu lesen. Sie enthalten eventuell Informationen darÃ¼ber, wie Sie
    das Upgrade vornehmen sollten.

    Dennoch kÃ¶nnen Sie, nachdem Sie die obigen VerÃ¤nderungen
    vorgenommen haben, aptitude update laufen lassen und dann die
    Pakete installieren, die Sie haben mÃ¶chten. Beachten Sie, dass
Â Â Â  das Installieren eines Pakets aus einer anderen Distribution
    mÃ¶glicherweise automatisch gleich Ihr halbes System einem Upgrade
    unterzieht. Wenn Sie nur einzelne Pakete installieren, haben Sie
    zum Schluss ein System, auf denen eine Mischung verschiedener
    Distributionen lÃ¤uft.

    In bestimmten Situationen ist es daher wahrscheinlich das Beste,
    ein vollstÃ¤ndiges Upgrade auf die neue Distribution
Â Â Â  durchzufÃ¼hren, indem Sie apt full-upgrade, aptitude safe-upgrade
    oder aptitude full-upgrade benutzen. Lesen Sie die Handbuchseiten
    von apt und aptitude fÃ¼r weiterfÃ¼hrende Informationen.

3.1.12. Im Augenblick verwende ich Testing (bullseye). Was wird
passieren, wenn eine neue VerÃ¶ffentlichung freigegeben wird? Werde
ich weiterhin Testing haben oder wird auf meinem Rechner die neue
Stable-Distribution laufen?

    Das hÃ¤ngt von den EintrÃ¤gen in der Datei /etc/apt/sources.list
Â Â Â  ab. Wenn Sie gegenwÃ¤rtig Testing verwenden, sollten diese
    EintrÃ¤ge in etwa so aussehen:

Â Â Â  deb http://ftp.de.debian.org/debian/ testing main

Â Â Â  oder

Â Â Â  deb http://ftp.de.debian.org/debian/ bullseye main

    Wenn der Eintrag im dritten Feld von /etc/apt/sources.list
    'testing' lautet, dann werden Sie auch nach der VerÃ¶ffentlichung
    weiter Testing verwenden. Nachdem bullseye verÃ¶ffentlicht wurde,
Â Â Â  werden Sie also eine neue Debian-Distribution mit einem anderen
    Codenamen haben. Am Anfang werden die VerÃ¤nderungen kaum
    auffallen. Das wird sich aber Ã¤ndern, sobald neue Pakete von
    Unstable nach Testing kommen.

    Steht jedoch 'bullseye' im dritten Feld, werden Sie kÃ¼nftig
Â Â Â  Stable haben (weil bullseye dann die neue stabile
    VerÃ¶ffentlichung sein wird).

3.1.13. Ich bin noch immer verwirrt. Was sagten Sie, soll ich
installieren?

Â Â Â  Wenn Sie sich unsicher sind, dann wÃ¤re wohl die
    Stable-Distribution die beste Wahl.

3.2. Aber was ist mit Knoppix, Linux Mint Debian Edition, Ubuntu und
all den anderen Distributionen?

    All diese Distributionen sind nicht Debian. Sie basieren auf
Â Â Â  Debian. Obwohl es viele Ã„hnlichkeiten und Gemeinsamkeiten bei
    ihnen gibt, gibt es aber auch einige entscheidende Unterschiede.

    All diese Distributionen haben ihre eigenen VorzÃ¼ge und sind auf
    eine bestimmte Gruppe von Benutzern zugeschnitten. Mehr
Â Â Â  Informationen hierzu finden Sie unter Auf Debian basierende
    Software-Distributionen (https://www.debian.org/misc/
    children-distros) auf Debians Website.

3.2.1. Ich weiÃŸ jetzt, dass Knoppix/Linux Mint Debian Edition/Ubuntu/
... auf Debian basieren. Bedeutet das auch, dass ich die
Â»aptÂ«-Paketwerkzeuge verwenden kann, wenn ich eine dieser
Distributionen auf meiner Festplatte installiere?

    Diese Distributionen basieren auf Debian, sind jedoch nicht
    Debian. Sie kÃ¶nnen aber dennoch die apt-Paketwerkzeuge zusammen
Â Â Â  mit einer /etc/apt/sources.list-Datei verwenden, die auf die
    Repositories dieser Distributionen verweist. Aber dann verwenden
    Sie nicht Debian, sondern eine andere Distribution. Das ist nicht
    das gleiche.

    Wenn Sie eine bestimmte Distribution nutzen, sollten Sie auch
    genau diese benutzen, und nicht versuchen, zusÃ¤tzlich Pakete aus
    anderen Distributionen einzumischen. Recht hÃ¤ufig zieht es
Â Â Â  Probleme nach sich, wenn versucht wird, Debian-Pakete anderer
    Distributionen zu installieren. Die Tatsache, dass alle dasselbe
    Format und den gleichen Namen (.deb) verwenden, macht die Pakete
    mitnichten automatisch kompatibel zueinander.

    Beispielsweise handelt es sich bei Knoppix um eine
    Linux-Distribution, die entworfen wurde, um als Live-CD gebootet
    zu werden, wohingegen Debian fÃ¼r die Installation auf der
    Festplatte gedacht ist. Knoppix ist hervorragend geeignet, wenn
    Sie ermitteln wollen, ob eine bestimmte Hardware funktioniert
Â Â Â  oder wenn Sie herausfinden mÃ¶chten, wie sich ein GNU/Linux-System
    Â»anfÃ¼hltÂ«. Knoppix ist ein gutes VorfÃ¼hrsystem, wÃ¤hrend Debian
    entworfen wurde, um 24 Stunden am Tag und 7 Tage die Woche zu
    laufen. DarÃ¼ber hinaus ist die Anzahl der verfÃ¼gbaren Pakete und
    die Zahl der unterstÃ¼tzten Prozessorarchitekturen bei Debian
    weitaus grÃ¶ÃŸer als bei Knoppix.

    Wenn Sie Debian wollen, ist es das Beste, es mit den vom
    Debian-Projekt bereitgestellten Mitteln zu installieren. Auch
    wenn es mÃ¶glich ist, Debian Ã¼ber andere Distributionen wie etwa
Â Â Â  Knoppix zu installieren, erfordert das etwas Sachverstand.
    Aufgrunddessen, dass Sie diese FAQ lesen, nehmen wir an, dass
    Debian und Knoppix neu fÃ¼r Sie sind. In diesem Fall ersparen Sie
    sich besser den spÃ¤teren Ã„rger und installieren Sie Debian sauber
    von Grund auf neu.

3.2.2. Ich habe Knoppix/Linux Mint Debian Edition/Ubuntu/... auf
meiner Festplatte installiert. Jetzt habe ich ein Problem. Was soll
ich tun?

    Wir raten Ihnen, nicht die Debian-Foren zu benutzen (weder die
    Mailinglisten noch den IRC), da die Leute, die Ihnen helfen
Â Â Â  wollen, glauben kÃ¶nnten, dass Sie ein Debian-System benutzen. Die
    Â»LÃ¶sungenÂ«, die Sie so erhalten, passen mÃ¶glicherweise nicht zu
    Ihrem System. Es kÃ¶nnte sogar sein, dass dadurch Ihre Probleme
    nur noch grÃ¶ÃŸer werden.

    Benutzen Sie statt dessen vorrangig die Foren der entsprechenden
Â Â Â  Distribution. Wenn Sie dort keine Hilfe finden, oder die LÃ¶sungen
    Ihr Problem nicht beheben, kÃ¶nnen Sie immer noch in Debian-Foren
    nachhaken. Behalten Sie jedoch das zuvor gesagte im Hinterkopf.

3.2.3. Ich benutze Knoppix/LMDE/Ubuntu/... und mÃ¶chte nun Debian
verwenden. Wie steige ich um?

    Betrachten Sie den Wechsel von einer auf Debian basierenden
    Distribution zu Debian als Wechsel von einem Betriebssystem zu
    einem anderen. Sie sollten Sicherungskopien Ihrer Daten anlegen
Â Â Â  und das Betriebssystem von Grund auf neu installieren. Sie
    sollten nicht versuchen, ein Â»UpgradeÂ« auf ein Debian mit Hilfe
    der Paketwerkzeuge zu machen, da Sie am Ende mÃ¶glicherweise mit
    einem unbrauchbaren System dastehen kÃ¶nnten.

    Wenn sich alle Ihre Benutzerdaten (beispielsweise /home) auf
    einer gesonderten Partition befinden, ist der Umstieg auf Debian
    ziemlich einfach. Sie mÃ¼ssen das Installationssystem lediglich
Â Â Â  anweisen, diese Partition bei der Neuinstallation einzubinden
    (aber nicht zu formatieren). Sicherungskopien Ihrer Daten ebenso
    wie der Konfigurationsdateien (etwa /etc/ und vielleicht auch /
    var/) anzulegen, ist dennoch ratsam.

Kapitel 4. KompatibilitÃ¤tsfragen

4.1. Auf welchen Hardware-Architekturen/Systemen lÃ¤uft Debian GNU/
Linux?

    Debian GNU/Linux enthÃ¤lt den kompletten Quelltext aller
    mitgelieferten Programme, daher sollte es auf allen Systemen
Â Â Â  laufen, die vom Linux-Kernel unterstÃ¼tzt werden; Details finden
    Sie in der Linux FAQ (http://en.tldp.org/FAQ/Linux-FAQ/intro.html
    #DOES-LINUX-RUN-ON-MY-COMPUTER) .

Â Â Â  Die aktuelle Debian GNU/Linux-VerÃ¶ffentlichung 10, enthÃ¤lt eine
    komplette BinÃ¤rdistribution fÃ¼r die folgenden Architekturen:

      * amd64: fÃ¼r alle Systeme basierend auf AMD 64-Bit-CPUs mit
        AMD64-Erweiterung und Intel-CPUs mit EM64T-Erweiterung und
        einem normalen 64-Bit-Userspace.

      * arm64: unterstÃ¼tzt die aktuellsten 64-Bit ARM-GerÃ¤te.

      * armel: fÃ¼r Little-Endian ARM-Maschinen.

      * armhf: eine Alternative zu armel, fÃ¼r ARMv7-Maschinen mit
        Hardware-FlieÃŸkommaeinheit.

      * i386: fÃ¼r PCs, die auf Intel- oder kompatiblen Prozessoren
        basieren, einschlieÃŸlich 386, 486, Pentium, Pentium Pro,
        Pentium II (sowohl Klamath als auch Celeron) und Pentium III
        von Intel, und den meisten kompatiblen Prozessoren von AMD,
Â Â Â      Cyrix und anderen.

      * ia64: fÃ¼r Intel-IA-64-Computer (Â»ItaniumÂ«).

      * mips: fÃ¼r Big-Endian-MIPS-Systeme von SGI, Indy und Indigo2; 
        mipsel: fÃ¼r Little-Endian-MIPS-Maschinen, Digital
        DECstations.

      * powerpc: fÃ¼r einige IBM-/Motorola-PowerPC-Maschinen,
        einschlieÃŸlich den Apple Macintosh PowerMac-Modellen sowie
        den CHRP-, und PReP- Open-Architecture-Maschinen.

      * ppc64el: 64-bit Little-Endian PowerPC-Portierung, unterstÃ¼tzt
        verschiedene aktuelle PowerPC-/POWER-Prozessoren.

      * s390x: 64-Bit-Portierung fÃ¼r IBM System z-Maschinen; hat die
        s390-Maschinen ersetzt.

    Weitere Debian-BinÃ¤rdistributionen befinden sich derzeit in der
    Entwicklung: hurd-i386 (fÃ¼r GNU-Hurd-Kernel auf i386 32-Bit-PCs),
    mipsel64 (fÃ¼r 64-Bit MIPS im Little-Endian-Modus), powerpcspe
Â Â Â  (Portierung fÃ¼r die "Signal Processing Engine"-Hardware), sparc64
    (fÃ¼r 64-Bit SPARC-Prozessoren), sh (fÃ¼r Hitachi
    SuperH-Prozessoren) und x32 (fÃ¼r amd64/x86_64-CPUs mit
    32-Bit-Zeigern).

    Die UnterstÃ¼tzung fÃ¼r die m68k-Architektur wurde in der
    Etch-VerÃ¶ffentlichung (Debian 4.0) eingestellt, da es die im
    Debian-Projekt gestellten Anforderungen zur VerÃ¶ffentlichung
    nicht erfÃ¼llte. Diese Architektur bezieht sich auf Amigas und
Â Â Â  ATARIs mit einem Motorola 680x0-Prozessor fÃ¼r x>=2; mit MMU.
    Dennoch ist diese Portierung noch immer aktiv und fÃ¼r die
    Installation verfÃ¼gbar, auch wenn sie nunmehr nicht mehr Teil der
    offiziellen Stable-VerÃ¶ffentlichung ist; sie wird mÃ¶glicherweise
    fÃ¼r zukÃ¼nftige VerÃ¶ffentlichungen wieder reaktiviert.

    Die UnterstÃ¼tzung fÃ¼r hppa (Hewlett-Packard's PA-RISC-Machinen)
    und alpha (Compaq/Digital's Alpha-Systeme) wurde in der
Â Â Â  Squeeze-VerÃ¶ffentlichung (Debian 6.0) aus Ã¤hnlichen GrÃ¼nden
    eingestellt. Die arm-Portierung wurde ebenfalls mit dieser
    VerÃ¶ffentlichung eingestellt, sie wurde durch die armel
    -Architektur ersetzt.

    Die UnterstÃ¼tzung fÃ¼r die 32-Bit s390-Portierung (s390) wurde
    beendet und in Jessie (Debian 8) durch s390x ersetzt. AuÃŸerdem
Â Â Â  sind die Portierungen IA-64 und Sparc aus der VerÃ¶ffentlichung
    entfernt, da sie nicht mehr genÃ¼gend UnterstÃ¼tzung aus der
    Entwicklergemeinde bekamen.

Â Â Â  Weitere Informationen Ã¼ber verfÃ¼gbare Portierungen finden Sie auf
    der Portierungs-Website (https://www.debian.org/ports/) .

    BezÃ¼glich nÃ¤herer Details zum Booten, Partitionieren der
    Festplatte, Aktivieren von PCMCIA- (PC-Card) GerÃ¤ten und
Â Â Â  Ã¤hnlichen Dingen folgen Sie bitte den Anweisungen in der
    Installationsanleitung, verfÃ¼gbar Ã¼ber unsere Website unter
    https://www.debian.org/releases/stable/installmanual (https://
    www.debian.org/releases/stable/installmanual) .

4.2. Welche Kernel beinhalten die Distributionen von Debian GNU/
Linux?

Â Â Â  Neben Linux bietet Debian eine vollstÃ¤ndige BinÃ¤rdistribution fÃ¼r
    die folgenden Betriebssystem-Kernel:

      * FreeBSD: bereitgestellt durch die kfreebsd-amd64- und 
        kfreebsd-i386-Portierungen; fÃ¼r 64-Bit-PCs respektive
Â Â Â      32-Bit-PCs. Diese Portierungen wurden erstmals in Debian 6.0
        Squeeze als Technologie-Vorschau verÃ¶ffentlicht. Allerdings
        waren sie nicht Teil der Jessie-VerÃ¶ffentlichung (Debian 8).

Â Â Â  ZusÃ¤tzlich zu diesen wird auch an folgenden Adaptierungen
    gearbeitet:

      * avr32, Portierung auf Atmels 32-Bit RISC-Architektur;

      * hurd-i386, eine Portierung fÃ¼r 32-Bit-PCs. Diese Portierung
Â Â Â      wird GNU Hurd verwenden, ein neues, durch die GNU-Gruppe
        zusammengestelltes Betriebssystem.

      * sh, Portierung auf Hitachi-SuperH-Prozessoren.

    Es gab auch Bestrebungen, die Distribution auf den NetBSD-Kernel
    zu portieren, um somit netbsd-i386 (fÃ¼r 32-Bit-PCs) und 
Â Â Â  netbsd-alpha (fÃ¼r Alpha-Maschinen) anzubieten. Aber diese
    Portierungen wurde nie verÃ¶ffentlicht und sind mittlerweile
    stillgelegt.

Â Â Â  Weitere Informationen Ã¼ber verfÃ¼gbare Portierungen finden Sie auf
    der Portierungs-Website (https://www.debian.org/ports/) .

4.3. Wie kompatibel ist Debian mit anderen Linux-Distributionen?

    Debian-Entwickler kommunizieren mit Herstellern anderer
    Linux-Distributionen, um nach MÃ¶glichkeit BinÃ¤rkompatibilitÃ¤t
Â Â Â  zwischen Linux-Distributionen sicherzustellen. ^[1] Die meisten
    kommerziellen Linux-Produkte laufen unter Debian genau so gut wie
    auf dem System, auf dem sie erstellt wurden.

    Debian GNU/Linux folgt dem Linux Filesystem Hierarchy Standard
    (http://www.pathname.com/fhs) . Jedoch gibt es einen gewissen
Â Â Â  Interpretationsspielraum bei einigen Festlegungen in diesem
    Standard, was zu kleineren Unterschieden zwischen einem
    Debian-System und anderen Linux-Systemen fÃ¼hren kann.

4.4. In welchem MaÃŸe ist der Quellcode von Debian mit anderen
Unix-Systemen kompatibel?

    FÃ¼r die meisten Anwendungen ist der Linux-Quellcode kompatibel
    mit anderen Unix-Systemen. Er unterstÃ¼tzt nahezu alles, was in
    System V Unix-Systemen und den freien und kommerziellen
    BSD-basierten Systemen verfÃ¼gbar ist. Jedoch hat solch eine
    Behauptung im Unix-Umfeld nahezu keine Bedeutung, da es keine
Â Â Â  MÃ¶glichkeit gibt, dies zu Ã¼berprÃ¼fen. Im Bereich der
    Software-Entwicklung wird vollstÃ¤ndige KompatibilitÃ¤t benÃ¶tigt
    statt nur in Â»nahezu allenÂ« FÃ¤llen. Daher wurden schon vor Jahren
    Standards als nÃ¶tig erachtet und heutzutage ist POSIX.1 (IEEE
    Standard 1003.1-1990) einer der bedeutendsten Standards fÃ¼r
    Quellcode-KompatibilitÃ¤t in Unix-artigen Betriebssystemen.

    KonformitÃ¤t mit POSIX.1 ist erklÃ¤rtes Ziel fÃ¼r Linux, aber die
    POSIX-Standards kosten richtiges Geld und die POSIX.1- (und FIPS
    151-2-) Zertifizierung ist sehr teuer; dies erschwerte es
    Linux-Entwicklern, vollstÃ¤ndige POSIX-KonformitÃ¤t zu erreichen.
Â Â Â  Die Zertifizierungskosten machen es unwahrscheinlich, dass Debian
    je eine offizielle KonformitÃ¤tszertifizierung erhÃ¤lt, selbst wenn
    es die Validierungstests vollstÃ¤ndig besteht. (Die
    Validierungstests sind mittlerweile frei verfÃ¼gbar, so dass davon
    ausgegangen werden kann, dass sich mehr Personen mit
    Angelegenheiten rund um POSIX.1 befassen werden.)

    Unifix GmbH (Braunschweig, Deutschland) entwickelte ein
    Linux-System, das zertifiziert wurde, zu FIPS 151-2 (einer
Â Â Â  Obermenge von POSIX.1) komptibel zu sein. Diese Technologie war
    in Unifix' eigener Distribution namens Unifix Linux 2.0 und in
    Lasermoon's Linux-FT enthalten.

4.5. Kann ich Debian-Pakete (Â».debÂ«-Dateien) auf meinem Red Hat-/
Slackware-/... Linux-System verwenden? Kann ich Red Hat-Pakete
(Â».rpmÂ«-Dateien) auf meinem Debian GNU/Linux-System einsetzen?

Â Â Â  Die verschiedenen Linux-Distributionen verwenden unterschiedliche
    Paketformate und Paketverwaltungsprogramme.

    Was wahrscheinlich funktioniert:

        FÃ¼r einen Linux-Rechner, der mit einer Â»fremdenÂ« Distribution
        betrieben wird, kÃ¶nnen Sie sich eines Programmes bedienen,
        welches Debian-Pakete entpackt. Umgekehrt kÃ¶nnen Sie auch mit
        dem Entpacken eines Red-Hat- oder Slackware-Pakets auf einem
        Debian-basierten Rechner Erfolg haben. Entscheidend dabei
        ist, wohin die Dateien des Pakets gelangen; mit anderen
        Worten, inwieweit die Distributionen den Linux Filesystem
        Hierarchy Standard befolgen. Des weiteren besteht die
        MÃ¶glichkeit, mit Hilfe von alien (https://packages.debian.org
        /alien) Pakete aus einem Paketformat in ein anderes zu
        konvertieren.

    Was wahrscheinlich nicht funktioniert:

        Die meisten Paketverwaltungsprogramme erstellen
        administrative Dateien, wenn sie ein Archiv auspacken. Diese
Â Â Â      administrativen Dateien sind im Allgemeinen nicht
        standardisiert. Deshalb wird das Auspacken eines
        Debian-Pakets auf einem Â»fremdenÂ« Rechner unvorhersehbare
        (und sicher keine sinnvollen) Auswirkungen auf den
        Paketmanager in diesem System haben. Ebenso kÃ¶nnten Werkzeuge
        anderer Distributionen erfolgreich ihre Archive auf einem
        Debian-System auspacken, werden aber wahrscheinlich Fehler im
        Debian-Paketverwaltungssystem verursachen, wenn die Zeit der
        Aktualisierung oder Entfernung dieser Pakete kommt, oder wenn
        einfach nur ausgegeben werden soll, welche Pakete in einem
        System vorhanden sind.

    Ein besserer Weg:

        Der Linux File System Standard (und damit Debian GNU/Linux)
        fordert, dass Unterverzeichnisse von /usr/local/ vollstÃ¤ndig
        unter der Kontrolle des Benutzers stehen. So bietet es sich
        an, Â»fremdeÂ« Pakete in dieses Verzeichnis zu entpacken und
        die dort befindlichen Programme selbst aktuell zu halten, zu
        konfigurieren und gegebenenfalls wieder zu lÃ¶schen.

4.6. Wie soll ich ein nicht-Debian-Programm installieren?

    Dateien im Verzeichnis /usr/local/ und darunter werden vom
    Debian-Paketverwaltungssystems ignoriert. Deswegen ist es Ã¼blich,
    den Quellcode eigener Programme in /usr/local/src/ abzulegen. Sie
Â Â Â  kÃ¶nnten zum Beispiel die Dateien eines Pakets namens Â»foo.tarÂ« in
    das Verzeichnis /usr/local/src/foo/ extrahieren. Nachdem Sie es
    kompiliert haben, legen Sie die BinÃ¤rprogramme in /usr/local/bin/
    ab, die Bibliotheken in /usr/local/lib/ und die
    Konfigurationsdateien in /usr/local/etc/.

    Falls es zwingende GrÃ¼nde gibt, Programme oder Dateien in einem
    gewissen Verzeichnis abzulegen, kÃ¶nnen Sie sie dennoch unter /usr
Â Â Â  /local/ speichern und dementsprechend symbolische Links von der
    benÃ¶tigten Stelle im Dateisystem zur Position in /usr/local/
    anlegen, zum Beispiel mit

Â Â Â  ln -s /usr/local/bin/foo /usr/bin/foo

    Auf jeden Fall sollten Sie, wenn Sie ein Paket erhalten, dessen
    Copyright die Weitergabe gestattet, in Betracht ziehen, ein
    Debian-Paket daraus zu erzeugen und es in das Debian-System
Â Â Â  hochzuladen. Anleitungen, wie man Paketbetreuer wird, sind im
    Debian-Policy-Handbuch (siehe AbschnittÂ 12.1, â€žWelche andere
    Dokumentation gibt es auf einem und fÃ¼r ein Debian-System?â€œ)
    verfÃ¼gbar.


---------------------------------------------------------------------

    ^[1] Die Linux Standard Base (https://wiki.linuxfoundation.org/
    lsb/start/) -Spezifikation legt fest, wie dasselbe BinÃ¤rpaket
    unter verschiedenen Distributionen verwendet werden kann. Nachdem
    Jessie (Debian 8) verÃ¶ffentlicht wurde, hat Debian entschieden,
Â Â Â  auf die LSB-KompatibilitÃ¤t zu verzichten (https://
    sources.debian.org/src/lsb/9.20170808/debian/README.Debian/) .
    Lesen Sie die E-Mail vom 3. Juli 2015 von Didier Raboud (https://
    lists.debian.org/4526217.myWFlvm1rM@gyllingar) und die
    nachfolgende Diskussion fÃ¼r Hintergrundinformationen.

Kapitel 5. FÃ¼r Debian-Systeme verfÃ¼gbare Software

5.1. Welche Art von Anwendungen und Entwicklungs-Software ist fÃ¼r
Debian GNU/Linux verfÃ¼gbar?

Â Â Â  Wie die meisten Linux-Distributionen bietet Debian GNU/Linux:

      * die Haupt-GNU-Anwendungen fÃ¼r Software-Entwicklung,
        Dateibearbeitung und Textverarbeitung, darunter gcc, g++,
        make, texinfo, Emacs, der Bash-Shell und viele aktualisierte
        Unix-Hilfsprogramme,

      * Perl, Python, Tcl/Tk sowie verschiedene zugehÃ¶rige Programme,
        Module und Bibliotheken fÃ¼r diese,

      * TeX (LaTeX) und Lyx, dvips, Ghostscript,

      * das X-Window-System, das eine netzwerkbasierte grafische
        Benutzerschnittstelle fÃ¼r Linux bereitstellt, und unzÃ¤hlige
Â Â Â      X-Anwendungen, einschlieÃŸlich der GNOME-, KDE- und
        Xfce-Desktop-Umgebungen,

      * ein komplettes Sortiment von Netzwerkanwendungen, mit Servern
        fÃ¼r Internet-Protokolle wie HTTP (WWW), FTP, NNTP (news),
        SMTP und POP (E-Mail) sowie DNS (Server fÃ¼r die
        NamensauflÃ¶sung); relationale Datenbanken wie PostgreSQL,
        MySQL; auÃŸerdem Webbrowser, inklusive der verschiedenen
        Mozilla-Produkte.

      * eine vollstÃ¤ndige Palette von BÃ¼roanwendungen, wie die
        Office-Programme von LibreOffice, Gnumeric und andere
        Tabellenverarbeitungsprogramme, WYSIWYG-Editoren und
        Kalender.

    Mehr als 57200 Pakete, bestehend aus News-Servern und
    -Leseprogrammen, Sound-UnterstÃ¼tzung, FAX-Programmen, Datenbank-
    und Tabellen-Programmen, Bildverarbeitungsprogrammen,
Â Â Â  Kommunikations-, Netzwerk- und E-Mail-Programmen, Webservern
    sowie Amateurfunkprogrammen und vielem mehr sind in der
    Distribution enthalten. Weitere 930 Software-Sammlungen sind als
    Debian-Paket verfÃ¼gbar, aber wegen LizenzeinschrÃ¤nkungen gehÃ¶ren
    diese nicht zum offiziellen Teil von Debian.

5.2. Wer schreibt die ganzen Programme?

    FÃ¼r jedes Paket finden Sie die Autoren des Programms in der Datei
Â Â Â  /usr/share/doc/PAKET/copyright, wobei PAKET durch den Paketnamen
    ersetzt werden muss.

    Betreuer, die diese Software fÃ¼r das Debian GNU/Linux-System
    paketiert haben, sind in der control-Datei (siehe AbschnittÂ 7.4,
Â Â Â  â€žWas ist eine Debian-control-Datei?â€œ) aufgelistet, die jedem
    Paket beiliegt. Das Debian-Ã„nderungsprotokoll (Changelog) in /usr
    /share/doc/PAKET/changelog.Debian.gz erwÃ¤hnt diejenigen, die
    ebenfalls an diesem Debian-Paket gearbeitet haben.

5.3. Wie kann ich eine aktuelle Liste der Programme, die fÃ¼r Debian
paketiert wurden, bekommen?

    Eine vollstÃ¤ndige Liste ist auf jedem Debian-Spiegelserver
Â Â Â  (https://www.debian.org/distrib/ftplist) in der Datei indices/
    Maintainers zu finden. Diese Datei enthÃ¤lt die Paketnamen sowie
    die Namen und E-Mail-Adressen der jeweiligen Betreuer.

Â Â Â  Debians Paket-Website (https://packages.debian.org/) fasst die
    Pakete in rund dreiÃŸig Gruppen (Sektionen) zusammen.

5.4. Wie kann ich eine Entwicklungsumgebung installieren, um Pakete
zu bauen?

    Wenn Sie auf Ihrem Debian-System Pakete bauen (erstellen)
    mÃ¶chten, benÃ¶tigen Sie eine grundlegende Entwicklungsumgebung,
    inklusive einem C-/C++-Compiler und einigen anderen essentiellen
Â Â Â  Paketen. Um diese Umgebung zu erstellen, mÃ¼ssen Sie einfach nur
    das Paket build-essential installieren. Dies ist ein Meta- oder
    Platzhalter-Paket. Es steht fÃ¼r einen Satz von Paketen, die die
    zum Bau eines Debian-Pakets benÃ¶tigten
    Standard-Entwicklungswerkzeuge beinhalten.

    Gewisse Programmpakete lassen sich allerdings nur mit
    zusÃ¤tzlicher Software bauen, etwa Bibliotheks-Headern oder
Â Â Â  zusÃ¤tzlichen Werkzeugen wie autoconf oder gettext. Debian stellt
    viele dieser Werkzeuge, die zum Bau von Software-Paketen benÃ¶tigt
    werden, als Debian-Pakete bereit.

    Herauszufinden, welche Software genau benÃ¶tigt wird, kann unter
    UmstÃ¤nden schwierig sein, auÃŸer Sie mÃ¶chten lediglich
    Debian-Pakete neu bauen. Dies ist nÃ¤mlich recht einfach, da
    offizielle Debian-Pakete eine Liste der zusÃ¤tzlichen Software
Â Â Â  enthalten mÃ¼ssen (zusÃ¤tzlich zu den Paketen in build-essential),
    die zum Bau benÃ¶tigt werden. Diese werden Build-Dependencies
    (BauabhÃ¤ngigkeiten) genannt. Um alle zum Bau eines bestimmtes
    Quellpakets nÃ¶tigen Pakete zu installieren und das Quellpaket
    dann anschlieÃŸend zu bauen, fÃ¼hren Sie einfach folgendes aus:

Â Â Â  # apt-get build-dep foo
    # apt-get source --build foo

    Beachten Sie: falls Sie die Linux-Kernel, die von Debian
    angeboten werden, selbst bauen mÃ¶chten, sollten Sie auch das
Â Â Â  kernel-package-Paket installieren. Weitere Details finden Sie
    unter AbschnittÂ 10.2, â€žWelche Werkzeuge zum Erzeugen eines
    angepassten Kernels stellt Debian zur VerfÃ¼gung?â€œ.

5.5. Was fehlt bei Debian GNU/Linux?

    Es existiert eine Auflistung von Paketen, die noch fÃ¼r Debian
Â Â Â  erstellt werden sollen: die Liste der Arbeit-bedÃ¼rfenden und
    voraussichtlichen Pakete (https://www.debian.org/devel/wnpp/) .

Â Â Â  Weitere Informationen Ã¼ber das HinzufÃ¼gen fehlender Software
    finden Sie unter KapitelÂ 13, Zum Debian-Projekt beitragen.

5.6. Wieso bekomme ich die Nachricht Â»ld: cannot find -lfooÂ«, wenn
ich Programme kompiliere? Warum gibt es keine libfoo.so-Dateien in
den Debian-Bibliothekspaketen?

    Die Debian-Richtlinien verlangen, dass solche symbolischen Links
    (zu libfoo.so.x.y.z oder Ã¤hnlichen) in separaten
Â Â Â  Entwicklungspaketen gepackt werden. Diese Pakete werden
    Ã¼blicherweise Â»libfoo-devÂ« oder Â»libfooX-devÂ« (wenn das
    Bibliothekspaket libfooX heiÃŸt, X steht dabei fÃ¼r eine Zahl)
    genannt.

5.7. (Wie) UnterstÃ¼tzt Debian Java?

    Es sind mehrere freie Implementierungen der Java-Technologie als
    Debian-Pakete verfÃ¼gbar, die sowohl Java-Development-Kits
Â Â Â  (Entwicklungsumgebungen) wie auch Runtime-Environments
    (Laufzeitumgebungen) enthalten. Sie kÃ¶nnen damit unter Debian
    Java-Programme schreiben, auf Programmierfehler untersuchen und
    auch ausfÃ¼hren.

    Um ein Java-Applet ausfÃ¼hren zu kÃ¶nnen, benÃ¶tigen Sie einen
    Webbrowser mit der FÃ¤higkeit, diese zu erkennen und auszufÃ¼hren.
Â Â Â  Verschiedene in Debian verfÃ¼gbare Webbrowser, wie Mozilla oder
    Konqueror, kÃ¶nnen mit einem Java-Plugin erweitert werden, welches
    es ermÃ¶glicht, Java-Applets auszufÃ¼hren.

Â Â Â  Weitere Informationen finden Sie in der Debian-Java-FAQ (https://
    www.debian.org/doc/manuals/debian-java-faq/) .

5.8. Wie kann ich prÃ¼fen, ob ich ein Debian-System benutze und welche
Version es ist?

Â Â Â  Um zu Ã¼berprÃ¼fen, ob Ihr System von Original-Debian-CDs
    installiert wurde, verwenden Sie den Befehl

Â Â Â  lsb_release -a

    Es wird der Name der Distribution (im Feld Â»Distributor IDÂ«)
Â Â Â  sowie die Version des Systems (in den Feldern Â»ReleaseÂ« und
    Â»CodenameÂ«) angezeigt. Folgendes ist ein Beispiel von einem
    Debian-System:

    $ lsb_release -a
    No LSB modules are available.
Â Â Â  Distributor ID: Debian
    Description:    Debian GNU/Linux 7.4 (wheezy)
    Release:    7.4
    Codename:   wheezy

    Sie kÃ¶nnen auÃŸerdem kontrollieren, ob die Datei /etc/
Â Â Â  debian_version existiert. Sie enthÃ¤lt nur eine einzelne Zeile mit
    der Versionsnummer der VerÃ¶ffentlichung, wie sie in dem
    base-files-Paket definiert ist.

    Benutzer sollten sich jedoch bewusst machen, dass ein
    Debian-System aus vielen Teilen besteht, jedes von ihnen kann
    aktualisiert werden, (meistens) unabhÃ¤ngig voneinander. Jede
Â Â Â  Debian-VerÃ¶ffentlichung enthÃ¤lt streng definierte und
    unverÃ¤nderbare Inhalte. Aktualisierungen sind separat verfÃ¼gbar.
    Um eine kurze Ausgabe des Installationsstatus' eines Pakets foo
    zu bekommen, geben Sie dpkg --list foo ein. Eine ausfÃ¼hrlichere
    Beschreibung erhalten Sie mit:

Â Â Â  dpkg --status foo

Â Â Â  Die Versionsnummern aller installierten Pakete kÃ¶nnen Sie sich
    anzeigen lassen mit:

Â Â Â  dpkg -l

    Beachten Sie, dass die Existenz des dpkg-Programms zwar die
    Installation von Debian-Paketen auf dem jeweiligen System
Â Â Â  ermÃ¶glicht, aber nachdem das Programm auf viele Betriebssysteme
    und Architekturen portiert wurde, kann aus dem Vorhandensein von
    dpkg nicht sicher gefolgert werden, dass es sich um ein Debian
    GNU/Linux-System handelt.

5.9. Wie unterstÃ¼tzt Debian andere Sprachen als Englisch?

      * Debian GNU/Linux enthÃ¤lt Tastaturbelegungen (Keymaps) fÃ¼r
        fast zwei Dutzend Tastaturen und stellt im kbd-Paket
        Hilfsprogramme zum Installieren, Anschauen und Modifizieren
        dieser Tabellen bereit.

        Bei der Installation wird der Benutzer gefragt, welche
        Tastatur er benutzen mÃ¶chte.

      * Nahezu alle in Debian enthaltene Software unterstÃ¼tzt UTF-8
        als Zeichensatz. Die alten ZeichensÃ¤tze wie ISO-8859-1 oder
        ISO-8859-2 sind veraltet und sollten nicht mehr verwendet
        werden.
Â Â Â 
      * Momentan werden Ã¼ber die manpages-LANG-Pakete Handbuchseiten
        (manpages) in Deutsch, Spanisch, FranzÃ¶sisch, Ungarisch,
        Italienisch, Japanisch, Koreanisch, NiederlÃ¤ndisch, Polnisch,
        Portugiesisch, Russisch, TÃ¼rkisch und Chinesisch
        bereitgestellt (wobei LANG dem 2-Zeichen ISO-Code des Landes
        entspricht). Um auf eine Handbuchseite in einer bestimmten
        Sprache zuzugreifen, muss der Benutzer die Umgebungsvariable
        Â»LC_MESSAGESÂ« auf die entsprechende Sprache setzen.

        Im Falle der deutschsprachigen Handbuchseiten muss
        LC_MESSAGES z.B. auf Â»germanÂ« gesetzt werden. Das man
        -Programm wird dann die deutschen Handbuchseiten unter /usr/
        share/man/de/ suchen.

5.10. Wo sind ezmlm/djbdns/qmail?

    Dan J. Bernstein pflegte ursprÃ¼nglich all seine Programme (https:
    //cr.yp.to/software.html) unter einer einschrÃ¤nkenden Lizenz zu
    vertreiben, die das Verteilen von modifizierten BinÃ¤rdateien
    nicht gestattete. Im November 2007 allerdings sagte Bernstein: "
Â Â Â  [...] i have decided to put all of my future and [...] past
    software into the public domain"; damit gab er all seine Software
    fÃ¼r die Allgemeinheit frei. Die Bedingungen zur Verteilung seiner
    Software finden Sie in seiner FAQ from distributors (https://
    cr.yp.to/distributors.html) .

    Als dies geschrieben wurde (03/2016), war ezmlm-idx nur in
    Experimental verfÃ¼gbar (mlmmj ist Ã¤hnlich und in Debian Jessie
    enthalten). djbdns ist nur in Sid (Unstable) verfÃ¼gbar, Details
    finden Sie in Fehler #516394 (https://bugs.debian.org/516394) und
Â Â Â  Fehler #796118 (https://bugs.debian.org/796118) ; das Paket
    dbndns enthÃ¤lt eine vergleichbare Alternative. Die
    publicfile-Software ist immer noch freie Software, ein
    publicfile-installer-Paket ist im contrib-Bereich des
    Debian-Archivs zu finden.

Â Â Â  Weitere Software von Dan J. Bernstein (qmail, daemontools,
    ucspi-tcp) ist in Debian enthalten.

5.11. Wo ist der Player fÃ¼r Flash (SWF)?

Â Â Â  Debian enthÃ¤lt mit gnash und swfdec zwei freie SWF-Movie-Player.

5.12. Wo ist Google Earth?

    Google Earth ist auf Googles Website fÃ¼r GNU/Linux erhÃ¤ltlich;
    allerdings es ist nicht nur nicht-freie Software, sondern darf
Â Â Â  darÃ¼ber hinaus grundsÃ¤tzlich nicht von Dritten abgegeben werden.
    Das Paket googleearth-package (aus dem contrib-Bereich) kÃ¶nnte
    jedoch bei der Nutzung dieser Software hilfreich sein.

5.13. Wo sind die VoIP-Programme?

    Es gibt zwei offene Protokolle, die fÃ¼r Voice over IP verwendet
Â Â Â  werden: SIP und H.323. Beide sind in einer Vielzahl von
    Programmen in Debian main implementiert. ekiga ist einer der
    beliebtesten Clients.

5.14. Ich habe eine Karte fÃ¼r drahtloses Netzwerk, die aber nicht mit
Linux funktioniert. Was soll ich tun?

Â Â Â  Kaufen Sie eine, die funktioniert :)

    Alternativ kÃ¶nnen Sie ndiswrapper verwenden, um einen
    Windows-Treiber in Ihrem Linux-System einzusetzen (falls Sie
Â Â Â  einen haben). Weitere Informationen finden Sie auf der
    ndiswrapper-Seite im Debian-Wiki (https://wiki.debian.org/
    NdisWrapper) .

Kapitel 6. Die Debian FTP-Archive

6.1. Wie viele Debian-Distributionen gibt es?

    Es gibt drei groÃŸe Distributionen: Â»StableÂ«, Â»TestingÂ« und
    Â»UnstableÂ«. Die Â»TestingÂ«-Distribution kann zeitweise Â»FrozenÂ«
Â Â Â  (eingefroren) sein (siehe AbschnittÂ 6.5.1, â€žWie erhÃ¤lt Testing
    den Â»frozenÂ«-Status?â€œ). Daneben gibt es noch die Distributionen
    Â»OldstableÂ« und Â»ExperimentalÂ«.

    Experimental wird fÃ¼r Pakete benutzt, die sich noch in der
    Entwicklung befinden und daher die StabilitÃ¤t ihres Systems
    hochgradig gefÃ¤hrden kÃ¶nnen. Diese Distribution benutzen
Â Â Â  Entwickler, welche absolut brandneue Software untersuchen
    mÃ¶chten. Normale Benutzer sollten keine Pakete aus Experimental
    verwenden, weil sich diese selbst fÃ¼r die erfahrensten Benutzer
    als gefÃ¤hrlich oder schÃ¤dlich erweisen kÃ¶nnen.

Â Â Â  FÃ¼r Hilfe bei der Auswahl einer geeigneten Debian-Distribution
    lesen Sie bitte KapitelÂ 3, Eine Debian-Distribution auswÃ¤hlen.

6.2. Was haben all diese Namen wie Etch, Lenny usw. zu bedeuten?

    Dabei handelt es sich einfach um Codenamen. Wenn sich eine
    Debian-Distribution noch in der Entwicklung befindet, besitzt sie
    keine Versionsnummer, aber einen Codenamen. Der Zweck dieser
Â Â Â  Codenamen ist es, das Spiegeln von Debian-Distributionen zu
    vereinfachen (wenn ein echtes Verzeichnis wie unstable plÃ¶tzlich
    in stable umbenannt werden wÃ¼rde, wÃ¼rden eine Menge an Daten
    sinnloserweise erneut heruntergeladen werden).

    Zur Zeit ist stable ein symbolischer Link auf buster (also Debian
Â Â Â  GNU/Linux 10) und testing ein symbolischer Link auf bullseye.
    Dies bedeutet, dass buster die derzeitige Stable-Distribution und
    bullseye die derzeitige Testing-Distribution ist.

    unstable wiederum ist ein permanenter symbolischer Link auf sid,
Â Â Â  da sid immer die Unstable-Distribution ist (siehe dazu
    AbschnittÂ 6.3, â€žWas ist mit Â»SidÂ«?â€œ).

6.2.1. Welche Codenamen wurden in der Vergangenheit verwendet?

    Andere, zusÃ¤tzlich zu Buster und Bullseye bereits verwendete
    Codenamen sind: Buzz fÃ¼r Release 1.1, Rex fÃ¼r Release 1.2, Bo fÃ¼r
    Releases 1.3.x, Hamm fÃ¼r Release 2.0, Slink fÃ¼r Release 2.1,
Â Â Â  Potato fÃ¼r Release 2.2, Woody fÃ¼r Release 3.0, Sarge fÃ¼r Release
    3.1, Etch fÃ¼r Release 4.0, Lenny fÃ¼r Release 5.0, Squeeze fÃ¼r
    Release 6.0, Wheezy fÃ¼r Release 7, Jessie fÃ¼r Release 8 und
    Stretch fÃ¼r Release 9.

6.2.2. Woher stammen diese Codenamen?

Â Â Â  Bis jetzt wurden immer Charaktere des Films Â»Toy StoryÂ« von Pixar
    zur Namensgebung herangezogen:

      * Buzz (Debian 1.1) war der Raumfahrer Buzz Lightyear,

      * Rex (Debian 1.2) war der Tyrannosaurus,

      * Bo (Debian 1.3) war Bo Peep, das MÃ¤dchen, welches die Schafe
        gehÃ¼tet hat,

      * Hamm (Debian 2.0) war das Sparschwein,

      * Slink (Debian 2.1) war Slinky Dog, der Spielzeughund,

      * Potato (Debian 2.2) war, logischerweise, Mr. Potato,

      * Woody (Debian 3.0) war der Cowboy,

      * Sarge (Debian 3.1) war der Sergeant der grÃ¼nen
        Plastiksoldaten,

      * Etch (Debian 4.0) war die Spielzeugtafel (Etch-a-Sketch),
Â Â Â 
      * Lenny (Debian 5.0) war das Fernglas,

      * Squeeze (Debian 6) hieÃŸen die dreiÃ¤ugigen Aliens,

      * Wheezy (Debian 7) war der Gummipinguin mit der roten Fliege,

      * Jessie (Debian 8) war das jodelnde Cowgirl,

      * Stretch (Debian 9) war der Gummioktopus mit den Saugern an
        seinen acht Armen.

      * Buster (Debian 10) war Andys Spielzeughund.

      * Bullseye (Debian 11) war Woodys hÃ¶lzernes Spielzeugpferd.

      * Bookworm (Debian 12) war ein grÃ¼ner Spielzeugwurm mit
        eingebauter Taschenlampe, der es liebt, BÃ¼cher zu lesen.

      * Sid war der bÃ¶sartige Junge von nebenan, der immer die
        Spielzeuge kaputt machte.

    Die Entscheidung (https://lists.debian.org/debian-devel/1996/06/
    msg00515.html) , Toy-Story-Namen zu benutzen, wurde von Bruce
Â Â Â  Perens getroffen (https://lists.debian.org/debian-user/1997/04/
    msg00011.html) , der zu der Zeit Debian-Projektleiter war und
    ebenfalls bei Pixar (der Firma, die die Filme produziert hat)
    arbeitete.

6.3. Was ist mit Â»SidÂ«?

    Sid oder Unstable ist der Ort, wo die meisten Pakete erstmals
    hochgeladen werden. Es wird nie direkt verÃ¶ffentlicht werden, da
Â Â Â  zu verÃ¶ffentlichende Pakete erst in Testing eingefÃ¼gt werden, um
    dann spÃ¤ter in Stable Ã¼bernommen zu werden. Sid enthÃ¤lt Pakete
    fÃ¼r bereits verÃ¶ffentlichte und unverÃ¶ffentlichte Architekturen.

    Der Name Â»SidÂ« kommt ebenfalls aus dem Animationsfilm Â»Toy
Â Â Â  StoryÂ«: Sid war der Junge von Nebenan, der immer die Spielzeuge
    zerstÃ¶rte.

Â Â Â  ^[2]

6.4. Was enthÃ¤lt das stable-Verzeichnis?

      * stable/main/: Dieses Verzeichnis enthÃ¤lt die Pakete, welche
        zur Zeit die neueste VerÃ¶ffentlichung des Debian GNU/
        Linux-Systems darstellen.

        All diese Pakete entsprechen den Debian-Richtlinien fÃ¼r freie
        Software (https://www.debian.org/social_contract#guidelines)
        und sind damit frei benutzbar und verteilbar.

      * stable/non-free/: Dieses Verzeichnis enthÃ¤lt Pakete, deren
        Copyright-Bedingungen die Verbreitung auf die eine oder
        andere Art einschrÃ¤nken.
Â Â Â 
        Einige Pakete z.B. haben Lizenzbedingungen, die eine
        kommerzielle Verbreitung verbieten. Wiederum andere kÃ¶nnen
        weitergegeben werden, sind aber tatsÃ¤chlich Shareware und
        keine freie Software. Die Lizenzbedingungen jedes dieser
        Pakete mÃ¼ssen genau gelesen und wahrscheinlich verhandelt
        werden, bevor eines der Pakete verteilt werden darf, z.B. auf
        einer CD-ROM.

      * stable/contrib/: Dieses Verzeichnis enthÃ¤lt Pakete, die den
        DFSG entsprechen und frei verteilbar sind, aber von Paketen
        abhÃ¤ngen, die nicht frei und deshalb nur in non-free zu
        finden sind.

6.5. Was enthÃ¤lt das testing-Verzeichnis?

Â Â Â  Pakete landen im Â»testingÂ«-Verzeichnis, nachdem sie zu einem
    gewissen Grad in Unstable getestet wurden.

    Diese Pakete mÃ¼ssen identisch fÃ¼r alle Architekturen vorliegen,
    auf denen sie gebaut wurden. Es darf auch keine AbhÃ¤ngigkeit
    vorliegen, welche sie uninstallierbar machen wÃ¼rde. Des Weiteren
Â Â Â  mÃ¼ssen sie weniger verÃ¶ffentlichungskritische Fehler aufweisen
    als die aktuelle Version in Unstable. Auf diese Art hoffen wir,
    dass Testing immer nahe daran ist, ein Release-Kandidat zu
    werden.

    Weitere Informationen Ã¼ber den Status von Testing und Ã¼ber die
Â Â Â  einzelnen Pakete finden Sie unter https://www.debian.org/devel/
    testing (https://www.debian.org/devel/testing) .

6.5.1. Wie erhÃ¤lt Testing den Â»frozenÂ«-Status?

    Sobald die Testing-Distribution weit genug fortgeschritten ist,
    erhÃ¤lt sie durch den Release-Manager den Â»frozenÂ«-Status. Die
Â Â Â  VerzÃ¶gerungszeiten bis zur Aufnahme von Paketen nach Testing
    werden verlÃ¤ngert, um so wenig wie mÃ¶glich neue Fehler von
    Unstable nach Testing zu lassen.

    Nach einiger Zeit wird die Testing-Distribution dann wirklich
    Â»frozenÂ«, also eingefroren. Dies bedeutet, dass alle neuen
    Pakete, die nach Testing sollen, zurÃ¼ckgehalten werden, auÃŸer sie
Â Â Â  beheben verÃ¶ffentlichungskritische Fehler. Die
    Testing-Distribution kann auch wÃ¤hrend sogenannter Â»TestzyklenÂ«
    in diesem Zustand verweilen, wenn die VerÃ¶ffentlichung kurz bevor
    steht.

    Wenn Testing Â»frozenÂ« wird, tendiert auch Unstable dazu,
    teilweise einzufrieren. Das kommt daher, dass die Entwickler sich
    dabei zurÃ¼ckhalten, in groÃŸem Stil neue Software nach Unstable
Â Â Â  hochzuladen, und zwar aufgrund der MÃ¶glichkeit, dass die
    eingefrorene Software in Testing noch kleinere Korrekturen
    benÃ¶tigt oder verÃ¶ffentlichungskritische Fehler behoben werden
    mÃ¼ssen, die verhindern, dass Testing zu Stable wird.

    Alle Fehler in der Testing-Distribution, die ein Paket an der
    Freigabe hindern oder die ganze VerÃ¶ffentlichung verhindern,
Â Â Â  werden mitprotokolliert. Um mehr zu erfahren, schauen Sie in die
    Debian Testing Release-Informationen (https://www.debian.org/
    releases/testing/) .

    Sobald die Anzahl der Fehler sich einem akzeptablen Wert nÃ¤hert,
Â Â Â  deklariert man die eingefrorene Testing-Distribution zur
    Stable-Distribution und verÃ¶ffentlicht sie mit einer
    Versionsnummer.

    Der wichtigste FehlerzÃ¤hler ist der Â»Release Critical bug countÂ«,
    der ZÃ¤hler fÃ¼r die verÃ¶ffentlichungskritischen Fehler. Sie kÃ¶nnen
    ihn auf der Statusseite fÃ¼r verÃ¶ffentlichungskritische Fehler
    (https://bugs.debian.org/release-critical/) verfolgen.
    Gemeinsames Ziel fÃ¼r eine VerÃ¶ffentlichung ist No RC Bugs (keine
Â Â Â  verÃ¶ffentlichungskritischen Fehler) (https://wiki.debian.org/
    ReleaseGoals/NoRCBugs) , was bedeutet, dass die Distribution
    keine Fehlerberichte der Kategorien Â»criticalÂ« (kritisch),
    Â»graveÂ« (gravierend) oder Â»seriousÂ« (ernst) haben soll. Eine
    vollstÃ¤ndige Liste von Problemen, die als kritisch angesehen
    werden, finden Sie im RC-Policy-Dokument (https://
    release.debian.org/testing/rc_policy.txt) .

    Mit jedem neuen Release ist die vorhergegangene
Â Â Â  Â»StableÂ«-Distribution Ã¼berholt und wird in das Archiv verschoben.
    Weitere Informationen finden Sie im Distributions-Archiv (https:/
    /www.debian.org/distrib/archive) .

6.6. Was enthÃ¤lt das unstable-Verzeichnis?

    Das Â»unstableÂ«-Verzeichnis enthÃ¤lt eine Momentaufnahme des
    derzeitigen Entwicklungssystems. Benutzer kÃ¶nnen die Pakete darin
    ohne weiteres ausprobieren oder verwenden, sollten aber darauf
Â Â Â  eingestellt sein, dass diese unter UmstÃ¤nden nur bedingt
    einsatzreif sind. Der Vorteil von Unstable liegt darin, dass alle
    Pakete immer auf dem aktuellsten Stand der GNU/Linux-Entwicklung
    sind. Wenn allerdings etwas kaputt geht, sollten Sie wissen, wie
    sie mit den BruchstÃ¼cken umgehen mÃ¼ssen.

    Unstable enthÃ¤lt ebenfalls die Unterverzeichnisse main, contrib
Â Â Â  und non-free. Die Pakete werden darin nach den bei Stable
    beschriebenen Kriterien abgelegt.

6.7. Was haben all die Verzeichnisse in den Debian-FTP-Archiven zu
bedeuten?

    Diese Verzeichnisse beeinhalten die durch Debian GNU/Linux
Â Â Â  bereitgestellte Software und sind auf jedem Debian-Spiegel
    anzutreffen.

    Der Verzeichnisname dists steht kurz fÃ¼r Â»DistributionenÂ«. In
Â Â Â  diesem Verzeichnis sind die aktuellen und frÃ¼here
    Debian-Distributionen hinterlegt.

    Das pool-Verzeichnis enthÃ¤lt die eigentlichen Pakete, siehe dazu
Â Â Â  auch AbschnittÂ 6.10, â€žWas befindet sich in dem pool-Verzeichnis?â€œ
    .

Â Â Â  ErgÃ¤nzend gibt es folgende Verzeichnisse:

    /tools/:

        enthÃ¤lt DOS-Werkzeuge zum Erstellen von Boot-Disketten, zum
        Partionieren Ihrer Festplatte, zum Packen/Entpacken von
        Dateien und zum Booten von Linux.

    /doc/:

        enthÃ¤lt die grundlegende Debian-Dokumentation, wie z.B. diese
        FAQ, die Anleitungen zum Umgang mit der Fehlerdatenbank, usw.
Â Â Â 
    /indices/:

        enthÃ¤lt verschiedene Auflistungen, darunter eine der
        Paketbetreuer sowie override-Dateien mit gewissen Merkmalen
        der Pakete.

    /project/:

        enthÃ¤lt hauptsÃ¤chlich Material fÃ¼r Entwickler und
        verschiedene Dateien.

6.8. Was haben die ganzen Verzeichnisse in dists/stable/main zu
bedeuten?

    In jedem Hauptverzeichnis^[3] gibt es drei Zusammenstellungen von
Â Â Â  Unterverzeichnissen, die Dateien mit Auflistungen der BinÃ¤rpakete
    enthalten.

    Da sind zum einen die binary-irgendwas-Verzeichnisse, welche
    Dateien mit Auflistungen der BinÃ¤rpakete aller verfÃ¼gbaren
Â Â Â  Computerarchitektur enthalten, z.B. /binary-i386/ fÃ¼r Pakete der
    Intel x86-Architektur oder /binary-sparc/ fÃ¼r Pakete, die auf Sun
    SPARCStations laufen.

    Die vollstÃ¤ndige Liste, welche Architekturen bei den
    Debian-VerÃ¶ffentlichungen berÃ¼cksichtigt wurden, ist auf der
Â Â Â  Debian-Webseite (https://www.debian.org/releases) zu finden. FÃ¼r
    die derzeit aktuelle VerÃ¶ffentlichung finden Sie Details unter
    AbschnittÂ 4.1, â€žAuf welchen Hardware-Architekturen/Systemen lÃ¤uft
    Debian GNU/Linux?â€œ.

    Das Verzeichnis binary-* enthÃ¤lt in den Â»Packages(.gz, .bz2)Â«
Â Â Â  benannten Dateien eine Zusammenfassung von Informationen zu jedem
    einzelnen Paket der Distribution. Die eigentlichen BinÃ¤rpakete
    liegen direkt im pool-Verzeichnis.

    Des Weiteren existiert ein Unterverzeichnis namens Â»source/Â«, das
Â Â Â  Dateien beinhaltet, welche die Quellpakete der Distribution
    auflisten. Diese Dateien heiÃŸen Sources(.gz, .bz2).

    Zu guter Letzt existiert ein Satz von Unterverzeichnissen mit
Â Â Â  Dateien, die vom Installationssystem benÃ¶tigte Auflistungen der
    Pakete enthalten. Diese liegen in debian-installer/binary-
    architektur.

6.9. Wo befindet sich der Quellcode?

    FÃ¼r jede in die Debian-Distributionen aufgenommene Software wird
    auch der Quellcode bereitgestellt. Es ist sogar so, dass die
Â Â Â  zugehÃ¶rigen Lizenzbedingungen meistens verlangen, dass der
    Quellcode zusammen mit dem eigentlichen Programm ausgeliefert
    wird oder zumindest zur VerfÃ¼gung steht.

    Der Quellcode wird Ã¼ber das pool-Verzeichnis (siehe
    AbschnittÂ 6.10, â€žWas befindet sich in dem pool-Verzeichnis?â€œ),
Â Â Â  zusammen mit den architekturspezifischen BinÃ¤rverzeichnissen,
    verteilt. Um den Quellcode zu erhalten, ohne sich um die
    FTP-Archiv-Verzeichnisstruktur kÃ¼mmern zu mÃ¼ssen, kÃ¶nnen Sie z.B.
    apt-get source PAKETNAME verwenden.

    Aufgrund von EinschrÃ¤nkungen in den Lizenzen kÃ¶nnte der Quellcode
    bei Paketen in Â»contribÂ« und Â»non-freeÂ« eventuell nicht verfÃ¼gbar
    sein (diese Bereiche gehÃ¶ren aber formal gesehen auch nicht zum
    Debian-System). In einigen FÃ¤llen dÃ¼rfen nur BinÃ¤rdateien
Â Â Â  (Â»binary blobsÂ«) ohne deren Quellcode verteilt werden (wie z.B.
    bei firmware-misc-nonfree); in anderen FÃ¤llen verbietet die
    Lizenz die Verteilung von im Vornherein gebauten BinÃ¤rdateien,
    erlaubt jedoch Quellcode-Pakete, die die Benutzer dann selbst
    Ã¼bersetzen kÃ¶nnen (wie z.B. bei dem Paket broadcom-sta-dkms).

6.10. Was befindet sich in dem pool-Verzeichnis?

    Pakete werden in einem groÃŸen, letztlich nach den Namen der
    Quellpakete untergliederten Â»PoolÂ« gelagert. Der besseren
    Handhabbarkeit wegen ist das pool-Verzeichnis unterteilt in die
Â Â Â  Abschnitte (Â»mainÂ«, Â»contribÂ« und Â»non-freeÂ«) und dann sortiert
    nach dem ersten Buchstaben des Quellpaketes. Diese Verzeichnisse
    enthalten zahlreiche Dateien: die BinÃ¤rpakete fÃ¼r jede
    Architektur und die Quellpakete, von denen die BinÃ¤rpakete
    erstellt wurden.

    Wo ein Paket abgelegt ist, laÃŸt sich herausfinden, indem man
Â Â Â  apt-cache showsrc PAKETNAME ausfÃ¼hrt und dann in der
    Â»Directory:Â«-Zeile nachschaut. Beispielsweise liegt das
    apache-Paket in pool/main/a/apache.

    Da es sehr viele Bibliothekspakete (mit Namen lib*) gibt, ist der
Â Â Â  Pool hier noch feiner unterteilt, beispielsweise sind
    libpaper-Pakete in pool/main/libp/libpaper/ gespeichert.

Â Â Â  ^[4]

6.11. Was ist Â»IncomingÂ«?

    Nachdem ein Entwickler ein Paket hochgeladen hat, bleibt es fÃ¼r
Â Â Â  eine kurze Zeit in dem Â»incomingÂ«-Verzeichnis, bis es auf seine
    Echtheit Ã¼berprÃ¼ft wurde und somit in das Archiv darf.

    Normalerweise sollte niemand etwas von dort installieren.
    Allerdings gibt es seltene NotfÃ¤lle. Das incoming-Verzeichnis ist
Â Â Â  unter https://incoming.debian.org/ (https://incoming.debian.org/)
    verfÃ¼gbar. Es ist mÃ¶glich, Pakete per Hand von dort zu holen, die
    GPG-Signatur und MD5-PrÃ¼fsumme in den .changes- und .dsc-Dateien
    zu Ã¼berprÃ¼fen und sie dann zu installieren.

6.12. Wie erstelle ich mein eigenes, apt-taugliches Paketdepot?

    Wenn man eigene Debian-Pakete gebaut hat und diese mit den
    Standard-Debian-Paketwerkzeugen installieren mÃ¶chte, so ist es
    mÃ¶glich, ein eigenes apt-taugliches Paketarchiv zu erstellen.
Â Â Â  Dies ist auch nÃ¼tzlich, wenn man nicht bei Debian GNU/Linux
    erhÃ¤ltliche Paketes selbst zur VerfÃ¼gung stellen mÃ¶chte.
    Informationen und Anleitungen, wie Sie dies bewerkstelligen,
    finden Sie im Debian Wiki (https://wiki.debian.org/
    HowToSetupADebianRepository) .


---------------------------------------------------------------------

    ^[2] When the present-day sid did not exist, the FTP site
    organization had one major flaw: there was an assumption that
    when an architecture is created in the current unstable, it will
Â Â Â  be released when that distribution becomes the new stable. For
    many architectures that isn't the case, with the result that
    those directories had to be moved at release time. This was
    impractical because the move would chew up lots of bandwidth.

    The archive administrators worked around this problem for several
    years by placing binaries for unreleased architectures in a
    special directory called "sid". For those architectures not yet
Â Â Â  released, the first time they were released there was a link from
    the current stable to sid, and from then on they were created
    inside the unstable tree as normal. This layout was somewhat
    confusing to users.

    With the advent of package pools (see AbschnittÂ 6.10, â€žWas
    befindet sich in dem pool-Verzeichnis?â€œ), binary packages began
    to be stored in a canonical location in the pool, regardless of
Â Â Â  the distribution, so releasing a distribution no longer causes
    large bandwidth consumption on the mirrors (there is, however, a
    lot of gradual bandwidth consumption throughout the development
    process).

Â Â Â  ^[3] dists/stable/main, dists/stable/contrib, dists/stable/
    non-free, dists/unstable/main/ usw.

    ^[4] FrÃ¼her lagen die Pakete in dem zur jeweiligen Distribution
    gehÃ¶renden Unterverzeichnis von dists. Dies verursachte
Â Â Â  verschiedene Probleme. So zogen Ã„nderungen betrÃ¤chtlichen
    Datenverkehr nach sich. Der Paket-Pool stellte hierfÃ¼r die LÃ¶sung
    dar.

    Die dists-Verzeichnisse werden weiterhin als Ort fÃ¼r die
Â Â Â  Listendateien verwendet, die von Programmen wie apt genutzt
    werden.

Kapitel 7. Grundlagen des Debian-Paketverwaltungssystems

    Dieses Kapitel behandelt einige tiefer gehende Internas der
    Debian-Paketverwaltung. Wenn Sie hauptsÃ¤chlich an der Verwendung
Â Â Â  der entsprechenden Programme interessiert sind, springen Sie zu
    KapitelÂ 8, Die Debian-Paketverwaltungswerkzeuge und/oder
    KapitelÂ 9, Wie man sein Debian-System auf aktuellem Stand hÃ¤lt.

7.1. Was ist ein Debian-Paket?

    Pakete beinhalten im Grundsatz alle notwendigen Dateien, um eine
Â Â Â  Sammlung zusammengehÃ¶riger Befehle und FÃ¤higkeiten zu
    implementieren. Es gibt zwei Arten von Debian-Paketen:

      * BinÃ¤rpakete, die ausfÃ¼hrbare Dateien, Konfigurationsdateien,
        man/info-Seiten, Copyright-Informationen und andere
        Dokumentation beinhalten. Diese Pakete werden in einem
        speziellen Debian-Archivformat verteilt (siehe AbschnittÂ 7.2,
        â€žWie ist ein binÃ¤res Debian-Pakets aufgebaut?â€œ). Sie sind fÃ¼r
        gewÃ¶hnlich an der Dateierweiterung Â».debÂ« zu erkennen.
        BinÃ¤rpakete kÃ¶nnen mittels des Debian-Werkzeugs dpkg entpackt
        werden (eventuell auch Ã¼ber Frontends wie aptitude). Mehr
        Details finden Sie auf dessen Handbuchseite.
Â Â Â 
      * Quellpakete, welche aus einer .dsc-Datei bestehen, die das
        Quellpaket beschreibt (inklusive der Namen der folgenden
        Dateien), einer .orig.tar.gz-Datei, welche den
        Original-Quellcode ohne VerÃ¤nderungen in einem
        gzip-komprimierten tar-Format enthÃ¤lt, sowie Ã¼blicherweise
        einer .diff.gz-Datei mit Debian-spezifischen Ã„nderungen des
        Codes. Das Dienstprogramm dpkg-source packt und entpackt
        Debian-Quellpakete. Mehr Details sind auf der Handbuchseite
        zu finden. (Das Programm apt-get kann als Frontend fÃ¼r
        dpkg-source genutzt werden.)

    FÃ¼r die Installation von Software benutzt das System die von den
    Paketbetreuern sorgfÃ¤ltig definierten AbhÃ¤ngigkeiten. Diese
    AbhÃ¤ngigkeiten sind in der control-Datei, die zu jedem Paket
    gehÃ¶rt, dokumentiert. Zum Beispiel beinhaltet das Paket des GNU
    C-Compilers (gcc) AbhÃ¤ngigkeiten (Â»dependsÂ«) zu dem Paket
    binutils, welches den Linker und den Assembler enthÃ¤lt. Wenn ein
Â Â Â  Benutzer versucht, gcc zu installieren, ohne zuerst binutils
    installiert zu haben, gibt das Paketverwaltungssystem (dpkg) die
    Fehlernachricht aus, dass es das Paket binutils benÃ¶tigt und
    stoppt die Installation von gcc. (Allerdings kann, wer dies nicht
    hinnehmen mÃ¶chte, die PrÃ¼fung auÃŸer Kraft setzen, siehe dpkg(8).)
    NÃ¤heres in AbschnittÂ 7.9, â€žWas ist damit gemeint, dass ein Paket
    eine Depends-, Recommends-, Suggests-, Conflicts-, Replaces- oder
    Provides-AbhÃ¤ngigkeit zu einem anderen Paket hat?â€œ weiter unten.

Â Â Â  Debian-Paketwerkzeuge kÃ¶nnen benutzt werden, um:

      * Pakete oder Paketteile zu verÃ¤ndern und zu verwalten;

      * lokal eine vom Nutzer bevorzugte Version einer Datei in ein
        Paket einzufÃ¼gen;
Â Â Â 
      * Entwickler beim Aufbau von Paketarchiven zu unterstÃ¼tzen, und

      * Benutzern die Installation von Paketen zu ermÃ¶glichen, die
        sich z.B. auf fernen FTP-Servern befinden.

7.2. Wie ist ein binÃ¤res Debian-Pakets aufgebaut?

    Ein Debian-Paket oder eine Debian-Archivdatei beinhaltet
Â Â Â  ausfÃ¼hrbare Dateien, Bibliotheken und Dokumentationen, die zu
    einem Programm oder einer Menge verwandter Programme gehÃ¶ren.
    Normalerweise hat eine Debian-Archivdatei die Dateiendung .deb.

    Die Interna des Debian-Paketformats fÃ¼r ausfÃ¼hrbare Programme
    sind auf der Handbuchseite deb(5) beschrieben. Dieses interne
Â Â Â  Format kann sich (von einer Debian GNU/Linux-VerÃ¶ffentlichung zur
    anderen) verÃ¤ndern, benutzen Sie daher bitte immer dpkg-deb(1),
    um .deb-Dateien zu bearbeiten.

7.3. Warum sind Debian-Paketdateinamen so lang?

    Die Namen aller Debian-BinÃ¤rpaketdateien sind folgendermaÃŸen
Â Â Â  aufgebaut: <foo>_<Versionsnummer>-<Debian-Revisionsnummer>_
    <Debian-Architektur>.deb

    Bitte beachten Sie, dass foo nur nach landlÃ¤ufiger Auffassung den
Â Â Â  Paketnamen darstellt. Sie kÃ¶nnen den Paketnamen der
    Debian-Archivdatei (.deb-Datei) auf eine der folgenden Arten
    herausfinden:

      * untersuchen Sie die Packages-Datei in dem Verzeichnis, in dem
        es im Debian-FTP-Archiv abgelegt ist. Diese Datei enthÃ¤lt
        einen Eintrag fÃ¼r jedes Paket. Der erste Abschnitt in jedem
        Eintrag enthÃ¤lt den formalen Paketnamen.
Â Â Â 
      * benutzen Sie den Befehl dpkg --info foo_VVV-RRR_AAA.deb
        (wobei VVV durch die Version, RRR durch die Revisionsnummer
        und AAA durch die Architektur des Paketes ersetzt werden
        muss). Dies gibt unter anderem den zur entpackten Archivdatei
        gehÃ¶renden Paketnamen aus.

    Die VVV-Komponente ist die Versionsnummer, die vom
Â Â Â  Original-Entwickler festgelegt worden ist. HierfÃ¼r sind keine
    Standards festgelegt. FÃ¼r sie sind daher vÃ¶llig unterschiedliche
    Formate, von Â»19990513Â« bis Â»1.3.8pre1Â« in Gebrauch.

    Die RRR-Komponente ist die Debian-Revisionsnummer, die von einem
    Debian-Entwickler (oder einem individuellen Benutzer, der sich
    entschieden hat, das Paket selber zu bauen) festgelegt wurde.
Â Â Â  Diese Nummer entspricht dem Stand des Debian-Paketes. Eine neue
    Revisionsnummer kennzeichnet daher Ã„nderungen im Debian-Makefile
    (debian/rules), der Debian-control-Datei (debian/control), den
    Installations- oder Entfernungs-Skripten (debian/p*) oder in den
    Konfigurationsdateien, die mit diesem Paket benutzt werden.

    Die AAA-Komponente identifiziert den Prozessor, fÃ¼r den das Paket
    gebaut wurde. Dies ist hÃ¤ufig amd64, was fÃ¼r AMD64-, Intel 64
    oder Via Nano-Chips steht. Andere mÃ¶gliche Werte finden Sie, wenn
Â Â Â  Sie Debians FTP-Verzeichnisstruktur unter AbschnittÂ 6.7, â€žWas
    haben all die Verzeichnisse in den Debian-FTP-Archiven zu
    bedeuten?â€œ durchsuchen. Details finden Sie unter Â»Debian
    architectureÂ« auf der Handbuchseite dpkg-architecture(1).

7.4. Was ist eine Debian-control-Datei?

    Die Spezifikationen zu den Debian-control-Dateien finden Sie im
Â Â Â  Debian-Policy-Handbuch, Abschnitt 5, siehe AbschnittÂ 12.1,
    â€žWelche andere Dokumentation gibt es auf einem und fÃ¼r ein
    Debian-System?â€œ.

Â Â Â  Hier beispielsweise eine control-Datei des Debian-Pakets Â»helloÂ«:

    Package: hello
    Version: 2.9-2+deb8u1
    Architecture: amd64
    Maintainer: Santiago Vila <sanvila@debian.org>
    Installed-Size: 145
    Depends: libc6 (>= 2.14)
    Conflicts: hello-traditional
    Breaks: hello-debhelper (<< 2.9)
    Replaces: hello-debhelper (<< 2.9), hello-traditional
Â Â Â  Section: devel
    Priority: optional
    Homepage: https://www.gnu.org/software/hello/
    Description: example package based on GNU hello
     The GNU hello program produces a familiar, friendly greeting.  It
     allows non-programmers to use a classic computer science tool which
     would otherwise be unavailable to them.
     .
     Seriously, though: this is an example of how to do a Debian package.
     It is the Debian version of the GNU Project's `hello world' program
     (which is itself an example for the GNU Project).

    Das Â»PackageÂ«-Feld zeigt den Paketnamen an. Diesen Namen erwarten
Â Â Â  die Paketverwaltungswerkzeuge als Eingabe. Er stimmt nicht
    unbedingt mit dem ersten Teil des Namens der Debian-Archivdatei
    Ã¼berein, Ã¤hnelt ihm aber gewÃ¶hnlich.

    Das Â»VersionÂ«-Feld gibt sowohl die
    Original-Entwickler-Versionsnummer (an erster Stelle) wie auch
Â Â Â  (im zweiten Teil) die Revisionsnummer des Debian-Paketes an.
    Dieses wird unter AbschnittÂ 7.3, â€žWarum sind
    Debian-Paketdateinamen so lang?â€œ nÃ¤her beschrieben.

Â Â Â  Das Â»ArchitectureÂ«-Feld gibt den Prozessor-Typ an, fÃ¼r den das
    BinÃ¤rpaket kompiliert worden ist.

Â Â Â  Das Â»DependsÂ«-Feld enthÃ¤lt eine Liste von Paketen, die benÃ¶tigt
    werden, um dieses Paket erfolgreich installieren zu kÃ¶nnen.

    Â»Installed-SizeÂ« gibt an, wieviel Speicherplatz das installierte
Â Â Â  Paket auf der Festplatte belegen wird. Dieser Wert wird von den
    Frontends benutzt, um zu prÃ¼fen, ob noch genug Festplattenplatz
    fÃ¼r die Installation vorhanden ist.

Â Â Â  Die Â»SectionÂ«-Zeile gibt an, in welchem Bereich des
    Debian-FTP-Archives das Paket zu finden ist.

    Die Â»PriorityÂ« zeigt, wie wichtig dieses Paket fÃ¼r die
    Installation ist. Quasi-intelligente Programme wie "apt" oder
Â Â Â  "aptitude" Ã¼bernehmen diese Angabe und bilden entsprechende
    Paketgruppen, zum Beispiel eine Gruppe optionaler Software, siehe
    AbschnittÂ 7.7, â€žWas ist ein Essential-, Required-, Important-, 
    Standard-, Optional- oder Extra-Paket?â€œ.

Â Â Â  Das Â»MaintainerÂ«-Feld enthÃ¤lt die E-Mail-Adresse der Person, die
    momentan fÃ¼r die Paketbetreuung zustÃ¤ndig ist.

Â Â Â  Das Â»DescriptionÂ«-Feld umreiÃŸt das Anwendungsgebiet und die
    Funktionen eines Paketes.

    Mehr Informationen Ã¼ber alle mÃ¶glichen Felder, die ein Paket
    haben kann, finden Sie im Debian-Policy-Handbuch, Abschnitt 5
Â Â Â  Â»Control files and their fieldsÂ«, siehe AbschnittÂ 12.1, â€žWelche
    andere Dokumentation gibt es auf einem und fÃ¼r ein Debian-System?
    â€œ.

7.5. Was ist ein Debian Â»conffileÂ«?

    Â»ConffilesÂ« ist eine Liste von Konfigurationsdateien (meistens
    unter /etc zu finden). Diese Dateien werden vom
    Paketverwaltungswerkzeug bei einer Paketaktualisierung nicht
Â Â Â  Ã¼berschrieben. Dies stellt sicher, dass eigene Einstellungen, die
    in diesen Dateien gesetzt wurden, beibehalten werden. Dies ist
    notwendig, um den Austausch von Paketen auf laufenden Systemen zu
    ermÃ¶glichen.

Â Â Â  Um herauszufinden, welche Dateien bei einem Update erhalten
    bleiben, benutzen Sie:

Â Â Â  dpkg --status paket

Â Â Â  und schauen unter Â»Conffiles:Â« nach.

7.6. Was sind Debians Â»preinstÂ«-, Â»postinstÂ«-, Â»prermÂ«- und
Â»postrmÂ«-Skripte?

    Diese Dateien sind ausfÃ¼hrbare Skripte, die automatisch vor oder
Â Â Â  nach einer Paketinstallation bzw. -entfernung ausgefÃ¼hrt werden.
    Genau wie die control-Datei sind all diese Dateien Teil des
    Â»controlÂ«-Abschnitts der Debian-Archivdatei.

Â Â Â  Die einzelnen Dateien sind:

    preinst

        Dieses Skript wird ausgefÃ¼hrt, bevor die Debian-Archivdatei
        (Â».debÂ«-Datei), zu der sie gehÃ¶rt, entpackt wird. Viele
        Â»preinstÂ«-Skripte stoppen Dienste, die aktualisiert werden,
        bis deren Installation bzw. Update abgeschlossen ist (nach
        dem erfolgreichen AusfÃ¼hren des Â»postinstÂ«-Skripts).

    postinst

        Bei Software, die fÃ¼r das konkrete System konfiguriert werden
        muss, ist es typischerweise ein solches Skript, das (nach dem
        Transfer der Dateien auf die Festplatte) die Konfiguration
        des Pakets foo abschlieÃŸt. Oft erfragen Â»postinstÂ«-Skripte
        Eingaben vom Benutzer und/oder warnen ihn, dass er das Paket
Â Â Â      bei Bedarf neu konfigurieren muss, wenn er die Standardwerte
        akzeptiert. Viele Â»postinstÂ«-Skripte fÃ¼hren nach der
        Installation/Aktualisierung die fÃ¼r das Starten bzw.
        Neustarten der Dienste nÃ¶tigen Befehle aus.

    prerm

        Dieses Skript stoppt Ã¼blicherweise alle Dienste, die mit
        einem Paket verknÃ¼pft sind. Es wird ausgefÃ¼hrt, bevor die
        Dateien des Paketes gelÃ¶scht werden.

    postrm

        Typischerweise modifiziert dieses Skript Links oder andere
        Dateien, die zu foo gehÃ¶ren und/oder entfernt Dateien, die
        vom Paket erzeugt wurden. (Siehe auch AbschnittÂ 7.8, â€žWas ist
        ein virtuelles Paket?â€œ.)

    Momentan kÃ¶nnen Sie alle control-Dateien in /var/lib/dpkg/info
    finden. Die fÃ¼r das Paket foo relevanten Dateien beginnen mit
    Â»fooÂ« und haben die Dateierweiterungen Â»preinstÂ«, Â»postinstÂ« usw.
Â Â Â  Die Datei foo.list in diesem Verzeichnis enthÃ¤lt eine Liste aller
    Dateien, die mit dem Paket foo installiert worden sind. (Beachten
    Sie, dass die Pfade der Dateien ein dpkg-Interna sind. Sie sich
    sollten nicht darauf verlassen.)

7.7. Was ist ein Essential-, Required-, Important-, Standard-, 
Optional- oder Extra-Paket?

    Von den Distributionsbetreuern wird jedem Debian-Paket eine 
Â Â Â  PrioritÃ¤t zugeordnet, auf die das Paketverwaltungssystem
    zugreifen kann. Die PrioritÃ¤ten sind:

      * Required: Pakete die fÃ¼r das korrekte Funktionieren des
        Systems benÃ¶tigt werden.

        Dieses schlieÃŸt alle Werkzeuge mit ein, die notwendig sind,
        um Systemdefekte zu reparieren. Sie dÃ¼rfen diese Pakete nicht
        entfernen, ansonsten kann es passieren, dass Ihr System
        zusammenbricht und Sie sogar auÃŸerstande sind, mittels dpkg
        Sachen wieder zu installieren. Ein nur aus Required-Paketen
        aufgebautes System ist vermutlich unnÃ¼tz, aber es bietet
        genug FunktionalitÃ¤t, um dem Systemadministrator zu
        ermÃ¶glichen, weitere Programme zu installieren.

      * Important-Pakete sollten auf jedem Unix-Ã¤hnlichen System
        installiert sein.

        Andere Pakete, ohne die das System nicht vernÃ¼nftig laufen
        kann, finden Sie hier. Das beinhaltet nicht Emacs, X11, TeX
        oder andere groÃŸe Anwendungen. Diese Pakete stellen lediglich
        die Basisinfrastruktur dar.

      * Standard-Pakete sind Standard auf jedem Linux-System,
        einschlieÃŸlich eines recht kleinen, aber nicht zu begrenzten
        Text-Modus-Systems. Es sind Werkzeuge enthalten, um E-Mails
Â Â Â      zu verschicken (mit mutt) oder Dateien von FTP-Servern
        herunterzuladen.

        Programme dieser PrioritÃ¤t werden standardmÃ¤ÃŸig installiert,
        wenn der Benutzer nichts anderes ausgewÃ¤hlt hat. Es
        beinhaltet keine groÃŸen Programme, aber den
        Python-Interpreter und einiges an Server-Software, wie
        OpenSSH (fÃ¼r ferne Administration) und Exim (fÃ¼r
        E-Mail-Auslieferung; allerdings kann Exim auch so
        konfiguriert werden, dass er nur lokale Nachrichten
        verarbeitet). Auch grundlegende Dokumentation, die fÃ¼r die
        meisten Benutzer hilfreich sein kÃ¶nnte, ist enthalten.

      * Optional-Pakete beinhalten alles das, was abseits spezieller
        Anforderungen zur VerfÃ¼gung stehen sollte oder wovon
        unterstellt wird, dass Sie es nutzen wollen, ohne es von
        vornherein zu kennen.

        Dazu gehÃ¶rt X, eine komplette TeX-Distribution und viele
        andere Programme.

      * Extra: Pakete, die in Konflikt mit Paketen hÃ¶herer PrioritÃ¤t
        stehen, die nur fÃ¼r jemanden interessant sind, der sie schon
        kennt, oder die spezielle Anforderungen haben, welche sie
        ungeeignet fÃ¼r Â»OptionalÂ« machen.

    Wenn Sie eine Standard-Debian-Installation durchfÃ¼hren, werden
    alle Pakete mit der PrioritÃ¤t Standard oder hÃ¶her auf Ihrem
Â Â Â  System installiert. Wenn Sie vordefinierte Programmgruppen
    (Tasks) auswÃ¤hlen, bekommen Sie auch Pakete mit geringerer
    PrioritÃ¤t.

    ZusÃ¤tzlich sind einige Pakete als Essential markiert. Da diese
Â Â Â  Pakete fÃ¼r die GrundfunktionalitÃ¤t des Systems absolut notwendig
    sind, lehnen es die Paketverwaltungswerkzeuge ab, diese zu
    entfernen.

7.8. Was ist ein virtuelles Paket?

    Virtuelle Pakete stellen Verweise auf grundlegende Funktionen des
    Systems dar und tragen einen entsprechenden, systematischen
    Namen. Zum Beispiel sind konqueror and firefox-esr beides
Â Â Â  Webbrowser, folglich werden beide Programme die AbhÃ¤ngigkeit
    erfÃ¼llen, die ein Programm hat, das einen Webbrowser braucht, um
    auf einem System richtig zu funktionieren. Beide Pakete erfÃ¼llen
    also die AbhÃ¤ngigkeit des Â»virtuellen PaketsÂ« namens www-browser.

    Ebenso bieten exim4 und sendmail beide die FunktionalitÃ¤t eines
    Mail-Transport-Agents. Wir sagen also, dass beide Programme das
Â Â Â  Â»virtuelle PaketÂ« mail-transport-agent anbieten. Wenn eines der
    Programme installiert ist, dann wird die Installation jedes
    Paketes, das von einem mail-transport-agent abhÃ¤ngig ist, durch
    die Existenz des virtuellen Paketes ermÃ¶glicht.

    FÃ¼r den Fall, dass mehr als ein Paket installiert ist, von denen
    alle dasselbe virtuelle Paket bereitstellen, bietet Debian einen
    Mechanismus an, der es dem Systemadministrator erlaubt, ein Paket
Â Â Â  als bevorzugt einzustellen. Der zugehÃ¶rige Befehl ist
    update-alternatives und wird spÃ¤ter in AbschnittÂ 11.11, â€žEinige
    Benutzer mÃ¶gen mawk, andere gawk; einige mÃ¶gen vim, andere elvis;
    einige trn, wieder andere tin; wie unterstÃ¼tzt Debian die
    Vielfalt?â€œ nÃ¤her erlÃ¤utert.

7.9. Was ist damit gemeint, dass ein Paket eine Depends-, Recommends
-, Suggests-, Conflicts-, Replaces- oder Provides-AbhÃ¤ngigkeit zu
einem anderen Paket hat?

    Das Debian-Paketverwaltungssystem hat eine Reihe von
Â Â Â  Â»Paket-AbhÃ¤ngigkeitenÂ«, die (in einer einzigen Markierung)
    anzeigen, inwieweit ein Programm A unabhÃ¤ngig vom Vorhandensein
    von Programm B auf einem gegeben System arbeiten kann:

      * Paket A hÃ¤ngt ab von Paket B (depends), wenn B unbedingt
        installiert sein muss, damit A lÃ¤uft. In manchen FÃ¤llen hÃ¤ngt
        A Ã¼berdies von einer bestimmten Version von B ab. Meistens
        handelt es sich dabei um eine Untergrenze, wonach As
        AbhÃ¤ngigkeit durch jede Version von B erfÃ¼llt wird, die neuer
        ist als die angegebene Version.

      * Paket A empfiehlt Paket B (recommends), wenn der
        Paketverwalter der Meinung ist, dass die meisten Benutzer A
        nicht ohne die FunktionalitÃ¤t von B haben wollen.

      * Paket A schlÃ¤gt Paket B vor (suggests), wenn B Dateien
        beinhaltet, die auf die Funktionen von A bezogen sind und
        dessen Gebrauchswert fÃ¼r gewÃ¶hnlich deutlich steigern.

      * Paket A steht in Konflikt mit Paket B (conflicts), wenn A
        nicht funktioniert, solange B auf dem System installiert ist.
Â Â Â      Sehr oft sind Konflikte FÃ¤lle, in denen A Dateien beinhaltet,
        die eine Verbesserung gegenÃ¼ber denen aus B darstellen.
        Â»ConflictsÂ« werden oft mit Â»ReplacesÂ« verbunden.

      * Paket A ersetzt Paket B (replaces), wenn Dateien, die von B
        installiert wurden, von Dateien aus A entfernt und (in
        manchen FÃ¤llen) Ã¼berschrieben werden.

      * Paket A beschÃ¤digt Paket B (breaks), wenn diese beiden Pakete
        nicht gleichzeitig auf einem System konfiguriert werden
        kÃ¶nnen. Die Paketverwaltung wird es ablehnen, eines davon zu
        installieren, wenn das andere bereits auf dem System
        installiert und konfiguriert ist.

      * Paket A stellt Paket B bereit (provides), wenn alle Dateien
        und FunktionalitÃ¤ten von B in A vereinigt sind. Dieser
        Mechanismus ermÃ¶glicht es Benutzern mit einem begrenzten
        Festplattenplatz, nur den Teil von Paket A zu installieren,
        den sie wirklich benÃ¶tigen.

    Detaillierte Informationen Ã¼ber die Nutzung all dieser
Â Â Â  Bezeichnungen finden Sie im Policy-Handbuch, Abschnitt 7.2
    Â»Binary DependenciesÂ«, siehe AbschnittÂ 12.1, â€žWelche andere
    Dokumentation gibt es auf einem und fÃ¼r ein Debian-System?â€œ.

7.10. Was bedeutet Pre-Depends (Vor-AbhÃ¤ngigkeit)?

    Â»Pre-DependsÂ« ist eine spezielle AbhÃ¤ngigkeit. Im Fall der
    meisten Pakete entpackt dpkg die Archiv-Datei eines Pakets (also
    die .deb-Datei) unabhÃ¤ngig davon, ob die Dateien, von denen das
    Paket abhÃ¤ngt, auf dem System existieren oder nicht. Stark
Â Â Â  vereinfacht bedeutet Â»entpackenÂ«, das dpkg die Dateien aus der
    Archiv-Datei in Ihrem Dateisystem an der entsprechenden Stelle
    abgelegt. Wenn solch ein Paket von der Existenz anderer Pakete
    abhÃ¤ngt, lehnt dpkg es ab, die Paketinstallation abzuschlieÃŸen
    (d.h. die Konfiguration des Pakets wird nicht durchgefÃ¼hrt),
    bevor die anderen Pakete installiert sind.

    FÃ¼r einige Pakete lehnt dpkg jedoch sogar das Entpacken ab, bis
    bestimmte AbhÃ¤ngigkeiten erfÃ¼llt sind. Solche Pakete haben eine
    sogenannte Â»Pre-dependsÂ«-AbhÃ¤ngigkeit von anderen Paketen. Das
    Debian-Projekt fÃ¼hrte diese Kategorie ein, um ein sicheres
Â Â Â  Upgrade des Systems vom a.out- zum ELF-Format zu ermÃ¶glichen;
    dabei war die Reihenfolge, in der die Pakete ausgepackt wurden,
    kritisch. Es gibt andere groÃŸe Upgrade-Situationen, bei denen
    diese Methode hilfreich ist, z.B. bei Paketen mit der PrioritÃ¤t
    Â»RequiredÂ« und ihrer AbhÃ¤ngigkeit zu LibC.

Â Â Â  Genau wie zuvor finden Sie weiterfÃ¼hrende Informationen dazu im
    Policy-Handbuch.

7.11. Was bedeutet unknown, install, remove purge und hold im
Paket-Status?

Â Â Â  Diese Â»WunschÂ«-Markierungen zeigen an, was ein Benutzer mit einem
    Paket tun wollte, z.B. als er dpkg aufrief.

Â Â Â  Ihre Bedeutungen sind:

      * unknown (unbekannt) - der Benutzer hat nie angegeben, ob er
        das Paket wÃ¼nscht;

      * install (installieren) - der Benutzer mÃ¶chte das Paket
        installiert oder aktualisiert haben;

      * remove (entfernen) - der Benutzer mÃ¶chte das Paket entfernt
Â Â Â      haben, aber die Konfigurationsdateien sollen erhalten
        bleiben;

      * purge (vollstÃ¤ndig entfernen)- der Benutzer mÃ¶chte das Paket
        samt der zugehÃ¶rigen Konfigurationsdateien entfernt haben;

      * hold (zurÃ¼ckhalten) - der Benutzer wÃ¼nscht keine VerÃ¤nderung
        an diesem Paket, d.h. das Paket soll in der derzeitigen
        Version beibehalten werden, wie es ist.

7.12. Wie setze ich ein Paket auf Â»holdÂ« (zurÃ¼ckhalten)?

Â Â Â  Es gibt drei Wege, Pakete zurÃ¼ckzuhalten: mit dpkg, apt oder
    aptitude.

Â Â Â  Mit dpkg mÃ¼ssen Sie lediglich die Liste der Paketauswahlen
    mittels

Â Â Â  dpkg --get-selections \* > selections.txt

    exportieren. Dann modifizieren Sie die daraus resultierende Datei
Â Â Â  selections.txt: Ã¤ndern Sie die Zeile, die das Paket beinhaltet,
    das Sie zurÃ¼ckhalten wollen (in diesem Beispiel libc6) von:

Â Â Â  libc6                                             install

Â Â Â  in:

Â Â Â  libc6                                             hold

Â Â Â  Speichern Sie die Datei und laden Sie sie mit folgendem Befehl
    zurÃ¼ck in die Â»dpkgÂ«-Datenbank:

Â Â Â  dpkg --set-selections < selections.txt

Â Â Â  Mit apt kÃ¶nnen Sie ein Paket auf ZurÃ¼ckhalten setzen mittels:

Â Â Â  apt-mark hold Paketname

Â Â Â  Oder Sie entfernen die ZurÃ¼ckhalten-Markierung mit:

Â Â Â  apt-mark unhold Paketname

Â Â Â  Mit aptitude kÃ¶nnen Sie ein Paket auf ZurÃ¼ckhalten setzen
    mittels:

Â Â Â  aptitude hold Paketname

Â Â Â  Oder Sie entfernen die ZurÃ¼ckhalten-Markierung mit:

Â Â Â  aptitude unhold Paketname

7.13. Wie installiere ich ein Quellpaket?

    Debian-Quellpakete kÃ¶nnen nicht im eigentlichen Sinne
Â Â Â  Â»installiertÂ« werden. Sie werden lediglich in ein Verzeichnis
    Ihrer Wahl entpackt, wo Sie dann die BinÃ¤rpakete daraus erzeugen
    kÃ¶nnen.

    Quellpakete werden meistens auf denselben Spiegel-Servern
    angeboten, auf denen auch die BinÃ¤rpakete zu finden sind. Wenn
Â Â Â  Sie Ihre sources.list(5) fÃ¼r APT so eingerichtet haben, dass die
    benÃ¶tigten Â»deb-srcÂ«-Zeilen enthalten sind, kÃ¶nnen Sie jegliches
    Quellpaket einfach mittels des folgenden Befehls herunterladen:

Â Â Â  apt-get source foo

    Um Ihnen beim Bauen der Quelltext-Pakete zu helfen, bieten die
    Debian Quellpakete den sogenannten
Â Â Â  Â»build-dependenciesÂ«-Mechanismus (Bau-AbhÃ¤ngigkeiten). Das
    bedeutet, dass die Quellpaket-Betreuer eine Liste anderer Pakete
    pflegen, die zum Bauen des Paketes benÃ¶tigt werden. Um zu sehen,
    wozu dies nÃ¼tzlich ist, probieren Sie einmal dies aus

Â Â Â  apt-get build-dep foo

Â Â Â  bevor Sie den Quellcode kompilieren.

7.14. Wie baue ich BinÃ¤rpakete aus einem Quellpaket?

    Der beliebteste Weg hierfÃ¼r ist die Nutzung verschiedener
Â Â Â  Wrapper-Werkzeuge. Im folgenden Beispiel wird die
    Programmsammlung devscripts eingesetzt. Installieren Sie dies
    Paket, falls noch nicht geschehen.

Â Â Â  Laden Sie jetzt das Quellpaket herunter:

Â Â Â  apt-get source foo

Â Â Â  und wechseln Sie in dessen Verzeichnisbaum:

Â Â Â  cd foo-*

Â Â Â  Installieren Sie, falls zum Bauen weitere Pakete gebraucht
    werden, diese mit:

Â Â Â  sudo apt-get build-dep foo

    Beugen Sie Verwirrung vor, wenn spÃ¤ter seitens Debian neue
Â Â Â  Versionen verÃ¶ffentlicht werden, indem Sie mit folgendem Kommando
    die selbst erstellte Version kennzeichnen:

Â Â Â  dch -l local 'Irgendein Text ...'

Â Â Â  Und dann bauen Sie Ihr Paket:

Â Â Â  debuild -us -uc

Â Â Â  Wenn alles korrekt gelaufen ist, sollten Sie jetzt Ihr Paket
    installieren kÃ¶nnen mittels

Â Â Â  sudo dpkg -i ../*.deb

Â Â Â  Wenn Sie es vorziehen, die Dinge hÃ¤ndisch zu erledigen, statt
    devscripts zu benutzen, gehen Sie folgendermaÃŸen vor:

    Sie benÃ¶tigen alle foo_*.dsc-, foo_*.tar.gz- und
Â Â Â  foo_*.diff.gz-Dateien, um den Quellcode zu kompilieren. (Wobei
    die innerhalb des Debian-Projekts entstandenen Pakete nicht
    unbedingt eine .diff.gz-Datei beinhalten).

    Wenn Sie diese Dateien haben (siehe AbschnittÂ 7.13, â€žWie
Â Â Â  installiere ich ein Quellpaket?â€œ) und das Paket dpkg-dev auf
    Ihrem System installiert ist, kÃ¶nnen Sie mit

Â Â Â  dpkg-source -x foo_version-revision.dsc

Â Â Â  das Paket in ein Verzeichnis namens foo-version entpacken.

Â Â Â  Wollen Sie einfach nur das Paket kompilieren, wechseln Sie in das
    foo-version-Verzeichnis und fÃ¼hren folgenden Befehl aus:

Â Â Â  dpkg-buildpackage -rfakeroot -b

Â Â Â  um das Paket zu bauen (beachten Sie, dass dazu das Paket fakeroot
    erforderlich ist). Installieren Sie dann mit

Â Â Â  dpkg -i ../foo_version-revision_arch.deb

Â Â Â  das neu gebaute Paket.

7.15. Wie kann ich selbst Debian-Pakete erstellen?

    Details hierzu finden Sie im Debian-Leitfaden fÃ¼r neue
    Paketbetreuer (aus dem maint-guide-Paket bzw. unter https://
    www.debian.org/doc/devel-manuals#maint-guide (https://
Â Â Â  www.debian.org/doc/devel-manuals#maint-guide) ) oder in dem
    Handbuch fÃ¼r Debian-Paketbetreuer (verfÃ¼gbar im Paket debmake-doc
    oder unter https://www.debian.org/doc/devel-manuals#debmake-doc
    (https://www.debian.org/doc/devel-manuals#debmake-doc) ).

Kapitel 8. Die Debian-Paketverwaltungswerkzeuge

8.1. Welche Programme bietet Debian zur Paketverwaltung an?

    Zur Verwaltung der Debian-Pakete gibt es verschiedene Programme,
    von grafischen oder textbasierten OberflÃ¤chen bis hin zu den
Â Â Â  elementaren Werkzeugen, die benutzt werden, um Pakete zu
    installieren. Alle verfÃ¼gbaren Programme bauen auf den
    elementaren Werkzeugen auf und werden im folgenden - mit den
    elementaren beginnend und den komplexen schlieÃŸend - vorgestellt.

    Es ist wichtig zu verstehen, dass die komfortablen
Â Â Â  Paketverwaltungswerkzeuge wie aptitude oder synaptic auf apt
    aufbauen, welches seinerseits bei der Verwaltung der Pakete auf 
    dpkg zurÃ¼ckgreift.

    Sehen Sie sich Kapitel 2. Debian-Paketmanagement (https://
    www.debian.org/doc/manuals/debian-reference/ch02.en.html) der
    Debian-Referenz (https://www.debian.org/doc/manuals/
    debian-reference/) an, falls Sie weitere Informationen Ã¼ber die
Â Â Â  Paketverwaltungswerkzeuge benÃ¶tigen. Dieses Dokument ist in
    verschiedenen Sprachen und Formaten verfÃ¼gbar, siehe den Eintrag
    zur Debian-Referenz auf der Ãœbersichtsseite fÃ¼r
    DDP-BenutzerhandbÃ¼cher (https://www.debian.org/doc/user-manuals#
    quick-reference) .

8.1.1. dpkg

Â Â Â  Dies ist das Hauptpaketverwaltungswerkzeug. dpkg kann mit vielen
    verschiedenen Optionen aufgerufen werden. HÃ¤ufig benutzt werden:

      * Alle verfÃ¼gbaren Optionen anzeigen: dpkg --help.

      * Die control-Datei (und andere Informationen) fÃ¼r ein Paket
        anzeigen: dpkg --info foo_VVV-RRR.deb.

      * Ein Paket (inklusive Entpacken und Konfiguration) in das
        Dateisystem auf der Festplatte installieren: dpkg --install
        foo_VVV-RRR.deb.

      * Ein Debian-Archiv (ohne Konfiguration) in das Dateisystem auf
        der Festplatte entpacken: dpkg --unpack foo_VVV-RRR.deb.
        Bitte beachten Sie, dass das Paket damit nicht verwendbar
        sein dÃ¼rfte, da Programmdateien oftmals erst nach gewissen
        Anpassungen ordnungsgemÃ¤ÃŸ zusammenspielen. Dieser Befehl
        entfernt jede auf der Festplatte installierte Version des
        Programms und fÃ¼hrt das mit dem Paket verbundene
        Â»preinstÂ«-Skript (siehe AbschnittÂ 7.6, â€žWas sind Debians
        Â»preinstÂ«-, Â»postinstÂ«-, Â»prermÂ«- und Â»postrmÂ«-Skripte?â€œ)
        aus.

      * Ein bereits ausgepacktes Paket konfigurieren: dpkg
Â Â Â      --configure foo. Neben anderen Sachen ruft diese Option das
        zugehÃ¶rige Â»postinstÂ«-Skript (siehe AbschnittÂ 7.6, â€žWas sind
        Debians Â»preinstÂ«-, Â»postinstÂ«-, Â»prermÂ«- und
        Â»postrmÂ«-Skripte?â€œ) des Pakets auf. AuÃŸerdem aktualisiert es
        die Dateien, die in der conffiles-Datei des Pakets
        aufgelistet sind. Beachten Sie, dass die Â»configureÂ«-Option
        als Argument einen Paketnamen benÃ¶tigt (z.B. foo), und nicht
        den Namen der Debian-Archivdatei (also nicht
        foo_VVV-RRR.deb).

      * Eine einzelne Datei namens "blurf" (oder mehrere Dateien
        namens Â»blurf*Â«) aus einem Debian-Archiv extrahieren: dpkg
        --fsys-tarfile foo_VVV-RRR.deb | tar -xf - blurf*.

      * Ein Paket entfernen (aber nicht seine Konfigurationsdateien):
        dpkg --remove foo.

      * Ein Paket vollstÃ¤ndig, inklusive der Konfigurationsdateien
        entfernen: dpkg --purge foo.

      * Den Installationszustand aller Pakete anzeigen, auf die der
        regulÃ¤re Ausdruck Â»foo*Â« zutrifft: dpkg --list 'foo*'.

8.1.2. APT

    APT (fÃ¼r Advanced-Package-Tool) ist eine leistungsfÃ¤hige
    ProgrammoberflÃ¤che zur Debian-Paketverwaltung. Darin enthalten
    ist das Programm apt-get. Es enthÃ¤lt Befehlszeilenprogramme fÃ¼r
Â Â Â  Suche, Verwaltung und Abfrage von Paketinformationen wie auch fÃ¼r
    Low-Level-Zugriffe auf tieferliegende FunktionalitÃ¤ten der
    libapt-pkg-Bibliothek. Lesen Sie dazu das Benutzerhandbuch in /
    usr/share/doc/apt-doc/guide.html/index.html; Sie benÃ¶tigen dazu
    das Paket apt-doc.

    Seit Debian Jessie gibt es fÃ¼r einige hÃ¤ufig verwendete apt-get-
    und apt-cache-Befehle ein entsprechendes Ã„quivalent, das neue
    BinÃ¤rprogramm apt. Das bedeutet, dass bekannte Befehle wie 
Â Â Â  apt-get update, apt-get install, apt-get remove, apt-cache search
    oder apt-cache show jetzt auch einfach Ã¼ber apt aufgerufen werden
    kÃ¶nnen, also mit Befehlen wie apt update, apt install, apt remove
    , apt search oder apt show. Hier ein Ãœberblick Ã¼ber die alten und
    neuen Befehle:

     apt-get update             ->  apt update
     apt-get upgrade            ->  apt upgrade
     apt-get dist-upgrade       ->  apt full-upgrade
     apt-get install package    ->  apt install package
Â Â Â   apt-get remove package     ->  apt remove package
     apt-get autoremove         ->  apt autoremove
     apt-cache search string    ->  apt search string
     apt-cache policy package   ->  apt list -a package
     apt-cache show package     ->  apt show package
     apt-cache showpkg package  ->  apt show -a package

    Das Werkzeug apt vereint FunktionalitÃ¤ten von apt-get und
    apt-cache und hat eine nette farbige Ausgabedarstellung, somit
Â Â Â  ist es fÃ¼r den Benutzer angenehmer zu bedienen. Zur Verwendung in
    Skripten oder in fortgeschrittenen AnwendungsfÃ¤llen kÃ¶nnte
    apt-get trotzdem noch empfehlenswert oder nÃ¶tig sein.

    apt-get bietet eine einfache Beschaffung und Installation von
    Paketen aus verschiedenen Quellen mittels Befehlszeile. Im
    Gegensatz zu dpkg erwartet apt-get nicht die Debian-Archivdatei,
Â Â Â  sondern den korrekten Paketnamen als Eingabe und wird ein Paket
    nur installieren, wenn dies durch eine in etc/apt/sources.list
    aufgefÃ¼hrte Quelle bereitgestellt wird. apt-get ruft nach dem
    Download des Â».debÂ«-Archivs^[5] von den konfigurierten Quellen
    direkt dpkg zur Installation auf.

Â Â Â  Einige Ã¼bliche Befehle zur Nutzung von apt-get sind:

      * Die Liste der Ihrem System bekannten Pakete aktualisieren:

        apt update

        (Sie sollten dies regelmÃ¤ÃŸig ausfÃ¼hren, um Ihre Paketliste
        aktuell zu halten.)

      * Das Paket foo mit allen seinen AbhÃ¤ngigkeiten installieren:

        apt install foo

      * Das Paket foo von Ihrem System entfernen:

        apt remove foo

      * Das Paket foo inklusive aller Konfigurationsdateien von Ihrem
        System entfernen:

        apt purge foo

Â Â Â    * Um alle Pakete aufzulisten, fÃ¼r die eine neuere Version
        verfÃ¼gbar ist, rufen Sie auf:

        apt list --upgradable

      * Eine Aktualisierung aller Pakete auf Ihrem System durchfÃ¼hren
        (ohne zusÃ¤tzliche Pakete zu installieren oder Pakete zu
        entfernen):

        apt upgrade

      * Alle Pakete auf Ihrem System aktualisieren (inklusive der
        Installation von zusÃ¤tzlichen Paketen oder der Entfernung von
        Paketen, falls nÃ¶tig):

        apt full-upgrade

        (Der Befehl upgrade belÃ¤ÃŸt ein Paket in seiner installierten,
        veralteten Version, falls zur Aktualisierung aufgrund von
        AbhÃ¤ngigkeiten die Installation zusÃ¤tzlicher Pakete
        erforderlich wÃ¤re. Der Befehl full-upgrade ist dabei weniger
        konservativ.)

Â Â Â  Zum AusfÃ¼hren von Befehlen, durch die Pakete verÃ¤ndert werden,
    mÃ¼ssen Sie als root-Benutzer angemeldet sein.

    Bitte beachten Sie, dass apt-get jetzt standardmÃ¤ÃŸig auch alle
    Pakete installiert, die von anderen Paketen empfohlen werden
Â Â Â  (recommends-AbhÃ¤ngigkeit). Aufgrund seiner Robustheit wird das
    Konsolen-Programm apt-get zur Einrichtung und fÃ¼r grÃ¶ÃŸere
    System-Upgrades empfohlen.

    Die apt-Werkzeugsammlung enthÃ¤lt auch apt-cache zum Durchsuchen
    der Paketliste. Im Paketverwaltungssystem kÃ¶nnen Sie mit einem
Â Â Â  einfachen Suchbegriff oder einem regulÃ¤ren Ausdruck oder aber
    durch das Durchsuchen von AbhÃ¤ngigkeiten Pakete finden, die
    spezielle Funktionen anbieten. Einige Ã¼bliche Befehle fÃ¼r 
    apt-cache sind:

      * Pakete finden, deren Beschreibung Wort enthÃ¤lt:

        apt search Wort

      * Detaillierte Informationen Ã¼ber ein Paket ausgeben:

        apt show Paketname

Â Â Â    * Alle Pakete ausgeben, von denen ein angegebenes Paket
        abhÃ¤ngt:

        apt-cache depends Paketname

      * Detaillierte Informationen Ã¼ber die verfÃ¼gbaren Versionen
        eines Paketes und die Pakete, die von diesem Paket abhÃ¤ngen,
        ausgeben:

        apt-cache showpkg Paketname

    FÃ¼r weitere Informationen installieren Sie bitte das apt-Paket
Â Â Â  und lesen apt(8), apt-get(8) und sources.list(5), sowie
    installieren Sie das apt-doc-Paket und lesen /usr/share/doc/
    apt-doc/guide.html/index.html.

8.1.3. aptitude

    aptitude ist ein auf Debian GNU/Linux-Systeme abgestelltes
    Frontend fÃ¼r die Paketverwaltung durch APT. aptitude ist ein
Â Â Â  textbasiertes Programm, das die curses-Bibliothek benutzt.
    Aktionen kÃ¶nnen per interaktiver BedienoberflÃ¤che oder Ã¼ber die
    Befehlszeile gestartet werden.

    aptitude kann verwendet werden, um Verwaltungsaufgaben auf
    schnelle und einfache Weise zu erledigen. Es erlaubt dem
Â Â Â  Benutzer, die Liste der Pakete zu durchsuchen und Aufgaben wie
    Installation, Aktualisierung und Entfernung von Paketen zu
    erledigen.

Â Â Â  Ãœber die Funktionen von apt-get hinaus bietet aptitude viele
    zusÃ¤tzliche FunktionalitÃ¤ten:

      * aptitude bietet einfachen Zugriff auf alle Versionen eines
        Pakets.

      * aptitude gibt Ihnen eine einfache MÃ¶glichkeit, die Ãœbersicht
        Ã¼ber veraltete Software zu behalten: sie werden unter
        Â»Veraltete und selbst erstellte PaketeÂ« aufgelistet.

      * aptitude enthÃ¤lt ein ziemlich mÃ¤chtiges System fÃ¼r die
        ausfÃ¼hrliche Suche nach Paketen und zur Filterung der
        angezeigten Treffer. Benutzer, die mutt benutzen, werden
Â Â Â      schnell damit zurechtkommen, da die Ausdruckssyntax durch 
        mutt inspiriert war.

      * aptitude kann auch verwendet werden, um die verfÃ¼gbaren,
        vordefinierten Programmgruppen (Tasks) zu installieren.
        Weitere Informationen finden Sie in AbschnittÂ 8.1.5,
        â€žtaskselâ€œ.

      * Im Vollbildmodus hat aptitude integrierte su-FunktionalitÃ¤t
        und kann als normaler Benutzer ausgefÃ¼hrt werden. Es ruft su
        auf (und fragt nach dem Passwort des root-Benutzers, sofern
        vorhanden), wenn administrative Rechte benÃ¶tigt werden.

    Sie kÃ¶nnen aptitude mit einer visuellen (interaktiven) OberflÃ¤che
    (fÃ¼hren Sie einfach aptitude aus) oder direkt von der
Â Â Â  Befehlszeile starten. Die genutzte Befehlszeilensyntax ist der
    von apt-get sehr Ã¤hnlich. Um zum Beispiel das Paket foo zu
    installieren, kÃ¶nnen Sie einfach aptitude install foo ausfÃ¼hren.

Â Â Â  Mit aptitude stellt Debian ein Programm fÃ¼r das alltÃ¤gliche
    Paketmanagement von der Konsole aus bereit.

Â Â Â  Weitere Informationen finden Sie auf der Handbuchseite aptitude
    (8) und im Paket aptitude-doc.

8.1.4. synaptic

    synaptic ist ein grafisches Paketverwaltungs-Programm. Es
    ermÃ¶glicht Ihnen das Installieren, Aktualisieren und Entfernen
    von Paketen auf eine benutzerfreundliche Art und Weise. Neben all
Â Â Â  den FunktionalitÃ¤ten, die aptitude bietet, erlaubt synaptic auch,
    die Liste der verwendeten Paketquellen zu editieren; auch kÃ¶nnen
    Sie alle verfÃ¼gbare Dokumentation fÃ¼r ein Paket durchsuchen.
    Schauen Sie auf die Synaptic-Website (https://www.nongnu.org/
    synaptic/) , wenn Sie mehr Informationen benÃ¶tigen.

8.1.5. tasksel

    Rechner fallen vielfach klar umrissene Aufgaben zu, doch hÃ¤ufig
    ergibt sich die Schwierigkeit, den zu einer Aufgabe passenden
    Satz von Paketen zu finden. Die Debian-Entwickler haben daher
Â Â Â  Programmgruppen (Tasks) definiert, eine Sammlung verschiedener
    Debian-Pakete fÃ¼r eine spezielle Aufgabe. Diese Programmgruppen
    kÃ¶nnen Ã¼ber die Programme tasksel oder aptitude installiert
    werden.

    Der Debian Installer wird typischerweise automatisch die
    Programmgruppe fÃ¼r ein Standardsystem installieren sowie eine
    Arbeitsplatzumgebung (Desktop Environment). Welche
    Arbeitsplatzumgebung installiert wird, hÃ¤ngt von dem benutzten
    CD-/DVD-Installationsmedium ab, normalerweise ist dies der
    GNOME-Desktop (Programmgruppe gnome-desktop). AuÃŸerdem werden,
Â Â Â  abhÃ¤ngig von den Auswahlen, die Sie wÃ¤hrend der Installation
    getroffen haben, eventuell noch weitere Programmgruppen
    automatisch installiert. Wenn Sie zum Beispiel eine andere
    Sprache als Englisch gewÃ¤hlt haben, wird auch die entsprechende
    Programmgruppe fÃ¼r diese Sprache installiert; wenn der Installer
    einen Laptop als Installationsziel erkennt, wird die
    laptop-Programmgruppe installiert.

8.1.6. Andere Paketverwaltungswerkzeuge

8.1.6.1. dpkg-deb

Â Â Â  Dieses Programm fÃ¼hrt Operationen an Debian-Archivdateien (.deb)
    aus. Einige AnwendungsfÃ¤lle sind:

      * Alle Optionen anzeigen: dpkg-deb --help.

      * Anzeigen, welche Dateien in einem Debian-Archiv enthalten
        sind: dpkg-deb --contents foo_VVV-RRR.deb.

      * Die Dateien, die in dem Debian-Archiv enthalten sind, in ein
Â Â Â      gewÃ¼nschtes Verzeichnis entpacken: dpkg-deb --extract
        foo_VVV-RRR.deb tmp entpackt jede Datei in foo_VVV-RRR.deb in
        das Verzeichnis tmp/. Dies ist eine bequeme Methode, um die
        Inhalte eines Pakets in einem lokalen Verzeichnis zu prÃ¼fen,
        ohne das Paket in das Root-Dateisystem zu installieren.

      * Die Dateien mit den control-Informationen aus dem Paket
        entpacken: dpkg-deb --control foo_VVV-RRR.deb tmp.

    Bitte beachten Sie, dass jedes Paket, das lediglich mit dpkg-deb
Â Â Â  --extract entpackt wird, falsch installiert ist. Stattdessen
    sollten Sie dpkg --install benutzen, um das Paket zu
    installieren.

Â Â Â  Weitere Informationen finden Sie auf der Handbuchseite dpkg-deb
    (1).

8.2. Angeblich ist es mit Debian mÃ¶glich, ein derzeit laufendes
Programm zu aktualisieren. Wie funktioniert das?

    Die Implementierung des Dateisystems im Kernel unterstÃ¼tzt auf
Â Â Â  Debian GNU/Linux-Systemen das Ersetzen von Dateien, auch wÃ¤hrend
    sie benutzt werden.

    AuÃŸerdem stellen wir ein Programm namens start-stop-daemon zur
    VerfÃ¼gung, das benutzt wird, um Daemons wÃ¤hrend des Hochfahrens
    oder beim Wechsel des Runlevels (z.B. vom Mehrbenutzer- in den
Â Â Â  Einbenutzer-Modus oder zum Runterfahren) zu starten oder zu
    stoppen. Dasselbe Programm nutzen Installationsskripte fÃ¼r
    Softwarepakete, die unter Einbindung von Hintergrundprozessen
    oder direkt als solche arbeiten. Diese werden durch
    start-stop-daemon beendet und falls nÃ¶tig neu gestartet.

8.3. Wie kann ich feststellen, welche Pakete bereits auf einem
Debian-System installiert sind?

Â Â Â  Um den Status aller in einem Debian-System installierten Pakete
    zu sehen, fÃ¼hren Sie den Befehl

Â Â Â  dpkg --list

    aus. Es wird eine einzeilige Zusammenfassung fÃ¼r jedes Paket
Â Â Â  ausgegeben, mit einem 2-stelligen Buchstaben-Code (im Kopf
    erklÃ¤rt), dem Paketnamen, der installierten Version und einer
    kurzen Beschreibung.

Â Â Â  Um den Status jedes Paketes zu sehen, dessen Name mit Â»fooÂ«
    beginnt, geben Sie folgenden Befehl ein:

Â Â Â  dpkg --list 'foo*'

Â Â Â  WÃ¼nschen Sie einen ausfÃ¼hrlicheren Status fÃ¼r ein bestimmtes
    Paket, geben Sie dies ein:

Â Â Â  dpkg --status Paketname

8.4. Wie kann ich alle Dateien auflisten, die in einem installierten
Paket enthalten sind?

Â Â Â  Um alle mit der Installation des Pakets foo auf das System
    Ã¼bertragenen Dateien aufzulisten, verwenden Sie den Befehl:

Â Â Â  dpkg --listfiles foo

Â Â Â  Beachten Sie, dass Dateien, die von den Installationsskripten
    erzeugt werden, hier nicht auftauchen.

8.5. Wie kann ich herausfinden, welches Paket eine bestimmte Datei
angelegt hat?

Â Â Â  Um herauszufinden, aus welchem Paket eine bestimmte Datei stammt,
    fÃ¼hren Sie einen dieser Befehle aus:

      * dpkg --search foo

        Dies sucht nach foo in den installierten Paketen. (Dies ist
        momentan gleichwertig mit der Suche nach allen Dateien mit
        der Endung .list im Verzeichnis /var/lib/dpkg/info/ und dem
        Filtern der Ausgabe, so dass alle Pakete, die dies
        beinhalten, aufgelistet werden plus Umleitungen.)

        Eine schnellere Alternative dazu ist das dlocate-Werkzeug:

        dlocate -S foo

      * zgrep foo Contents-ARCH.gz

        Hiermit wird nach Dateien gesucht, die die Zeichenkette foo
        in ihrem vollstÃ¤ndigen Pfadnamen enthalten. Die Dateien
        Contents-ARCH.gz (wobei ARCH die gewÃ¼nschte Architektur
        darstellt) befinden sich in den Hauptpaketverzeichnissen
Â Â Â      (main, non-free, contrib) auf dem Debian-FTP-Server (d.h.
        unter /debian/dists/buster). Eine Contents-Datei bezieht sich
        nur auf Pakete in den Unterverzeichnissen unterhalb des
        Verzeichnisses, in dem es abgelegt ist. Deshalb kÃ¶nnte es
        sein, dass Sie mehr als eine Contents-Datei durchsuchen
        mÃ¼ssen, um das Paket zu finden, das foo enthÃ¤lt.

        Diese Methode hat gegenÃ¼ber dpkg --search den Vorteil, dass
        Sie damit Dateien in Paketen finden kÃ¶nnen, die momentan
        nicht auf Ihrem System installiert sind.

      * apt-file search foo

        Ã„hnlich wie bei dem Beispiel vorher sucht dies nach Dateien,
        welche die Zeichenfolge oder den regulÃ¤ren Ausdruck foo in
        ihrem vollstÃ¤ndigen Pfadnamen haben. Der Unterschied zum
        vorherigen Beispiel ist, dass es nicht notwendig ist, die
        Contents-ARCH.gz-Dateien hÃ¤ndisch herunterzuladen, da dies
        automatisch fÃ¼r alle Quellen in der /etc/apt/sources.list
        erledigt wird, wenn Sie apt-file update (als root) ausfÃ¼hren.

8.6. Warum wird Â»foo-dataÂ« nicht entfernt, wenn ich Â»fooÂ«
deinstalliere? Wie stelle ich sicher, dass alte unbenutzte
Bibliothekspakete restlos entfernt werden?

    Einige Software ist in Programmpakete (Â»fooÂ«) und Datenpakete
    (Â»foo-dataÂ«) (oder Â»fooÂ« und Â»foo-docÂ«) aufgeteilt. Dies trifft
    in Debian auf viele Spiele, Multimedia-Anwendungen und
Â Â Â  WÃ¶rterbÃ¼cher zu und wurde eingefÃ¼hrt, weil einige Benutzer auf
    die Rohdaten zugreifen wollten, ohne das Programm zu
    installieren, oder weil das Programm auch ohne die Daten lÃ¤uft,
    so dass Â»foo-dataÂ« optional ist.

    Ã„hnliche Situationen tauchen auf, wenn Sie mit Bibliotheken
    arbeiten: normalerweise werden diese Pakete installiert, wenn
    Pakete Programme enthalten, die von ihnen abhÃ¤ngen. Wenn das
Â Â Â  Programmpaket entfernt wird, bleibt das Bibliothekspaket auf dem
    System. Oder: Wenn das Programmpaket nicht lÃ¤nger z.B. von
    Â»libdb4.2Â« abhÃ¤ngt, aber stattdessen jetzt von Â»libdb4.3Â«, kann
    das Â»libdb4.2Â«-Paket installiert bleiben, wenn das Programmpaket
    aktualisiert wird.

    In diesen FÃ¤llen hÃ¤ngt Â»foo-dataÂ« nicht von Â»fooÂ« ab, so dass,
    wenn Sie das Â»fooÂ«-Paket entfernen, die meisten
    Paketverwaltungswerkzeuge es nicht automatisch entfernen.
    Dasselbe gilt fÃ¼r die Bibliothekspakete. Dies ist nÃ¶tig, um
Â Â Â  zirkulÃ¤re AbhÃ¤ngigkeiten zu vermeiden. Wenn Sie jedoch apt-get
    (siehe AbschnittÂ 8.1.2, â€žAPTâ€œ) oder aptitude (siehe
    AbschnittÂ 8.1.3, â€žaptitudeâ€œ) als Paketverwaltungswerkzeug
    benutzen, werden sich diese die automatisch installierten Pakete
    merken und sie entfernen, wenn kein Paket mehr auf Ihrem System
    existiert, das diese nutzt.


---------------------------------------------------------------------

    ^[5] Beachten Sie, dass es einige (Software)-Portierungen gibt,
Â Â Â  die dies auch fÃ¼r andere Paketverwaltungssysteme wie den Red-Hat
    Package-Manager (auch als rpm bekannt) ermÃ¶glichen.

Kapitel 9. Wie man sein Debian-System auf aktuellem Stand hÃ¤lt

    Debian legt Wert darauf, dass der Ablauf von
    Systemaktualisierungen in sich stimmig und sicher ist. Wir tun
    alles, um Ihnen Schwierigkeiten beim Upgrade auf eine neue
Â Â Â  VerÃ¶ffentlichung zu ersparen. Falls fÃ¼r ein Paket wichtige
    Hinweise vorliegen, werden diese wÃ¤hrend des Upgrades ausgegeben
    und dem Benutzer hÃ¤ufig auch LÃ¶sungen fÃ¼r mÃ¶gliche Probleme
    angeboten.

    Es ist ratsam, sich die VerÃ¶ffentlichungshinweise (Release Notes)
    durchzulesen, welche Einzelheiten zu den jeweiligen Upgrades
Â Â Â  enthalten. Diese sind auf allen Debian-CDs/DVDs/Blue-ray-Disks zu
    finden und auch im WWW unter https://www.debian.org/releases/
    stable/releasenotes (https://www.debian.org/releases/stable/
    releasenotes) verfÃ¼gbar.

9.1. Wie kann ich mein Debian-System aktuell halten?

    Man kÃ¶nnte sich einfach anonym per FTP an einem
    Debian-Spiegelserver anmelden, die Verzeichnisse durchgehen, sich
    gewÃ¼nschte Dateien herunterladen und dann mit dpkg installieren.
    Seien Sie sich darÃ¼ber im klaren, dass dpkg selbst bei laufenden
Â Â Â  Systemen das Upgrade auf der Stelle einleiten wird. Manchmal ist
    es erforderlich, dass fÃ¼r ein geÃ¤ndertes Paket eine aktuelle
    Version eines anderen Paketes installiert werden muss. In diesem
    Falle wird die Installation fehlschlagen, bis/auÃŸer wenn das
    andere Paket installiert ist.

    Viele Leute finden diese Vorgehensweise viel zu zeitraubend, weil
    Debian sich so schnell entwickelt â€“ Ã¼blicherweise werden jede
    Woche ein Dutzend oder mehr neue Pakete hochgeladen. Kurz vor
Â Â Â  einer neuen HauptverÃ¶ffentlichung ist diese Anzahl noch grÃ¶ÃŸer.
    Um mit dieser Lawine umgehen zu kÃ¶nnen, bevorzugen viele Leute
    eine automatisierte Methode. Zu diesem Zweck sind mehrere
    verschiedene AnsÃ¤tze verfÃ¼gbar:

9.1.1. aptitude

Â Â Â  aptitude ist der empfohlene Paketmanager fÃ¼r Debian GNU/
    Linux-Systeme und in AbschnittÂ 8.1.3, â€žaptitudeâ€œ beschrieben.

    Bevor aptitude fÃ¼r ein Upgrade benutzt werden kann, muss die /etc
    /apt/sources.list-Datei entsprechend angepasst werden. Wenn Sie
Â Â Â  eine Aktualisierung auf die neueste stabile Debian-Version
    durchfÃ¼hren mÃ¶chten, sollten Sie wahrscheinlich eine Quelle wie
    die folgende benutzen:

Â Â Â  http://ftp.de.debian.org/debian stable main contrib

    ftp.us.debian.org (ein Spiegel-Server in den Vereinigten Staaten)
    kann durch den Namen eines schnelleren Debian-Spiegels in Ihrer
Â Â Â  NÃ¤he ersetzt werden. Sie finden eine Liste der Spiegel-Server
    sowie weitere Informationen auf https://www.debian.org/misc/
    README.mirrors (https://www.debian.org/misc/README.mirrors) .

    Oder Sie benutzen den Weiterleitungs-Service
    httpredir.debian.org, der die Aufgabe der Spiegelauswahl fÃ¼r Sie
Â Â Â  Ã¼bernimmt. Dabei werden der geografische Standort des Benutzers
    und weitere Informationen verwendet, um den besten verfÃ¼gbaren
    Spiegel auszuwÃ¤hlen, der die Dateien liefern kann. Um Gebrauch
    davon zu machen, verwenden Sie eine Paketquelle wie diese:

Â Â Â  http://httpredir.debian.org/debian stable main contrib

Â Â Â  Weitere Einzelheiten hierzu kÃ¶nnen Sie der Handbuchseite 
    sources.list(5) entnehmen.

Â Â Â  Zum Aktualisieren des Systems ist folgender Befehl auszufÃ¼hren:

Â Â Â  aptitude update

Â Â Â  gefolgt von

Â Â Â  aptitude full-upgrade

Â Â Â  Beantworten Sie eventuelle Fragen, und das System wird
    aktualisiert.

    Beachten Sie, dass aptitude nicht das empfohlene Werkzeug fÃ¼r ein
    Upgrade auf eine neue Debian GNU/Linux-VerÃ¶ffentlichung ist.
    Verwenden Sie stattdessen apt-get. Sie sollten vor einem Upgrade
Â Â Â  auch die VerÃ¶ffentlichungshinweise (https://www.debian.org/
    releases/stable/releasenotes) lesen. Diese beschreiben zum einen
    detailliert, wie das Upgrade erfolgen sollte und nennen Punkte,
    mit denen Sie sich vor dem Upgrade befasst haben sollten.

Â Â Â  Details finden Sie in der Handbuchseite aptitude(8) und in der
    Datei /usr/share/aptitude/README.

9.1.2. apt-get und apt-cdrom

Â Â Â  Eine Alternative zu aptitude ist apt-get, ein APT-basiertes
    Befehlszeilenprogramm (beschrieben in AbschnittÂ 8.1.2, â€žAPTâ€œ).

    apt-get, das APT-basierte Befehlszeilen-Werkzeug zur
Â Â Â  Paketverwaltung, bietet einen einfachen und sicheren Weg zur
    Installation und Aktualisierung von Paketen.

Â Â Â  Um apt-get zu benutzen, editieren Sie die Datei /etc/apt/
    sources.list, genauso wie fÃ¼r AbschnittÂ 9.1.1, â€žaptitudeâ€œ.

Â Â Â  FÃ¼hren Sie dann aus:

Â Â Â  apt-get update

Â Â Â  gefolgt von

Â Â Â  apt-get dist-upgrade

    Beantworten Sie eventuelle Fragen, und das System wird
Â Â Â  aktualisiert. Schauen Sie auch auf die Handbuchseite apt-get(8)
    oder in AbschnittÂ 8.1.2, â€žAPTâ€œ.

    Wenn Sie Pakete von CD/DVD/BD installieren mÃ¶chten, kÃ¶nnen Sie 
Â Â Â  apt-cdrom benutzen. Weitere Einzelheiten sind in den
    VerÃ¶ffentlichungshinweisen im Abschnitt Â»APT-Quellen fÃ¼r optische
    Medien hinzufÃ¼genÂ« zu finden.

    Es ist zu beachten, dass die Pakete, nachdem sie heruntergeladen
    und installiert wurden, immer noch in einem Verzeichnis unterhalb
Â Â Â  von /var verbleiben. Um die Partition vor ÃœberfÃ¼llung zu
    bewahren, sollten Sie daran denken, solche Dateien mit apt-get
    clean oder apt-get autoclean zu lÃ¶schen, oder sie an einen
    anderen Ort verschieben (Tipp: benutzen Sie hierfÃ¼r apt-move).

9.1.3. mirror

    Dieses Perl-Skript und das dazugehÃ¶rige (optionale)
Â Â Â  Verwaltungsprogramm namens mirror-master kann vom Benutzer
    angegebene Teile eines Verzeichnisbaums in einer anonymen
    FTP-Sitzung von einem vorgegebenen Server abrufen.

    mirror ist besonders dafÃ¼r geeignet, groÃŸe Mengen an Software
    herunterzuladen. Nachdem zum ersten Mal Dateien von einem Server
    heruntergeladen wurden, wird eine Datei namens .mirrorinfo auf
Â Â Â  dem lokalen Rechner angelegt. VerÃ¤nderungen im fernen Dateisystem
    werden automatisch durch mirror verfolgt; dabei wird diese Datei
    mit einer Ã¤hnlichen Datei auf dem fernen System verglichen und
    nur geÃ¤nderte Dateien werden heruntergeladen.

    Das Programm mirror ist hauptsÃ¤chlich dafÃ¼r geeignet, lokale
    Kopien von fernen VerzeichnisbÃ¤umen zu aktualisieren. Die
    abgerufenen Dateien mÃ¼ssen keine Debian-Dateien sein. (Da mirror
    ein Perl-Skript ist, lÃ¤uft es auch auf nicht-Unix-Systemen.)
Â Â Â  Obwohl es mit dem Programm mirror mÃ¶glich ist, Dateien
    auszuschlieÃŸen, deren Namen benutzerdefinierte Zeichenketten
    enthalten, ist dieses Programm am nÃ¼tzlichsten, wenn komplette
    VerzeichnisbÃ¤ume heruntergeladen werden sollen anstatt
    ausgewÃ¤hlter Pakete.

9.2. Muss ich in den Einzelbenutzermodus wechseln, um ein Paket zu
aktualisieren?

    Nein. Pakete kÃ¶nnen direkt aktualisiert werden, sogar in
    laufenden Systemen. Debian verfÃ¼gt Ã¼ber ein
Â Â Â  start-stop-daemon-Programm, das - falls notwendig - wÃ¤hrend eines
    Paket-Upgrades aufgerufen wird, um laufende Prozesse anzuhalten
    und wieder zu starten.

9.3. Muss ich all diese .deb-Archivdateien auf meinem Rechner
aufbewahren?

Â Â Â  Nein. Diese Dateien kÃ¶nnen nach erfolgreicher Installation der
    Pakete wieder entfernt werden, z.B. mit aptitude clean.

9.4. Wie kann ich protokollieren, welche Pakete ich meinem System
hinzugefÃ¼gt habe? Ich mÃ¶chte gerne wissen, wann welche Pakete
aktualisiert oder entfernt wurden!

    Durch das AnhÃ¤ngen der Option --log=Dateiname wird dpkg
Â Â Â  veranlasst, ein Statusprotokoll zu erstellen, das alle Ã„nderungen
    am Installationsstatus und alle Paketoperationen auflistet. Es
    protokolliert sowohl den Aufruf von dpkg, z.B.

Â Â Â  2005-12-30 18:10:33 install hello 1.3.18 2.1.1-4

Â Â Â  als auch das Ergebnis, also z.B.

Â Â Â  2005-12-30 18:10:35 status installed hello 2.1.1-4.

Â Â Â  Wenn jeder Aufruf von dpkg protokolliert werden soll, (auch falls
    dieser Ã¼ber andere Programme wie aptitude geschieht), kann

Â Â Â  log /var/log/dpkg.log

    zur /etc/dpkg/dpkg.cfg-Datei hinzugefÃ¼gt werden. Stellen Sie
    sicher, dass die erstellte Protokolldatei regelmÃ¤ÃŸig rotiert
Â Â Â  wird. Wenn Sie logrotate benutzen, kÃ¶nnen Sie dies erreichen,
    indem Sie eine Datei /etc/logrotate.d/dpkg mit folgendem Inhalt
    erstellen:

    /var/log/dpkg {
Â Â Â    missingok
      notifempty
    }

Â Â Â  Weitere Details Ã¼ber das Protokollieren von dpkg-Operationen
    finden Sie auf der Handbuchseite dpkg(1).

    aptitude protokolliert beabsichtigte Installationen, Entfernungen
Â Â Â  und Aktualisierungen in der Datei /var/log/aptitude, wobei die 
    Ergebnissse dieser AktivitÃ¤ten nicht in dieser Datei
    aufgezeichnet werden!

    Eine andere MÃ¶glichkeit, PaketaktivitÃ¤ten aufzuzeichnen besteht
Â Â Â  darin, die Paketverwaltungs-Sitzung innerhalb des script(1)
    -Programms laufen zu lassen.

9.5. Kann ich das System automatisch aktualisieren lassen?

    Ja. Sie kÃ¶nnen cron-apt benutzen; dieses Werkzeug aktualisiert
Â Â Â  Ã¼ber einen cron-Job regelmÃ¤ÃŸig das System. In der
    Standardeinstellung aktualisiert es lediglich die Paketliste und
    lÃ¤dt neue Pakete herunter, installiert diese jedoch nicht.

    Bei Testing- oder Unstable-Systemen wird von der automatischen
Â Â Â  Aktualisierung von Paketen abgeraten, da ein unerwartetes
    Verhalten oder Paketentfernungen auftreten kÃ¶nnen, ohne dass dies
    bemerkt wÃ¼rde.

9.6. Ich habe mehrere Rechner; wie kann ich erreichen, dass ich die
Updates nur einmal herunterladen muss?

    Falls Sie mehr als einen Debian-Rechner in Ihrem Netzwerk haben,
Â Â Â  ist apt-cacher nÃ¼tzlich, um all Ihre Debian-Systeme aktuell zu
    halten.

    apt-cacher reduziert die Bandbreiten-Anforderungen auf Seiten der
    Debian-Spiegelserver, da Â»PackagesÂ«-, Â»ReleasesÂ«- and
    Â»SourcesÂ«-Dateien weniger hÃ¤ufig fÃ¼r Aktualisierungen angefordert
Â Â Â  werden und jede Datei immer nur einmal heruntergeladen wird,
    unabhÃ¤ngig von den wirklichen Anfragen des Proxys. apt-cacher
    erstellt automatisch einen Debian-HTTP-Spiegel, basierend auf den
    Anfragen, die durch den Proxy gehen.

    NatÃ¼rlich kÃ¶nnen Sie die gleichen Vorteile auch genieÃŸen, wenn
Â Â Â  Sie einen Standard-Caching-Proxy nutzen und alle Ihre Systeme so
    konfiguriert sind, diesen zu nutzen.

Kapitel 10. Debian und der Kernel

10.1. Kann ich einen Kernel ohne gewisse Debian-spezifische
Optimierungen installieren und kompilieren?

Â Â Â  Ja.

    Es gibt nur ein hÃ¤ufiges Problem: Die Debian C-Bibliotheken
    werden mit den neuesten stabilen Ausgaben der Kernel-Header
    erstellt. Wenn Sie ein Programm mit neueren Kernel-Headern als
    jenen aus dem Stable-Zweig kompilieren mÃ¶chten, sollten Sie
Â Â Â  entweder das Paket, welches die Header enthÃ¤lt (linux-libc-dev)
    aktualisieren oder die neuen Header eines entpackten Baums des
    neuen Kernels verwenden. Das heiÃŸt, wenn die Kernel-Quellen in /
    usr/src/linux liegen, sollten Sie beim Kompilieren -I/usr/src/
    linux/include/ an die Befehlszeile anhÃ¤ngen.

10.2. Welche Werkzeuge zum Erzeugen eines angepassten Kernels stellt
Debian zur VerfÃ¼gung?

    Benutzer, die einen eigenen angepassten Kernel erstellen mÃ¶chten
    (oder mÃ¼ssen), sollten das Debian-Paket-Target verwenden, das in
Â Â Â  den aktuellen Versionen des Kernel-Build-Systems enthalten ist.
    Nach dem Konfigurieren des Kernels fÃ¼hren Sie einfach folgenden
    Befehl aus:

Â Â Â  make deb-pkg

    Das neue Kernel-Paket wird in dem Verzeichnis eine Ebene oberhalb
Â Â Â  des Kernel-Quellcode-Baums erstellt, und es kann mittels dpkg -i
    installiert werden.

    Anwender mÃ¼ssen sich den Quellcode des neuesten Kernels oder des
    Kernels ihrer Wahl separat von der von ihnen bevorzugten
Â Â Â  Linux-Archiv-Website herunterladen, es sei denn, ein
    kernel-source-version-Debian-Paket ist verfÃ¼gbar (wobei version
    fÃ¼r die Version des Kernels steht).

10.3. Welche Hilfsmittel stellt Debian fÃ¼r den Umgang mit Modulen
bereit?

    Eine Konfigurationsdatei, die die Module enthÃ¤lt, welche beim
Â Â Â  Booten des Systems geladen werden sollen, ist /etc/modules.
    Allerdings mÃ¼ssen Sie diese Datei nur selten verÃ¤ndern.

    Weitere Konfigurationsdaten fÃ¼r Kernel-Module werden in dem
Â Â Â  Verzeichnis /etc/modprobe.d/ abgelegt. Weitere Informationen Ã¼ber
    das Format der Dateien finden Sie auf der modprobe.conf(5)
    Handbuchseite.

10.4. Kann ich sicher ein altes Kernel-Paket deinstallieren und wenn
ja, wie?

    Ja. Das kernel-image-NNN.prerm-Skript kontrolliert, ob der
Â Â Â  Kernel, den Sie gerade verwenden, derselbe ist wie jener, den Sie
    zu entfernen versuchen. Daher kÃ¶nnen Sie nicht mehr benÃ¶tigte
    Kernel-Image-Pakete mit diesem Befehl entfernen:

Â Â Â  dpkg --purge linux-image-NNN

Â Â Â  (NatÃ¼rlich mÃ¼ssen Sie NNN durch die Kernelversion und
    Revisionsnummer des entsprechenden Kernels ersetzen.)

10.5. Wo finde ich mehr Informationen Ã¼ber Linux-Pakete fÃ¼r Debian?

Â Â Â  Weitere Informationen werden im Debian Linux Kernel Handbook
    (https://kernel-team.pages.debian.net/kernel-handbook/) gepflegt.

Kapitel 11. Anpassen Ihres Debian GNU/Linux-Systems

11.1. Wie kann ich sicherstellen, dass alle Programme dieselbe
PapiergrÃ¶ÃŸe verwenden?

    Installieren Sie das Paket libpaper1 und es wird nach einer
Â Â Â  systemweiten StandardpapiergrÃ¶ÃŸe fragen. Diese Einstellung wird
    in der Datei /etc/papersize gespeichert.

    Benutzer kÃ¶nnen sich Ã¼ber die PapiergrÃ¶ÃŸen-Einstellung
Â Â Â  hinwegsetzen, indem sie die PAPERSIZE-Umgebungsvariable
    verwenden. FÃ¼r Details lesen Sie die Handbuchseite papersize(5).

11.2. Wie lassen sich ohne Abstriche bei der Sicherheit
PeripheriegerÃ¤te zur VerfÃ¼gung stellen?

    Viele GerÃ¤tedateien im /dev/-Verzeichnis gehÃ¶ren zu einer
Â Â Â  vordefinierten Gruppe. Zum Beispiel gehÃ¶rt /dev/sr0 zu der Gruppe
    cdrom.

    Um einem bestimmten Benutzer Zugriff auf eines dieser GerÃ¤te
Â Â Â  einzurÃ¤umen, fÃ¼gen Sie ihn zu der Gruppe hinzu, der das GerÃ¤t
    gehÃ¶rt, also z.B.:

Â Â Â  adduser user group

Â Â Â  Auf diese Art mÃ¼ssen Sie die Dateiberechtigungen des GerÃ¤tes
    nicht Ã¤ndern.

    Wenn Sie diese Ã„nderung auf der Shell eines Benutzers oder einer
    grafischen Benutzerumgebung vornehmen, mÃ¼ssen Sie sich
Â Â Â  anschlieÃŸend einmal abmelden und wieder neu anmelden, damit die
    Ã„nderungen wirksam werden. Um herauszufinden, welchen Gruppen Sie
    angehÃ¶ren, verwenden Sie den Befehl groups.

    Hinweis: Seit der EinfÃ¼hrung von udev kann es vorkommen, dass
    Ihrerseits geÃ¤nderte Berechtigungen fÃ¼r PeripheriegerÃ¤te nach
Â Â Â  einem Systemstart wieder zurÃ¼ckgesetzt sind. Falls fÃ¼r Sie
    relevante GerÃ¤te davon betroffen sind, mÃ¼ssen Sie die Regeln in /
    etc/udev anpassen.

11.3. Wie kann ich eine Konsolen-Schriftart auf Debian-Art beim
Systemstart laden?

Â Â Â  Das Paket kbd lÃ¤sst sich entsprechend konfigurieren. Editieren
    Sie dazu die Datei /etc/kbd/config.

11.4. Wie kann ich die Standardeinstellung eines X11-Programms
konfigurieren?

    Die Debian-X-Programme installieren ihre
    Anwendungs-Ressourcen-Daten im Verzeichnis /etc/X11/app-defaults
Â Â Â  /. Wenn Sie eine X-Anwendung global anpassen wollen, schreiben
    Sie Ihre Anpassungen in diese Dateien. Sie sind als
    Konfigurationsdateien markiert, so dass ihre Inhalte bei einem
    Upgrade erhalten bleiben.

11.5. Wie wird ein Debian-System hochgefahren?

    Like all Unices, Debian boots up by executing the program init.
Â Â Â  Like most Linux distributions, a default Debian system uses
    systemd as the implementation of init. Traditional System-V style
    init and other methods are also supported. ^[6]

    To control the order in which services are started, traditional
Â Â Â  System-V style Unix systems use runlevels. These are replaced by 
    targets under systemd. To display the default target to which
    systemd will bring the system, run the command

Â Â Â  systemctl get-default

    During boot-up, systemd starts the services or other targets
    listed in the default target file /lib/systemd/system/
    default.target. The files for these services and targets are
Â Â Â  installed and the service is enabled during Debian package
    installation. If you specifically wish not to start a service
    during boot-up, instead of removing the corresponding package,
    you can run the command

Â Â Â  systemctl disable service.service

Â Â Â  using the name of the service file installed in /lib/systemd/
    system (usually based on the name of the package).

    The service file /lib/systemd/rc.local.service provides an easy
    way to run customized scripts in the file /etc/rc.local after
Â Â Â  boot-up, similar to what's offered on Debian systems running
    System-V style init. Beware: this script will fail if it tries to
    interact with the console such as asking for a user password or
    trying to clear the screen.

Â Â Â  You can check the status of any service by the command

Â Â Â  service Paketname status

Â Â Â  . To start or stop a service, run

Â Â Â  service Paketname start

Â Â Â  and

Â Â Â  service Paketname stop

    . The service command works with any init system supported on a
Â Â Â  Debian system, not just with systemd. If you however prefer to
    use the same command on any systemd-supported Linux system, for
    checking the status run

Â Â Â  systemctl status Paketname.service

Â Â Â  to get the same information.

Â Â Â  For more information on systemd for Debian, see https://
    wiki.debian.org/systemd (https://wiki.debian.org/systemd) .

11.6. And how about Debian and traditional System V init?

    Debian supports booting using traditional System V init, via the
    sysvinit-core package. The configuration file for System V init
    (which is /etc/inittab) specifies that the first script to be
Â Â Â  executed should be /etc/init.d/rcS. This script runs all of the
    scripts in /etc/rcS.d/ by forking subprocesses to perform
    initialization such as to check and to mount file systems, to
    load modules, to start the network services, to set the clock,
    and to perform other initialization.

    Nachdem der Boot-Prozess abgeschlossen ist, fÃ¼hrt init alle
    Start-Skripte in dem zum Standard-Runlevel gehÃ¶renden Verzeichnis
Â Â Â  aus. Dieses Runlevel wird durch den Eintrag id in /etc/inittab
    festgelegt. Wie alle zu System V kompatiblen Unix-Systeme hat
    Linux 7 Runlevel:

      * 0 (das System anhalten),

      * 1 (Einzelbenutzer-Modus),
Â Â Â 
      * 2 bis 5 (verschiedene Mehrbenutzer-Modi) und

      * 6 (das System neu starten).

    Debian-Systeme haben Â»id=2Â« als Standardeinstellung, was
Â Â Â  bedeutet, dass der Standard-Runlevel Â»2Â« ist, wenn das
    Mehrbenutzer-Level gestartet wird, und dass die Skripte in /etc/
    rc2.d/ ausgefÃ¼hrt werden.

    Debian verwendet abhÃ¤ngigkeits-basierte Boot-Reihenfolgen durch
    Nutzung von insserv; dafÃ¼r werden die LSB-Header in jedem Skript
Â Â Â  unterhalb von /etc/init.d/ verwendet. AuÃŸerdem setzt Debian
    parallele (gleichzeitig laufende) Boot-Prozesse mittels startpar
    ein, um den Boot-Vorgang zu beschleunigen.

    Letzten Endes sind die Skripte in jedem der Verzeichnisse /etc/
    rcN.d/ nur symbolische Verweise zurÃ¼ck auf Skripte in /etc/init.d
    /. Allerdings geben die Namen dieser Dateien an, wie die Skripte
    in /etc/init.d/ ausgefÃ¼hrt werden. Konkret werden vor dem
    Aktivieren eines Runlevels alle Skripte, die mit einem Â»KÂ«
Â Â Â  beginnen, ausgefÃ¼hrt; diese Skripte beenden Dienste. Danach
    werden alle Skripte, die mit einem Â»SÂ« beginnen, ausgefÃ¼hrt;
    diese Skripte starten Dienste. Die zweistellige Zahl, die hinter
    dem Â»KÂ« bzw. Â»SÂ« folgt, bestimmt die Reihenfolge, in welcher die
    Skripte ausgefÃ¼hrt werden. Jene mit kleinerer Nummer werden
    zuerst ausgefÃ¼hrt.

    Die Methode beruht darauf, dass jedes der Skripte in /etc/init.d/
    eines von fÃ¼nf mÃ¶glichen Argumenten, nÃ¤mlich Â»startÂ«, Â»stopÂ«,
Â Â Â  Â»reloadÂ«, Â»restartÂ« oder Â»force-reloadÂ« erwartet und den
    jeweiligen Dienst dann entsprechend steuert. Diese Skripte kÃ¶nnen
    auch nach dem Starten des Systems noch benutzt werden, um
    verschiedene Prozesse zu kontrollieren.

Â Â Â  Folgender Befehl mit dem Argument Â»reloadÂ«

Â Â Â  /etc/init.d/sendmail reload

Â Â Â  sendet dem sendmail-Daemon ein Signal, seine Konfigurationsdatei
    neu einzulesen.

    Beachten Sie, dass invoke-rc.d nicht benutzt werden sollte, um
Â Â Â  die Skripte in /etc/init.d/ aufzurufen; verwenden Sie stattdessen
    service.

11.7. Und gibt es noch weitere MÃ¶glichkeiten, ein Debian-System zu
booten?

    If you do like System V init, but don't like the /etc/rc?.d/*
Â Â Â  links, you could install the file-rc package. That will convert
    the links into one single configuration file /etc/runlevel.conf
    instead.

Â Â Â  If you like neither System V nor systemd, you might like openrc
    or runit or daemontools.

11.8. Wie geht das Paketverwaltungssystem mit Paketen um, die
Konfigurationsdateien fÃ¼r andere Pakete enthalten?

    Manche Benutzer mÃ¶chten zum Beispiel einen neuen Server
    einrichten, indem sie eine Gruppe von Debian-Paketen installieren
    sowie ein lokal generiertes Paket, welches aus
Â Â Â  Konfigurationsdateien besteht. Dies ist grundsÃ¤tzlich keine gute
    Idee, weil dpkg nichts Ã¼ber diese Konfigurationsdateien weiÃŸ,
    wenn sie in einem anderen Paket enthalten sind. dpkg kÃ¶nnte daher
    unpassende Konfigurationen schreiben, wenn eines der
    ursprÃ¼nglichen Pakete aktualisiert wird.

    Deshalb ist es besser, ein lokales Paket zu erstellen, das die
    Konfigurationsdateien einer Â»GruppeÂ« von Debian-Paketen
Â Â Â  modifiziert. Dann registriert dpkg und der Rest des
    Paketverwaltungssystems, dass diese Dateien durch den lokalen
    Systemverwalter modifiziert worden sind und versucht nicht, sie
    bei einer Paketaktualisierung zu Ã¼berschreiben.

11.9. Wie kann ich eine durch ein Paket installierte Datei auÃŸer
Kraft setzen, so dass stattdessen eine andere Version verwendet
werden kann?

    Nehmen wir an, dass ein Systemadministrator oder ein lokaler
Â Â Â  Benutzer lieber ein Programm namens login-local anstatt dem vom
    Debian-Paket login zur VerfÃ¼gung gestellten Programm login
    verwenden mÃ¶chte.

Â Â Â  Sie sollten nicht:

Â Â Â    * /bin/login mit login-local Ã¼berschreiben.

    Das Paketverwaltungssystem weiÃŸ nichts Ã¼ber diese VerÃ¤nderung und
Â Â Â  wird einfach Ihr angepasstes /bin/login Ã¼berschreiben, wann immer
    login (oder jedes andere Paket, welches /bin/login bereitstellt)
    installiert oder aktualisiert wird.

Â Â Â  Tun Sie besser Folgendes:

      * FÃ¼hren Sie folgenden Befehl aus:

        dpkg-divert --divert /bin/login.debian /bin/login

        Dies fÃ¼hrt dazu, dass bei allen zukÃ¼nftigen Installationen
        des Debian-Pakets login die Datei /bin/login nach /bin/
Â Â Â      login.debian geschrieben wird.

      * Und dann:

        cp login-local /bin/login

        Dadurch wird Ihr eigenes lokal erstelltes Programm an den
        richtigen Ort kopiert.

Â Â Â  FÃ¼hren Sie dpkg-divert --list aus, um zu sehen, welche
    Umleitungen auf Ihrem System aktiv sind.

Â Â Â  Details dazu finden Sie auf der Handbuchseite dpkg-divert(8).

11.10. Wie kann ich meine lokal erstellten Pakete in die Liste der
verfÃ¼gbaren Pakete, die dem Paketmanagementsystem bekannt sind,
aufnehmen?

Â Â Â  FÃ¼hren Sie folgenden Befehl aus:

Â Â Â  dpkg-scanpackages BIN_DIR OVERRIDE_FILE [PATHPREFIX] > meine_Pakete

Â Â Â  Dabei ist:

      * BIN_DIR ein Verzeichnis, in welchem Debian-Archiv-Dateien
        (Ã¼blicherweise mit der Endung Â».debÂ«) gespeichert sind.

      * OVERRIDE_FILE eine Datei, die von den Betreuern der
        Distribution editiert worden ist und fÃ¼r Debian-Pakete aus
Â Â Â      der Â»MainÂ«-Distribution normalerweise im Debian-FTP-Archiv
        unter indices/override.main.gz liegt. FÃ¼r lokale Pakete
        entfÃ¤llt dieses Argument.

      * PATHPREFIX eine optionale Zeichenkette, die der zu
        erstellenden Datei meine_Pakete vorangestellt werden kann.

Â Â Â  Wenn Sie die Datei meine_Pakete erstellt haben, teilen Sie dies
    dem Paketverwaltungssystem Ã¼ber folgenden Befehl mit:

Â Â Â  dpkg --merge-avail meine_Pakete

Â Â Â  Wenn Sie APT verwenden, kÃ¶nnen Sie das lokale Paketdepot auch zu
    Ihrer sources.list(5)-Datei hinzufÃ¼gen.

11.11. Einige Benutzer mÃ¶gen mawk, andere gawk; einige mÃ¶gen vim,
andere elvis; einige trn, wieder andere tin; wie unterstÃ¼tzt Debian
die Vielfalt?

    Es gibt verschiedene FÃ¤lle, in denen zwei Pakete zwei
    verschiedene Versionen eines Programms zur VerfÃ¼gung stellen,
    wobei beide dieselben Grundfunktionen beherrschen. Benutzer mÃ¶gen
Â Â Â  eines dem anderen aus Gewohnheit vorziehen, oder weil die
    Benutzerschnittstelle des einen Pakets auf irgendeine Art
    attraktiver ist als jene eines anderen. Andere Benutzer auf
    demselben System kÃ¶nnten eine andere Wahl treffen.

    Wenn zwei oder mehr Hilfsprogramme dieselben Grundfunktionen
    aufweisen und eine generell formulierte PaketabhÃ¤ngigkeit
Â Â Â  erfÃ¼llen, ermÃ¶glicht es Debian Systemadministratoren oder
    Benutzern, durch ein Â»virtuellesÂ« Paketystem festzulegen, welches
    vorgezogen wird.

    Zum Beispiel kÃ¶nnten zwei verschiedene Versionen eines
    Newsreaders auf einem System existieren. Das Newsserver-Paket
    kÃ¶nnte Â»empfehlenÂ«, dass Ã¼berhaupt ein Newsreader auf dem System
    installiert ist, aber die Wahl von tin oder trn ist dem
Â Â Â  jeweiligen Benutzer Ã¼berlassen. Dies wird erreicht, indem die
    beiden Pakete tin und trn das virtuelle Paket news-reader
    bereitstellen. Welches der Programme tatsÃ¤chlich aufgerufen wird,
    wird durch einen Verweis von /etc/alternatives/news-reader (dem
    Namen des virtuellen Pakets) auf die BinÃ¤rdatei des ausgewÃ¤hlten
    Programms (z.B. /usr/bin/trn) bestimmt.

    FÃ¼r die Nutzung alternativer Programme reicht eine einzelne
    symbolische VerknÃ¼pfung nicht aus. Der Auswahlmechanismus muss
Â Â Â  auch Handbuchseiten und sonstige zugehÃ¶rige Dateien
    berÃ¼cksichtigen. Das Perl-Skript update-alternatives stellt
    sicher, dass alle zu einem ausgewÃ¤hlten Paket gehÃ¶renden Dateien
    systemweit als Standard herangezogen werden.

    Um zum Beispiel zu kontrollieren, welche ausfÃ¼hrbaren Dateien
Â Â Â  Â»x-window-managerÂ« bereitstellen, fÃ¼hren Sie folgenden Befehl
    aus:

Â Â Â  update-alternatives --display x-window-manager

Â Â Â  Wenn Sie dies Ã¤ndern mÃ¶chten, verwenden Sie

Â Â Â  update-alternatives --config x-window-manager

Â Â Â  und folgen den Anweisungen auf dem Bildschirm (einfach gesagt:
    geben Sie Sie die Zahl fÃ¼r den Eintrag ein, den Sie bevorzugen).

    Wenn ein Paket sich selbst aus irgend einem Grund nicht als
    Fenstermanager registriert (senden Sie einen Fehlerbericht, falls
    es ein Fehler ist), oder wenn Sie einen Fenstermanager aus dem /
Â Â Â  usr/local/-Verzeichnis verwenden, werden die AuswahlmÃ¶glichkeiten
    auf dem Bildschirm Ihren bevorzugten Eintrag nicht enthalten. Sie
    kÃ¶nnen den Verweis aber Ã¼ber Befehlszeilen-Optionen
    aktualisieren:

Â Â Â  update-alternatives --install /usr/bin/x-window-manager \
      x-window-manager /usr/local/bin/wmaker-cvs 50

    Das erste Argument fÃ¼r die Â»--installÂ«-Option ist der symbolische
    Verweis, der auf /etc/alternatives/NAME zeigt, wobei NAME das
Â Â Â  zweite Argument ist. Das dritte Argument ist das Programm, auf
    welches /etc/alternatives/NAME zeigen soll, und das vierte
    Argument die PrioritÃ¤t (ein grÃ¶ÃŸerer Wert bedeutet, dass diese
    Alternative wahrscheinlicher automatisch ausgewÃ¤hlt wird).

Â Â Â  Um eine Alternative, die Sie hinzugefÃ¼gt haben, wieder zu
    entfernen, fÃ¼hren Sie einfach folgenden Befehl aus:

Â Â Â  update-alternatives --remove x-window-manager /usr/local/bin/wmaker-cvs


---------------------------------------------------------------------

    ^[6] In 2014, Debian changed its default init system from System
    V init to systemd. Debian 8 "jessie" in April 2015 was the first
    release to ship with systemd as default init. Four decisions
    (https://www.debian.org/devel/tech-ctte#status) of the Debian
    Technical Committee were involved: Bug #727708 (https://
    lists.debian.org/20140211193904.GX24404@rzlab.ucr.edu)
    2014-02-11: "The committee decided that the default init system
    for Linux architectures in jessie should be systemd." Bug #746715
    (https://lists.debian.org/
Â Â Â  20140801023630.GF12356@teltox.donarmstrong.com) 2014-08-01: "The
    technical committee expects maintainers to continue to support
    the multiple available init systems", and merge reasonable
    contributions. Bug #746578 (https://lists.debian.org/
    20141116001628.GO32192@teltox.donarmstrong.com) 2014-11-15: "The
    committee decided that systemd-shim should be the first listed
    alternative dependency of libpam-systemd instead of
    systemd-sysv." This decision made it easier to keep running a
    non-systemd Debian system. Bug #762194 (https://lists.debian.org/
    21592.61064.527547.410074@chiark.greenend.org.uk) 2017-11-04: "On
    automatic init system switching on upgrade"

Kapitel 12. UnterstÃ¼tzung fÃ¼r Debian GNU/Linux erhalten

12.1. Welche andere Dokumentation gibt es auf einem und fÃ¼r ein
Debian-System?

      * Installationsanleitung fÃ¼r die aktuelle Version: siehe https:
        //www.debian.org/releases/stable/installmanual (https://
        www.debian.org/releases/stable/installmanual) .

      * Die Debian GNU/Linux-Referenz behandelt viele Aspekte der
        Systemadministration durch Shell-Befehlsbeispiele.
        Grundanleitungen, Tipps und weitere Informationen fÃ¼r viele
        verschiedene Themen stehen zur VerfÃ¼gung, angefangen bei der
        Systemadministration bis hin zur Programmierung.

        Sie finden sie im debian-reference-Paket oder unter https://
        www.debian.org/doc/user-manuals#quick-reference (https://
        www.debian.org/doc/user-manuals#quick-reference) .

      * Das Policy-Handbuch beinhaltet die Richtlinien fÃ¼r die
        Distribution, das heiÃŸt Struktur und Inhalt des
        Debian-Archivs, verschiedene Design-Entscheidungen bezÃ¼glich
        des Betriebssystems usw. Es beinhaltet auch die technischen
        Anforderungen, die jedes Paket erfÃ¼llen muss, um in die
        Distribution aufgenommen zu werden, sowie technische Aspekte
        der BinÃ¤r- und Quellpakete fÃ¼r Debian.

        Es ist im debian-policy-Paket oder unter https://
        www.debian.org/doc/devel-manuals#policy (https://
        www.debian.org/doc/devel-manuals#policy) zu finden.

      * Dokumentation entwickelt vom Debian-Dokumentationsprojekt.
        Diese ist auf https://www.debian.org/doc (https://
        www.debian.org/doc) verfÃ¼gbar und beinhaltet Benutzer-,
        Administrations- und SicherheitshandbÃ¼cher fÃ¼r das Debian GNU
        /Linux-Betriebssystem.

      * Dokumentation zu installierten Debian-Paketen: Die meisten
        Pakete enthalten Dateien, die nach /usr/share/doc/PAKETNAME
        entpackt werden.
Â Â Â 
      * Dokumentation zu Linux-Projekten: Das Debian-Paket doc-linux
        installiert alle aktuellen Versionen der HOWTOs und
        mini-HOWTOs vom Linux Documentation Project (http://
        www.tldp.org/) .

      * Handbuchseiten (manpages) im Unix-Stil: Zu den meisten
        Befehlen gibt es Handbuchseiten, die im gleichen Stil
        geschrieben sind wie die originalen Â»manÂ«-Dateien fÃ¼r Unix.
        Um zum Beispiel die Handbuchseite fÃ¼r den Befehl Â»lsÂ«
        aufzurufen, fÃ¼hren Sie man ls aus. Mittels man man bekommen
        Sie mehr Informationen dazu, wie Sie Handbuchseiten finden
        und lesen kÃ¶nnen.

        Neue Debian-Benutzer sollten beachten, dass die
        Handbuchseiten vieler Systembefehle nur verfÃ¼gbar sind, wenn
        folgende Pakete installiert werden:

          + man-db, welches das man-Programm an sich und andere
            Programme beinhaltet, um die Handbuchseiten zu
            bearbeiten.

          + manpages, welches die System-Handbuchseiten selbst
            beinhaltet. (Vergleichen Sie dazu auch AbschnittÂ 5.9,
            â€žWie unterstÃ¼tzt Debian andere Sprachen als Englisch?â€œ).

      * Â»infoÂ«-Seiten im GNU-Stil: Die Benutzerdokumentation fÃ¼r
        viele Befehle, besonders fÃ¼r GNU-Werkzeuge, ist nicht als
        Handbuchseite verfÃ¼gbar, sondern als Â»infoÂ«-Datei, die mit
        dem GNU-Programm info, innerhalb von GNU Emacs mit M-x info
        oder mit einem anderen Info-Betrachter gelesen werden kÃ¶nnen.

        Der groÃŸe Vorteil gegenÃ¼ber den ursprÃ¼nglichen Handbuchseiten
        besteht darin, dass es ein Hypertext-System ist. Es wird
        jedoch nicht das WWW benÃ¶tigt, info kann von einer einfachen
        Textkonsole gestartet werden. Es wurde von Richard Stallman
        entworfen und ging dem WWW voraus.

    Die Softwarepakete Â»dwwwÂ«, Â»dhelpÂ« und Â»doccentralÂ« erfassen eine
Â Â Â  Menge Dokumentation und machen sie Ã¼ber einen Browser zugÃ¤nglich.
    Auch hinter Â»yelpÂ« steht die Idee, in verschiedenen Formaten
    vorliegende Dokumentation einem zentralen Programm zuzufÃ¼hren.

12.2. Wo und wie kann man sich online Ã¼ber Debian austauschen?

    Ja. Die UnterstÃ¼tzung, die Debian seinen Benutzern bietet,
Â Â Â  erfolgt hauptsÃ¤chlich Ã¼ber E-Mail. Dazu hier einige Einzelheiten
    und Anlaufstellen. Weitere listet Debians UnterstÃ¼tzungs-Webseite
    (https://www.debian.org/support) auf.

12.2.1. Mailinglisten

Â Â Â  Es gibt eine Reihe von Debian betreffenden Mailinglisten (https:/
    /www.debian.org/MailingLists/) .

    In einem System, auf dem das doc-debian-Paket installiert ist,
Â Â Â  finden Sie eine vollstÃ¤ndige Auflistung der Mailinglisten in /usr
    /share/doc/debian/mailing-lists.txt.

    Debian-Mailinglisten sind nach debian-Listenbetreff benannt.
    Beispiele hierfÃ¼r sind debian-announce (fÃ¼r AnkÃ¼ndigungen),
    debian-user (fÃ¼r Benutzer) oder debian-news (fÃ¼r Neuigkeiten). Um
    eine Liste wie debian-Listenbetreff zu abonnieren, senden Sie
Â Â Â  eine E-Mail an debian-Listenbetreff-request@lists.debian.org mit
    dem Wort Â»subscribeÂ« (anmelden) im Betreff. Vergessen Sie zum An-
    oder Abmelden das -request in der E-Mail-Adresse nicht, sonst
    geht die E-Mail an die Liste selbst, was entweder peinlich oder
    Ã¤rgerlich sein kÃ¶nnte, je nach Sichtweise.

    Sie kÃ¶nnen die Mailingliste auch abonnieren, indem Sie das
Â Â Â  Web-Formular (https://www.debian.org/MailingLists/subscribe)
    benutzen. Auch zum Abmelden gibt es ein Formular (https://
    www.debian.org/MailingLists/unsubscribe) .

Â Â Â  Bei Problemen kann der Listenverwalter unter der E-Mail-Adresse <
    listmaster@lists.debian.org> kontaktiert werden.

    Die meisten Mailinglisten sind Ã¶ffentliche Foren. Alle an diese
    Listen geschickten Mails landen auch im Ã¶ffentlichen Archiv,
    worin jeder - selbst ohne Anmeldung - stÃ¶bern oder systematisch
    suchen kann. Senden Sie keinesfalls vertrauliches oder unter dem
    Urheberrecht Dritter stehendes Material an diese Listen. Darunter
Â Â Â  fallen auch E-Mail-Adressen. Besonders zu beachten ist die
    Tatsache, dass Spammer dafÃ¼r bekannt sind, E-Mail-Adressen zu
    missbrauchen, die in unseren Mailinglisten verÃ¶ffentlicht werden.
    Weitere Informationen sind in den Datenschutzrichtlinien fÃ¼r
    Mailinglisten (https://www.debian.org/MailingLists/index#
    disclaimer) zu finden.

Â Â Â  Archive der Debian-Mailinglisten sind im WWW unter https://
    lists.debian.org/ (https://lists.debian.org/) verfÃ¼gbar.

12.2.1.1. Was sind die Verhaltensregeln fÃ¼r die Mailinglisten?

Â Â Â  Beim Benutzen der Debian-Mailinglisten sind folgende Regeln zu
    beachten:

      * Spam unerwÃ¼nscht. Weitere Informationen unter Verfahrensweise
        mit Werbung auf Debians Mailinglisten (https://www.debian.org
        /MailingLists/#ads) .

      * Nicht beleidigend werden, das ist unhÃ¶flich. Die Entwickler
        von Debian sind Freiwillige, die ihre Zeit, Energie und ihr
        Geld dafÃ¼r einsetzen, das Debian-Projekt voranzubringen.

Â Â Â    * Keine schmutzige Sprache verwenden; auÃŸerdem erhalten einige
        Leute diese Listen Ã¼ber Funk, wo Fluchen illegal ist.

      * Die richtige Liste wÃ¤hlen. Nie Anfragen zur An- und Abmeldung
        an die Mailingliste selbst schicken.^[7]

      * Informationen darÃ¼ber, wie Fehler gemeldet werden, sind im
        Abschnitt AbschnittÂ 12.5, â€žWie melde ich einen Fehler in
        Debian?â€œ zu finden.

12.2.2. Web-Foren

    debianHELP (https://debianhelp.org/) und Debian User Forums
    (http://forums.debian.net/) sind Web-Foren, wo Sie Fragen Ã¼ber
Â Â Â  Debian stellen kÃ¶nnen; sie werden von anderen Benutzern
    beantwortet. (Diese Foren sind nicht offizieller Teil des
    Debian-Projekts.)

12.2.3. Wiki

    LÃ¶sungen fÃ¼r weitverbreitete Probleme, Howtos, Anleitungen, Tipps
Â Â Â  und weitere Dokumentation finden Sie im Debian Wiki (https://
    wiki.debian.org/) , das laufenden Ã„nderungen (auch durch Benutzer
    selbst) unterworfen ist.

12.2.4. Betreuer

    Benutzer kÃ¶nnen ihre Fragen per E-Mail an die jeweiligen
Â Â Â  Paketbetreuer schicken. Um den Verantwortlichen des Pakets xyz zu
    erreichen, senden Sie eine E-Mail an xyz@packages.debian.org.

12.2.5. Usenet-Nachrichtengruppen (Newsgroups)

    Nicht auf Debian bezogene Fragen sollten auf einer der Linux
    USENET-Gruppen mit Namen comp.os.linux.* oder linux.* gestellt
    werden. Dort gibt es diverse Listen von Linux
Â Â Â  Usenet-Nachrichtengruppen. Hinzu kommen weitere Anlaufstellen im
    WWW, z.B. auf den Seiten von Linux Online (https://www.linux.org/
    docs/usenet.html) und LinuxJournal (http://www.linuxjournal.com/
    helpdesk.php) .

12.3. Gibt es einen schnellen Weg, um nach Informationen Ã¼ber Debian
GNU/Linux zu suchen?

Â Â Â  Es gibt eine Vielfalt von Suchmaschinen, die Dokumentation mit
    Bezug zu Debian liefern:

      * Die Suche auf der Debian-Website (https://search.debian.org/)
        .

      * Google Groups (https://groups.google.com/) : eine
        Suchmaschine fÃ¼r Newsgroups.

        Um zum Beispiel herauszufinden, welche Erfahrungen Leute bei
        der Suche nach Treibern fÃ¼r NVIDIA-Grafikkarten unter Debian
        gemacht haben, kÃ¶nnen Sie nach NVIDIA Linux driver suchen. So
        werden alle EintrÃ¤ge angezeigt, die diese Zeichenfolgen
Â Â Â      enthalten, das heiÃŸt jene, in denen Ã¼ber dieses Thema
        diskutiert wurde. Wenn Debian dieser Suchanfrage hinzugefÃ¼gt
        wird, werden auch die EintrÃ¤ge angezeigt, die
        Debian-spezifisch sind.

      * Jede andere Suchmaschine, wie z.B. DuckDuckGo (https://
        duckduckgo.com/) oder Google (https://www.google.com/) ,
        solange Sie die richtigen Suchbegriffe eingeben.

        Zum Beispiel kÃ¶nnen Sie mit der Suchanfrage Â»evinceÂ« eine
        viel genauere ErklÃ¤rung Ã¼ber dieses Paket finden, als im
        kurzen Textfeld in seiner control-Datei steht.

12.4. Gibt es Protokolle von bekannten Fehlern?

    Sowohl offene wie auch bereits erledigte Fehlerberichte sind frei
    zugÃ¤nglich. Dies ist ein Versprechen, wie auch im
Â Â Â  Debian-Gesellschaftsvertrag (https://www.debian.org/
    social_contract) zu lesen ist: Â»Wir werden keine Probleme
    verheimlichenÂ«.

    Debian GNU/Linux hat ein System zur Meldung und Statuskontrolle
    von Fehlern eingerichtet, das Â»Bug Tracking SystemÂ«, abgekÃ¼rzt
Â Â Â  BTS. Dieses fÃ¼hrt von Entwicklern und Benutzern Ã¼bermittelte
    Fehler und dazugehÃ¶rende Details einer Datenbank zu, wo sie auch
    eine Nummer erhalten. Sobald das Problem gelÃ¶st ist, wird der
    Fehlerbericht geschlossen.

Â Â Â  Kopien dieser Informationen sind erhÃ¤ltlich unter https://
    www.debian.org/Bugs/ (https://www.debian.org/Bugs/) .

    Ein E-Mail-Server ermÃ¶glicht per E-Mail Zugang zur
Â Â Â  Fehlerdatenbank. Um Anweisungen fÃ¼r dessen Nutzung zu erhalten,
    senden Sie eine E-Mail an <request@bugs.debian.org> mit Â»helpÂ« im
    Textteil der Mail.

12.5. Wie melde ich einen Fehler in Debian?

    Wenn Sie einen Fehler in Debian gefunden haben, sollten Sie die
Â Â Â  Anweisungen dazu lesen, wie ein Fehler in Debian gemeldet wird.
    Diese Anweisungen sind auf verschiedene Arten erhÃ¤ltlich:

      * Ãœber das WWW. Eine Kopie der Anweisungen ist unter https://
        www.debian.org/Bugs/Reporting (https://www.debian.org/Bugs/
        Reporting) zu finden.

Â Â Â    * Auf jedem Debian-System, auf dem das doc-debian-Paket
        installiert ist, finden sie die Anweisungen in der Datei /usr
        /share/doc/debian/bug-reporting.txt.

      * Durch anonymes FTP. Debian-Spiegelserver enthalten die
        Anweisungen in der Datei doc/bug-reporting.txt.

    Das Paket reportbug kann benutzt werden, es fÃ¼hrt Sie durch den
    Prozess und schickt die Nachricht an die richtige Adresse;
    auÃŸerdem werden automatisch einige zusÃ¤tzliche Details Ã¼ber Ihr
Â Â Â  System beifÃ¼gt. Auch zeigt es eine Liste der bereits fÃ¼r das
    Paket gemeldeten Fehler an; so kÃ¶nnen fÃ¼r den Fall, dass der
    Fehler bereits gemeldet wurde, dem existierenden Fehlerbericht
    zusÃ¤tzliche Informationen hinzugefÃ¼gt werden.

    Es wird eine automatische EmpfangsbestÃ¤tigung zum Fehlerbericht
Â Â Â  an Sie verschickt. Der Bericht bekommt automatisch eine Nummer
    zur Fehlerverfolgung, wird der Fehlerdatenbank hinzugefÃ¼gt und an
    die debian-bugs-dist-Mailingliste weitergeleitet.


---------------------------------------------------------------------

Â Â Â  ^[7] Die Adresse debian-Listenbetreff-REQUEST@lists.debian.org
    ist dafÃ¼r zu benutzen.

Kapitel 13. Zum Debian-Projekt beitragen

    Sie kÃ¶nnen verschiedene Dinge spenden (https://www.debian.org/
    donations) , um Debian zu helfen: etwa Zeit, um neue Pakete zu
    entwickeln, vorhandene zu betreuen oder Benutzer zu unterstÃ¼tzen;
Â Â Â  Ressourcen, um die FTP- und WWW-Archive zu spiegeln, oder Geld,
    um neue Testsysteme oder Hardware fÃ¼r die Archive kaufen zu
    kÃ¶nnen. Lesen Sie auch Wie kÃ¶nnen Sie Debian helfen? (https://
    www.debian.org/intro/help) .

13.1. Wie kann ich Debian-Mitglied/Debian-Entwickler werden?

    Die Entwicklung von Debian ist fÃ¼r jeden zugÃ¤nglich. Es werden
    immer neue Benutzer mit den entsprechenden FÃ¤higkeiten und/oder
    dem Willen zu lernen gesucht. So kÃ¶nnen Sie die Pflege eines
Â Â Â  existierenden, Â»verwaistenÂ« Paketes Ã¼bernehmen, dessen vorheriger
    Betreuer sich von der Paketpflege zurÃ¼ckgezogen hat. AuÃŸerdem
    gilt es, neue Pakete zu entwickeln, Dokumentation oder
    Ãœbersetzungen zu verfassen, die Debian-Website zu betreuen oder
    Benutzer bei Problemen zu unterstÃ¼tzen.

    Wie man ein Debian-Mitglied wird, ist auf der Debian-Website in
Â Â Â  der Ecke fÃ¼r neue Mitglieder (https://www.debian.org/devel/join/
    newmaint) beschrieben.

13.2. Wie kann ich Ressourcen zum Debian-Projekt beisteuern?

    Da das Projekt versucht, eine betrÃ¤chtliche Menge von Software
    weltweit rasch und einfach zugÃ¤nglich zu machen, werden
    Spiegel-Server benÃ¶tigt. Es ist wÃ¼nschenswert, aber nicht
Â Â Â  unbedingt notwendig, alle Debian-Archive zu spiegeln. Bitte
    besuchen Sie die Seite Ã¼ber die GrÃ¶ÃŸe der Spiegel-Server (https:/
    /www.debian.org/mirror/size) , um Informationen Ã¼ber den
    benÃ¶tigten Speicherplatz zu erhalten.

    Skripte erledigen den Vorgang des Spiegelns weitgehend
Â Â Â  automatisch. Vereinzelte Pannen oder SystemÃ¤nderungen kÃ¶nnen
    allerdings menschliches Eingreifen erforderlich machen.

    Wenn Sie Ã¼ber eine Breitband-Verbindung zum Internet verfÃ¼gen,
    die Ressourcen haben, um die Distribution oder einen Teil davon
Â Â Â  zu spiegeln, die Zeit fÃ¼r die regelmÃ¤ÃŸige Wartung des Systems
    entweder selbst aufbringen wollen oder dieses jemandem antragen
    kÃ¶nnen, dann melden Sie sich bitte unter <
    debian-admin@lists.debian.org>.

13.3. Wie kann ich das Debian-Projekt finanziell unterstÃ¼tzen?

    Durch Spenden von Sponsoren gelangt das Debian-Projekt an Rechner
    und andere Hardware, kann Konferenzen und Arbeitstreffen fÃ¼r
Â Â Â  Entwickler veranstalten und weitere Vorhaben umsetzen. Weitere
    Informationen finden Sie auf Debians Spenden-Website (https://
    www.debian.org/donations) . Dort sind auch die unterschiedlichen
    Methoden aufgelistet, mittels derer Sie spenden kÃ¶nnen.

    Es kÃ¶nnen individuelle Spenden an zwei fÃ¼r das Debian-Projekt
Â Â Â  sehr wichtige Organisationen eingereicht werden. Die
    Hauptorganisation ist Â»Software in the Public InterestÂ« in den
    Vereinigten Staaten, aber es gibt noch weitere.

13.3.1. Software in the Public Interest

    Software in the Public Interest (SPI) ist eine nach IRS 501(c)(3)
Â Â Â  gemeinnÃ¼tzige Organisation. Die Aufgabe der Organisation ist es,
    Freie Software zu entwickeln und zu verteilen.

    Sie ermutigt Programmierer, die GNU General Public License oder
    eine andere Lizenz, welche die freie Weiterverbreitung und
Â Â Â  Nutzung von Software erlaubt, zu verwenden. Herstellern von
    Hardware legt sie nahe, zu Ihren GerÃ¤ten Dokumentation
    bereitzustellen, um die Entwicklung von Treibern zu ermÃ¶glichen.

    SPI ist eine steuerrechtlich als begÃ¼nstigt anerkannte
Â Â Â  Dachorganisation fÃ¼r viele freie und Open-Source-Projekte. Das
    Debian-Projekt war seit der GrÃ¼ndung von SPI ein assoziiertes
    Mitglied.

Â Â Â  Sie kÃ¶nnen SPI Ã¼ber https://www.spi-inc.org/ (https://
    www.spi-inc.org/) erreichen.

13.3.2. Weitere Organisationen

    Es gibt mehrere Organisationen in verschiedenen LÃ¤ndern, die
    VermÃ¶gen treuhÃ¤ndisch fÃ¼r Debian verwalten. Die Spendenseite
    (https://www.debian.org/donations) listet diese Organisationen
    auf, an die auch Spenden gerichtet werden kÃ¶nnen. Als dies
    geschrieben wurde, gab es drei solche Organisationen: den Verein
Â Â Â  zur FÃ¶rderung Freier Informationen & Software (ffis e.V.) (http:/
    /www.ffis.de/) in Deutschland, die Debian France Association
    (https://france.debian.net/) in Frankreich und debian.ch (https:/
    /debian.ch/ ) (Schweiz und das FÃ¼rstentum Liechtenstein). Weitere
    Partnerorganisationen in anderen LÃ¤ndern sind auf der
    Organizations-Seite (https://wiki.debian.org/Teams/Auditor/
    Organizations) im Debian Wiki zu finden.

Kapitel 14. Debian GNU/Linux in einem kommerziellen Produkt verwenden

14.1. Darf ich Debian-CDs erstellen und verkaufen?

    Ja, das dÃ¼rfen Sie. Sobald die Beta-Tests beendet sind, kÃ¶nnen
    Sie Ihre CD erstellen und alles, was wir freigegeben haben, ohne
    weitere Zustimmung unsererseits verÃ¶ffentlichen. Sie mÃ¼ssen
Â Â Â  nichts an uns zahlen. NatÃ¼rlich mÃ¼ssen alle CD-Hersteller die
    Lizenzen der Programme in Debian anerkennen. Viele der Programme
    sind z.B. unter der GPL-Lizenz verÃ¶ffentlicht, welche verlangt,
    dass die Quelltexte verÃ¶ffentlicht werden.

    CD-Hersteller, die Geld, Software und Zeit zum Debian-Projekt
    beitragen, werden von uns in einer Liste verÃ¶ffentlicht. AuÃŸerdem
Â Â Â  ermuntern wir die Benutzer dazu, bei Herstellern zu kaufen, die
    auch an Debian spenden. Man sieht also, es ist eine gute Werbung,
    zu spenden.

14.2. Kann Debian mit unfreier Software (non-free) paketiert werden?

    Ja. WÃ¤hrend alle Haupt-Komponenten von Debian Freie Software
Â Â Â  sind, stellen wir ein non-free-Verzeichnis fÃ¼r Programme bereit,
    die nicht frei verbreitet werden dÃ¼rfen.

    Programme, die wir in diesem Verzeichnis ablegen, kÃ¶nnen (unter
    BerÃ¼cksichtigung der entsprechenden Lizenzbedingungen oder mit
    Zustimmung der jeweiligen Autoren) von CD-Herstellern verbreitet
    werden. Genauso ist es CD-Herstellern gestattet, unfreie Software
Â Â Â  aus anderen Quellen auf derselben CD in Umlauf zu bringen. Das
    Verteilen von unfreier und kommerzieller Software auf ein- und
    derselben CD ist nichts Neues und wird von vielen Herstellern
    praktiziert. SelbstverstÃ¤ndlich legen wir Software-Entwicklern
    nahe, die von ihnen geschriebene Software als freie Software zu
    verÃ¶ffentlichen.

14.3. Ich erstelle eine spezielle Linux-Distribution fÃ¼r einen
speziellen Anwendungsbereich. Kann ich Debian GNU/Linux als
Linux-Grundsystem verwenden und meine eigenen Programme hinzufÃ¼gen?

    Ja, das ist mÃ¶glich. Von Debian abgeleitete Distributionen werden
    zum Einen in enger Zusammenarbeit mit dem Debian-Projekt selbst
    und zum Anderen von auÃŸenstehenden Beteiligten erstellt. Dazu
Â Â Â  kann das Debian Pure Blends (https://www.debian.org/blends/)
    -Rahmenwerk verwendet werden, um mit Debian zusammen zu arbeiten.
    DebianEdu/Skolelinux (https://wiki.debian.org/DebianEdu/) ist
    z.B. ein solches Projekt.

    Es gibt bereits viele angepasste Debian-Distributionen auf dem
    Markt wie grml, LMDE (Linux Mint Debian Edition), Knoppix und
Â Â Â  Ubuntu, die alle eine andere Zielsetzung als das Original-Debian
    GNU/Linux-Projekt haben und trotzdem die meisten unserer
    Komponenten in ihren Produkten verwenden.

    Debian weist einen Mechanismus auf, der es Entwicklern und
    Systemadministratoren erlaubt, lokale Versionen bestimmter
    Dateien so zu installieren, dass sie bei einer
Â Â Â  Systemaktualisierung nicht Ã¼berschrieben werden. NÃ¤heres dazu
    finden Sie in AbschnittÂ 11.9, â€žWie kann ich eine durch ein Paket
    installierte Datei auÃŸer Kraft setzen, so dass stattdessen eine
    andere Version verwendet werden kann?â€œ.

14.4. Kann ich mein kommerzielles Programm in einem Debian-Â»PaketÂ«
ablegen, damit es auf jedem Debian-System mÃ¼helos installiert werden
kann?

    Das ist mÃ¶glich. Das Paketwerkzeug ist Freie Software: Die Pakete
Â Â Â  kÃ¶nnen freie oder unfreie Software sein, es kann sie alle
    installieren.

Kapitel 15. Zu erwartende Ã„nderungen in der nÃ¤chsten Hauptversion von
Debian

    Mit jeder neuen VerÃ¶ffentlichung versucht das Debian-Projekt, den
    Fokus auf bestimmte Themen zu legen. Diese sind bekannt als
    Â»Release GoalsÂ« und werden unter https://wiki.debian.org/
Â Â Â  ReleaseGoals/ (https://wiki.debian.org/ReleaseGoals/) nÃ¤her
    beschrieben. Bitte beachten Sie, dass die folgenden Abschnitte
    unter UmstÃ¤nden nicht ganz aktuell sind; lesen Sie daher die
    Wiki-Seite, wenn Sie mehr Informationen oder einen aktuellen
    Status dieser Â»Release-GoalsÂ« benÃ¶tigen.

15.1. HÃ¤rten des Systems

    Es ist ein erklÃ¤rtes Ziel des Debian-Projekts, sicherzustellen,
Â Â Â  dass jedes installierte System gehÃ¤rtet und sicher ist gegen
    Angriffe. Es gibt mehrere MÃ¶glichkeiten, dies zu erreichen, unter
    anderem:

      * Die Sicherheit innerhalb der Programme erhÃ¶hen, indem die
        Security Hardening Build Flags (https://wiki.debian.org/
        ReleaseGoals/SecurityHardeningBuildFlags) verwendet werden;
        durch diese speziellen Optionen fÃ¼r den Bau der Pakete werden
        verschiedene Schutzmechanismen gegen bekannte
        SicherheitslÃ¼cken aktiviert.
Â Â Â 
      * Die Standard-Systemkonfiguration verbessern, um sie weniger
        verwundbar gegen Angriffe (sowohl lokale wie auch solche von
        fern) zu machen.

      * Aktivieren der Sicherheitsfunktionen, die in neuen
        Kernel-Versionen enthalten sind.

    All dies ist ein stÃ¤ndig fortlaufender Prozess. Beim ersten Punkt
    wird versucht, mit verschiedenen Build-Optionen zum HÃ¤rten des
    Systems (den Security Hardening Build Flags) bekannte Angriffe
    wie z.B. mittels PufferÃ¼berlauf, vorhersagbaren Adressbereichen
    im Arbeitsspeicher usw. zu verhindern. Ziel ist, zumindest alle
    Pakete abzudecken, die Teil der Basisinstallation sind sowie all
Â Â Â  diejenigen, die seit 2006 eine Korrektur in Zusammenhang mit
    einer SicherheitsankÃ¼ndigung erhalten haben. Seit dem Start der
    Initiative sind bereits rund 400 Pakete entsprechend modifiziert
    worden (Stand der Information zum Zeitpunkt, als dies geschrieben
    wurde). All diese Korrekturen sind in der Fehlerdatenbank
    festgehalten (https://bugs.debian.org/cgi-bin/pkgreport.cgi?tag=
    goal-hardening;users=hardening-discuss@lists.alioth.debian.org) .

15.2. Erweiterte UnterstÃ¼tzung fÃ¼r nicht Englisch sprechende Benutzer

    Die technischen Anforderungen, die damit einhergehen, dass nicht
    Englisch sprechende Benutzer das System bedienen und verwenden
Â Â Â  kÃ¶nnen, werden von Debian bereits weitgehend erfÃ¼llt, siehe
    AbschnittÂ 5.9, â€žWie unterstÃ¼tzt Debian andere Sprachen als
    Englisch?â€œ.

    Wir hoffen, weitere Personen zu finden, die uns helfen, mehr
    Sprachen zu unterstÃ¼tzen und Programme sowie Dokumentation in
    diese Sprachen zu Ã¼bersetzen. Viele Programme und
Â Â Â  Debian-spezifische Dokumentation unterstÃ¼tzen bereits die
    Internationalisierung, so dass wir jetzt Ãœbersetzer fÃ¼r die
    Programmtexte und Meldungen benÃ¶tigen. Allerdings sind bei
    einigen Programmen auch weiterhin die Voraussetzungen zur
    Internationalisierung nicht erfÃ¼llt.

    Das GNU Translation Project ftp://ftp.gnu.org/pub/gnu/ABOUT-NLS
    (ftp://ftp.gnu.org/pub/gnu/ABOUT-NLS) arbeitet an der
    Internationalisierung von GNU-Programmen. Verschiedene Projekte
    wie die Desktop-Umgebungen GNOME oder KDE haben eigene
Â Â Â  Ãœbersetzer-Teams. Ziel von Debian ist nicht, die Arbeit dieser
    Projekte zu ersetzen oder zu duplizieren; im Gegenteil: Debian
    profitiert von der Arbeit dieser Ãœbersetzer. Allerdings gibt es
    auÃŸerhalb des TÃ¤tigkeitfeldes dieser Projekte noch viele
    Programme, weswegen sie innerhalb von Debian Ã¼bersetzt werden.

Â Â Â  FrÃ¼here Debian-Versionen hatten folgende VerÃ¶ffentlichungsziele:

      * I18n-UnterstÃ¼tzung fÃ¼r alle Pakete, die debconf verwenden:
        FÃ¼r Pakete, die das Debian-Konfigurations-Management
        verwenden, wird vorausgesetzt, dass sie vorbereitet sind fÃ¼r
        die Ãœbersetzung aller Dialoge, die dem Benutzer wÃ¤hrend der
        Konfiguration angezeigt werden.

      * I18n-UnterstÃ¼tzung fÃ¼r Paketbeschreibungen: Erweitern der
        Paketmanagement-Programme, um Ã¼bersetzte Paketbeschreibungen
        nutzen zu kÃ¶nnen.
Â Â Â 
      * Verwendung der UTF-8-Codierung fÃ¼r die Dateien debian/
        changelog und debian/control. So kÃ¶nnen beispielsweise in
        ersterer Datei, in der SoftwareÃ¤nderungen rÃ¼ckzuverfolgen
        sind, Projektbeteiligte aus asiatischen LÃ¤ndern ihre Namen
        ohne Komplikationen eintragen.

      * Internationalisierung des Debian-Installers, was fÃ¼r gewisse
        Sprachen die Verwendung einer grafischen OberflÃ¤che
        erfordert.

15.3. Verbesserungen im Debian Installer

    Eine Menge Arbeit ist in das Debian-Installationsprogramm
Â Â Â  gesteckt worden, was zu einer Reihe grÃ¶ÃŸerer Verbesserungen
    gefÃ¼hrt hat. Hier sollen zwei davon aufgefÃ¼hrt werden:

    Die MÃ¶glichkeit einer direkt vom laufenden Microsoft Windows
    angestossenen Installation, wodurch es sich erÃ¼brigt,
Â Â Â  BIOS-Einstellungen zu verÃ¤ndern. Nach dem Einlegen einer CD-ROM,
    DVD-ROM oder dem Einstecken eines USB-Sticks wird automatisch ein
    Programm ausgefÃ¼hrt, das eine Schritt-fÃ¼r-Schritt-Anleitung zum
    Start des Debian Installers bietet.

15.4. Weitere (Rechner-)Architekturen

    VervollstÃ¤ndigung von Debian fÃ¼r andere Architekturen. Hinweis:
    Selbst wenn manche Architekturen in einzelnen
Â Â Â  Debian-VerÃ¶ffentlichungen nicht enthalten sind, besteht unter
    UmstÃ¤nden trotzdem die MÃ¶glichkeit, Debian auf dieser Architektur
    zu installieren bzw. zu aktualisieren, indem Sid (Unstable)
    benutzt wird.

15.5. Weitere Kernel

    ZusÃ¤tzlich zu Debian GNU/Hurd wird Debian auch auf BSD-Kernel
    portiert, insbesondere auf FreeBSD (https://www.debian.org/ports/
Â Â Â  kfreebsd-gnu/) . Dieser Port lÃ¤uft sowohl auf AMD64
    (Â»kfreebsd-amd64Â«) als auch auf traditionellen Intel-Prozessoren
    (Â»kfreebsd-i386Â«).

Kapitel 16. Allgemeine Informationen Ã¼ber die FAQ

16.1. Autoren

    Die erste Version dieser FAQ wurde erstellt und betreut von
    J.H.M. Dassen (Ray) und Chuck Stickelman. Autoren der
Â Â Â  Ã¼berarbeiteten Debian GNU/Linux-FAQ sind Susan G. Kleinmann und
    Sven Rudolph. Danach wurde die FAQ von Santiago Vila und spÃ¤ter
    von Josip Rodin betreut. Der derzeitige Betreuer ist Javier
    Fernandez-Sanguino.

Â Â Â  Teile der Informationen stammen aus:

      * der Debian-1.1-VerÃ¶ffentlichungsankÃ¼ndigung, von Bruce Perens
        (https://perens.com/) ,

      * der Linux-FAQ, von Ian Jackson (https://
        www.chiark.greenend.org.uk/~ijackson/) ,

      * den Archiven der Debian-Mailinglisten (https://
        lists.debian.org/) ,

      * dem dpkg-Programmiererhandbuch und dem Debian-Policy-Handbuch
        (siehe AbschnittÂ 12.1, â€žWelche andere Dokumentation gibt es
Â Â Â      auf einem und fÃ¼r ein Debian-System?â€œ),

      * sowie von vielen Entwickler, Freiwilligen und Beta-Testern,

      * aus den lÃ¶chrigen Gehirnen der Autoren :-)

      * und aus dem Ratgeber Choosing a Debian distribution FAQ
        (http://KamarajuKusumanchi.github.io/
        choosing_debian_distribution/
        choosing_debian_distribution.html) , den Kamaraju Kusumanchi
        gnÃ¤digerweise unter der GPL freigegeben hat, so dass er als
        neues Kapitel in diese FAQ eingefÃ¼gt werden konnte (siehe
        KapitelÂ 3, Eine Debian-Distribution auswÃ¤hlen).

    Die Autoren mÃ¶chten sich bei allen bedanken, die dieses Dokument
    mÃ¶glich gemacht haben. Die deutsche Ãœbersetzung stammt von
    Christian Britz, Nico Golde, Claas Felix Beyersdorf, Andre Appel,
Â Â Â  Franziska SchrÃ¶der, Jonas E. Huber, Martin Horoba, Helge
    Kreutzmann, Jens Seidel und Benjamin Eckenfels. Sie wurde in 2015
    aktualisiert von Holger Wansing, mit tatkrÃ¤ftiger UnterstÃ¼tzung
    durch Markus Hiereth. Bitte senden Sie Fehler in der Ãœbersetzung
    an <debian-l10n-german@lists.debian.org>.

Â Â Â  Jegliche Haftung wird ausgeschlossen. Alle Markenzeichen sind das
    Eigentum ihrer entsprechenden EigentÃ¼mer.

16.2. Feedback

    Kommentare und ErgÃ¤nzungen zu diesem Dokument sind immer
    willkommen. Bitte senden Sie eine E-Mail an <
Â Â Â  doc-debian@packages.debian.org> oder schreiben Sie einen
    wishlist-Fehlerbericht fÃ¼r das Paket debian-faq (https://
    bugs.debian.org/debian-faq) .

16.3. VerfÃ¼gbarkeit

    Die neueste Version dieses Dokuments finden Sie auf den Debian
Â Â Â  WWW-Seiten unter https://www.debian.org/doc/FAQ/ (https://
    www.debian.org/doc/FAQ/) .

    AuÃŸerdem ist die FAQ zum Download im Text-, HTML- und PDF-Format
Â Â Â  unter https://www.debian.org/doc/user-manuals#faq (https://
    www.debian.org/doc/user-manuals#faq) verfÃ¼gbar. Dort sind auch
    einige Ãœbersetzungen zu finden.

    Sie kÃ¶nnen dieses Dokument Ã¼ber das Debian-Paket debian-faq
Â Â Â  installieren. Ãœbersetzungen sind erhÃ¤ltlich Ã¼ber debian-faq-de,
    debian-faq-fr und weitere Pakete.

    Die XML-Dateien, aus denen dieses Dokument generiert wurde, sind
    auch im Quellpaket debian-faq oder im GIT verfÃ¼gbar:
Â Â Â  git@salsa.debian.org:ddp-team/debian-faq.git und https://
    salsa.debian.org/ddp-team/debian-faq (https://salsa.debian.org/
    ddp-team/debian-faq) .

16.4. Dokumentenformat

    Dieses Dokument wurde mit der DocBook-XML-DTD geschrieben. Dieses
    System ermÃ¶glicht es, Dateien in vielen verschiedenen Formaten
Â Â Â  aus einer einzigen Quelldatei zu erstellen; z.B. kann dieses
    Dokument als HTML, Text, TeX-DVI, PostScript, PDF oder GNU-Info
    angezeigt werden.
